{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Investments/ViewInvestments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Investments/ViewInvestments.vue","mtime":1599038838863},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL3V0aWwuanMnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1ZpZXdJbnZlc3RtZW50cycsCiAgICBwcm9wczogWwogICAgICAgICdpbnZlc3RtZW50c0l0ZW1pemVkJywgJ2luY29tZXNJdGVtaXplZCcsCiAgICAgICAgJ25ldFN1bScsICdleHBlbnNlU3VtJywgJ3VuYWxsb2NhdGVkU3VtJywgJ2ludmVzdG1lbnRTdW0nLAogICAgICAgICdtb2RlJwogICAgXSwKICAgIGRhdGEgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHV0aWw6IHV0aWwsCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBlZGl0SW52ZXN0bWVudDogZnVuY3Rpb24gKGlkeCkgewogICAgICAgICAgICB0aGlzLiRlbWl0KCdlZGl0SW52ZXN0bWVudCcsIGlkeCk7CiAgICAgICAgfSwKICAgICAgICB1bmVkaXRhYmxlSW52ZXN0bWVudDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBhbGVydCgiRWRpdCB0YXgtZXhlbXB0IGNvbnRyaWJ1dGlvbnMgdXNpbmcgdGhlICdJbmNvbWVzJyBpbnRlcmZhY2UgYXQgdGhlIHRvcCBvZiB0aGUgcGFnZS4iKTsKICAgICAgICB9LAogICAgICAgIHBvcHVsYXRlSW52ZXN0bWVudDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGlzLiRlbWl0KCdwb3B1bGF0ZUludmVzdG1lbnQnKTsKICAgICAgICB9LAogICAgICAgIGRpc3BsYXlFeGVtcHRpb246IGZ1bmN0aW9uIChleGVtcHRpb24pIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudXRpbC5mb3JtYXRNb25leShleGVtcHRpb24udmFsdWUgKyBleGVtcHRpb24ubWF0Y2gsIHRoaXMubW9kZSk7CiAgICAgICAgfSwKICAgICAgICBnZXRFeGVtcHRpb25Ub29sdGlwOiBmdW5jdGlvbiAoZXhlbXB0aW9uKSB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IHRoaXMudXRpbC5mb3JtYXRNb25leShleGVtcHRpb24udmFsdWUsIHRoaXMubW9kZSk7CiAgICAgICAgICAgIGxldCBtYXRjaCA9IHRoaXMudXRpbC5mb3JtYXRNb25leShleGVtcHRpb24ubWF0Y2gsIHRoaXMubW9kZSk7CiAgICAgICAgICAgIHJldHVybiBgJHtleGVtcHRpb24ubGFiZWx9ID0gQ29udHJpYnV0aW9uICgke3ZhbHVlfSkgKyBFbXBsb3llZSBNYXRjaCAoJHttYXRjaH0pYDsKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBidWRnZXRUb29sdGlwICgpIHsKICAgICAgICAgICAgdmFyIHRpcCA9IGBCdWRnZXQgKCR7dXRpbC5mb3JtYXRNb25leSh0aGlzLnVuYWxsb2NhdGVkU3VtLCB0aGlzLm1vZGUpfSkgPSBgOwogICAgICAgICAgICB0aXAgKz0gYE5ldCBJbmNvbWUgKCR7dXRpbC5mb3JtYXRNb25leSh0aGlzLm5ldFN1bSwgdGhpcy5tb2RlKX0pIC0gYDsKICAgICAgICAgICAgdGlwICs9IGBFeHBlbnNlcyAoJHt1dGlsLmZvcm1hdE1vbmV5KHRoaXMuZXhwZW5zZVN1bSwgdGhpcy5tb2RlKX0pIC0gYDsKICAgICAgICAgICAgdGlwICs9IGBJbnZlc3RtZW50cyAoJHt1dGlsLmZvcm1hdE1vbmV5KHRoaXMuaW52ZXN0bWVudFN1bSwgdGhpcy5tb2RlKX0pYDsKICAgICAgICAgICAgcmV0dXJuIHRpcDsKICAgICAgICB9LAogICAgICAgIGludmVzdG1lbnRUb29sdGlwICgpIHsKICAgICAgICAgICAgdmFyIHRpcCA9IGBFeHBlbnNlcyAoJHt1dGlsLmZvcm1hdE1vbmV5KHRoaXMuaW52ZXN0bWVudFN1bSwgdGhpcy5tb2RlKX0pID0gYDsKICAgICAgICAgICAgdGhpcy5pbnZlc3RtZW50c0l0ZW1pemVkLmZvckVhY2goaW52ZXN0ID0+IHsKICAgICAgICAgICAgICAgIHRpcCArPSBgJHtpbnZlc3QubGFiZWx9ICgke3V0aWwuZm9ybWF0TW9uZXkoaW52ZXN0LnZhbHVlLCB0aGlzLm1vZGUpfSkgKyBgOwogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLmluY29tZXNJdGVtaXplZC5mb3JFYWNoKGluY29tZSA9PiB7CiAgICAgICAgICAgICAgICBpbmNvbWUuZXhlbXB0aW9ucy5mb3JFYWNoKGV4ZW1wdGlvbiA9PiB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gZXhlbXB0aW9uLnZhbHVlICsgZXhlbXB0aW9uLm1hdGNoOwogICAgICAgICAgICAgICAgICAgIHRpcCArPSBgJHtleGVtcHRpb24ubGFiZWx9ICgke3V0aWwuZm9ybWF0TW9uZXkodmFsdWUsIHRoaXMubW9kZSl9KSArIGA7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KQogICAgICAgICAgICByZXR1cm4gdGlwLnN1YnN0cmluZygwLCB0aXAubGVuZ3RoLTIpOwogICAgICAgIH0sCiAgICAgICAgaGFzSW52ZXN0bWVudHM6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbGV0IGhhcyA9IGZhbHNlOwogICAgICAgICAgICBpZiAodGhpcy5pbnZlc3RtZW50c0l0ZW1pemVkLmxlbmd0aCkgaGFzID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5pbmNvbWVzSXRlbWl6ZWQuZm9yRWFjaChpbmNvbWUgPT4gewogICAgICAgICAgICAgICAgaWYgKGluY29tZS5leGVtcHRpb25zLmxlbmd0aCkgaGFzID0gdHJ1ZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybiBoYXM7CiAgICAgICAgfQogICAgfQp9Cgo="},{"version":3,"sources":["ViewInvestments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ViewInvestments.vue","sourceRoot":"src/components/Investments","sourcesContent":["<template>\n    <div>\n\n        <!-- investments label -->\n        <label>Investments</label>\n        <!-- investments: net - expenses = savings -->\n        <span class=\"float-right\">\n            <span class=\"badge badge-success net-income-badge clickable\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"budgetTooltip\" v-on:click=\"populateInvestment()\">\n                Unallocated<span class=\"desktop-only-inline\">: {{ util.formatMoney(unallocatedSum, mode) }}</span>&nbsp;\n                <span class=\"fa fa-question-circle\"></span>\n            </span>\n            <span class=\"badge badge-success net-income-badge clickable pad\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"investmentTooltip\">\n                Investments<span class=\"desktop-only-inline\">: {{ util.formatMoney(investmentSum, mode) }}</span>&nbsp;\n                <span class=\"fa fa-question-circle\"></span>\n            </span>\n        </span>\n\n        <ul class=\"list-group\">\n\n            <!-- no investments -->\n            <li class=\"list-group-item d-flex justify-content-between align-items-center disabled\" v-if=\"!hasInvestments\">\n                You haven't added any investments yet.\n            </li>\n\n            <!-- investments -->\n            <li class=\"list-group-item d-flex justify-content-between align-items-center clickable\" v-for=\"(investment, idx) in investmentsItemized\" v-bind:key=\"idx\" v-on:click=\"editInvestment(idx)\">\n                <div class=\"row no-gutters income-display\">\n                    <div class=\"col-md-4\">\n                        <span id=\"label\">{{ investment.label }}</span>\n                    </div>\n                    <div class=\"col-md-8\">\n                        <span class=\"badge badge-secondary\">\n                            {{ util.formatMoney(investment.value, mode) }}\n                        </span>\n                    </div>\n                </div>\n            </li>\n\n            <!-- contribution investments -->\n            <span v-for=\"income in incomesItemized\" v-bind:key=\"income.label\">\n                <li class=\"list-group-item d-flex justify-content-between align-items-center clickable\" v-for=\"exemption in income.exemptions\" v-bind:key=\"exemption.label\" v-on:click=\"uneditableInvestment()\">\n                    <div class=\"row no-gutters income-display\">\n                        <div class=\"col-md-4\">\n                            <span id=\"label\">{{ exemption.label }}</span>\n                        </div>\n                        <div class=\"col-md-8\">\n                            <span class=\"badge badge-secondary\" :title=\"getExemptionTooltip(exemption)\">\n                                {{ displayExemption(exemption) }}\n                                <span class=\"fa fa-question-circle\"></span>\n                            </span>\n                        </div>\n                    </div>\n                </li>\n            </span>\n        </ul>\n        <small class=\"form-text text-muted\">\n            Click on an investment to edit or remove it.\n        </small>\n    </div>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'ViewInvestments',\n    props: [\n        'investmentsItemized', 'incomesItemized',\n        'netSum', 'expenseSum', 'unallocatedSum', 'investmentSum',\n        'mode'\n    ],\n    data () {\n        return {\n            util: util,\n        }\n    },\n    methods: {\n        editInvestment: function (idx) {\n            this.$emit('editInvestment', idx);\n        },\n        uneditableInvestment: function () {\n            alert(\"Edit tax-exempt contributions using the 'Incomes' interface at the top of the page.\");\n        },\n        populateInvestment: function () {\n            this.$emit('populateInvestment');\n        },\n        displayExemption: function (exemption) {\n            return this.util.formatMoney(exemption.value + exemption.match, this.mode);\n        },\n        getExemptionTooltip: function (exemption) {\n            let value = this.util.formatMoney(exemption.value, this.mode);\n            let match = this.util.formatMoney(exemption.match, this.mode);\n            return `${exemption.label} = Contribution (${value}) + Employee Match (${match})`;\n        }\n    },\n    computed: {\n        budgetTooltip () {\n            var tip = `Budget (${util.formatMoney(this.unallocatedSum, this.mode)}) = `;\n            tip += `Net Income (${util.formatMoney(this.netSum, this.mode)}) - `;\n            tip += `Expenses (${util.formatMoney(this.expenseSum, this.mode)}) - `;\n            tip += `Investments (${util.formatMoney(this.investmentSum, this.mode)})`;\n            return tip;\n        },\n        investmentTooltip () {\n            var tip = `Expenses (${util.formatMoney(this.investmentSum, this.mode)}) = `;\n            this.investmentsItemized.forEach(invest => {\n                tip += `${invest.label} (${util.formatMoney(invest.value, this.mode)}) + `;\n            })\n            this.incomesItemized.forEach(income => {\n                income.exemptions.forEach(exemption => {\n                    let value = exemption.value + exemption.match;\n                    tip += `${exemption.label} (${util.formatMoney(value, this.mode)}) + `;\n                })\n            })\n            return tip.substring(0, tip.length-2);\n        },\n        hasInvestments: function () {\n            let has = false;\n            if (this.investmentsItemized.length) has = true;\n            this.incomesItemized.forEach(income => {\n                if (income.exemptions.length) has = true;\n            });\n            return has;\n        }\n    }\n}\n\n</script>\n\n\n<style scoped>\n.clickable {\n    cursor:pointer\n}\n.badge {\n    float:right;\n    margin:2px;\n}\n.income-display {\n    width:100%;\n}\n.net-income-badge {\n    float:initial;\n}\n\n@media only screen and (min-width: 540px) {\n    .net-income-badge {\n        margin-right: calc(0.25rem + 15px);\n    }\n}\n\n</style>"]}]}