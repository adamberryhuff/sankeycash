{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Expenses/AddExpense.vue?vue&type=style&index=0&SCOPED=true&lang=css&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Expenses/AddExpense.vue","mtime":1598986395868},{"path":"/home/adam/Desktop/sankycash/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5idG4uYnRuLXByaW1hcnkubW9iaWxlLW9ubHkgewogICAgd2lkdGg6MTAwJTsKfQoKLmJ0bi5kZXNrdG9wLW9ubHkgewogICAgZmxvYXQ6IHJpZ2h0Owp9CgouYnRuLmJ0bi1wcmltYXJ5LmRlc2t0b3Atb25seSB7CiAgICBtYXJnaW4tbGVmdDogLjVyZW07Cn0KCi5idG4ubW9iaWxlLW9ubHkuY2FuY2VsLWJ0biB7CiAgICBmbG9hdDpyaWdodDsKfQoKLnJlbW92ZS1leHBlbnNlIHsKICAgIGNvbG9yOiByZWQ7Cn0KCi5kZXNrdG9wLW9ubHkgLnJlbW92ZS1leHBlbnNlIHsKICAgIHBhZGRpbmctbGVmdDo1cHg7CiAgICBwYWRkaW5nLXJpZ2h0OjE3cHg7Cn0KCgo="},{"version":3,"sources":["AddExpense.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AddExpense.vue","sourceRoot":"src/components/Expenses","sourcesContent":["<template>\n    <form v-on:keydown.enter.prevent=\"\">\n        <!-- expense label -->\n        <div class=\"form-group\">\n            <label>Chart Label</label>\n            <input id=\"new-expense-focus\" v-model=\"label\" type=\"text\" class=\"form-control\" placeholder=\"Label\">\n            <small class=\"form-text text-muted\">\n                The label will be used in the chart: Mortgage, Living Expenses, Car Payment, etc.\n            </small>\n        </div>\n\n        <!-- income stream amount -->\n        <div class=\"form-group\">\n            <label>Amount</label>\n            <input type=\"number\" class=\"form-control\" min=\"1\" v-model=\"value\" placeholder=\"Amount\" v-on:keyup=\"processKeyPress\">\n            <small class=\"form-text text-muted\">\n                The amount ({{ mode }}) you pay annually for this expense.\n            </small>\n        </div>\n        <br class=\"mobile-only\">\n\n        <!-- Submit button -->\n        <button class=\"btn btn-primary desktop-only\" v-on:keyup=\"processKeyPress\" v-on:click.enter.prevent=\"addExpense\">\n            {{ submitText }}\n        </button>\n        <button class=\"btn btn-primary mobile-only\" v-on:keyup=\"processKeyPress\" v-on:click.enter.prevent=\"addExpense\">\n            {{ submitText }}\n        </button>\n        <span v-if=\"expense\">\n            <!-- Delete Button -->\n            <button class=\"btn btn-link desktop-only remove-expense\" v-on:click.enter.prevent=\"deleteExpense\">Delete</button>\n            <button class=\"btn btn-link mobile-only remove-expense\" v-on:click.enter.prevent=\"deleteExpense\">Remove Expense</button>\n            <!-- Cancel Button -->\n            <button class=\"btn btn-link desktop-only\" v-on:click.enter.prevent=\"cancelEdit\">Cancel</button>\n            <button class=\"btn btn-link mobile-only cancel-btn\" v-on:click.enter.prevent=\"cancelEdit\">Cancel Edit</button>\n        </span>\n    </form>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'AddExpense',\n    props: ['unallocatedSum', 'mode', 'expense'],\n    data () {\n        return {\n            // new income stream\n            label: '',\n            value: '',\n        }\n    },\n    methods: {\n        addExpense: function (e) {\n            if (e) e.preventDefault();\n            this.value = parseInt(this.value);\n\n            // validate\n            if (isNaN(this.value) || this.value < 0) {\n                alert('Expense amount must be a positive number!');\n                return;\n            }\n\n            // make sure it's in the budget but take into account edit mode\n            var difstr = this.expense ? 'difference ' : '';\n            var value  = this.expense ? this.value - this.expense.value : this.value;\n            if (value > this.unallocatedSum) {\n                alert(\n                    `Expense ${difstr}must be less than your available budget of ${util.formatMoney(this.unallocatedSum, this.mode)}`\n                );\n                return;\n            }\n\n            // emit\n            this.$emit('addExpense', {\n                label: this.label,\n                value: this.value\n            });\n\n            // reset\n            this.label = '';\n            this.value = '';\n\n            this.focusNewExpense();\n        },\n        cancelEdit: function () {\n            this.$emit('editExpense', false);\n        },\n        deleteExpense: function () {\n            if (confirm(\"Are you sure you want to remove this expense?\")) {\n                this.$emit('deleteExpense');\n            }\n        },\n        focusNewExpense: function () {\n            document.getElementById('new-expense-focus').focus();\n        },\n        processKeyPress: function (event) {\n            if (event.keyCode == 13) this.addExpense();\n        }\n    },\n    computed: {\n        submitText: function () {\n            return this.expense ? 'Update Expense' : 'Add Expense';\n        }\n    },\n    watch: {\n        expense: function () {\n            this.value = this.expense ? this.expense.value : '';\n            this.label = this.expense ? this.expense.label : '';\n        }\n    }\n}\n\n</script>\n\n<style SCOPED>\n\n.btn.btn-primary.mobile-only {\n    width:100%;\n}\n\n.btn.desktop-only {\n    float: right;\n}\n\n.btn.btn-primary.desktop-only {\n    margin-left: .5rem;\n}\n\n.btn.mobile-only.cancel-btn {\n    float:right;\n}\n\n.remove-expense {\n    color: red;\n}\n\n.desktop-only .remove-expense {\n    padding-left:5px;\n    padding-right:17px;\n}\n\n\n</style>"]}]}