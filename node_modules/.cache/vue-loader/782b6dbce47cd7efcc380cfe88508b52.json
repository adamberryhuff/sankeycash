{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Navbar.vue?vue&type=style&index=0&id=41458b80&scoped=true&lang=css&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Navbar.vue","mtime":1598374113506},{"path":"/home/adam/Desktop/sankycash/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mYSB7CiAgICBjb2xvcjogIzI4QTc0NTsKfQo="},{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA","file":"Navbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a class=\"navbar-brand\" href=\"#\"><span class=\"fa fa-money\"></span> Sankey.Cash</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\" v-on:click=\"download()\">Download<span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\" v-on:click=\"importConfig()\">Import <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\" v-on:click=\"exportConfig()\">Export <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\" v-on:click=\"resetConfig()\">Reset <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item active\" id=\"uploader\"></li>\n            </ul>\n        </div>\n    </nav>\n</template>\n\n<script>\n\nexport default {\n    name: 'Navbar',\n    props: ['itemizedIncomes', 'itemizedExpenses', 'itemizedInvestments'],\n    methods: {\n        download: function () {\n            this.$emit('download');\n        },\n        exportConfig: function () {\n            let filename = 'sankeycash.json';\n            let contents = {\n                income: this.itemizedIncomes,\n                expenses: this.itemizedExpenses,\n                investments: this.itemizedInvestments\n            };\n            contents = encodeURIComponent(JSON.stringify(contents));\n            var element  = document.createElement('a');\n            element.setAttribute('href', 'data:application/json;charset=utf-8,' + contents);\n            element.setAttribute('download', filename);\n            element.style.display = 'none';\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n        },\n        importConfig: function () {\n            var uploader = document.createElement(\"INPUT\");\n            uploader.id = 'config';\n            uploader.style.display = \"none\";\n            uploader.setAttribute(\"type\", \"file\");\n            uploader.click();\n            document.getElementById('uploader').appendChild(uploader);\n            uploader.addEventListener(\"change\", this.configUploaded, false);\n        },\n        configUploaded: function () {\n            var f = document.getElementById('config').files[0];\n            var reader = new FileReader();\n            var a = this;\n            reader.onload = (() =>  {\n                return function(e) {\n                    var config = JSON.parse(e.target.result);\n                    a.$emit('setItemizedInvestments', config.investments);\n                    a.$emit('setItemizedExpenses', config.expenses);\n                    a.$emit('setItemizedIncomes', config.income);\n                };\n            }) (f);\n            reader.readAsText(f);\n        },\n        resetConfig: function () {\n            if (confirm(\"Are you sure you want to reset?\")) {\n                this.$emit('setItemizedInvestments', []);\n                this.$emit('setItemizedExpenses', []);\n                this.$emit('setItemizedIncomes', []);\n            }\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n.fa {\n    color: #28A745;\n}\n</style>"]}]}