{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Investments/AddInvestment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Investments/AddInvestment.vue","mtime":1598559040865},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL3V0aWwuanMnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0FkZEludmVzdG1lbnQnLAogICAgcHJvcHM6IFsndW5hbGxvY2F0ZWRTdW0nXSwKICAgIGRhdGEgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIC8vIG5ldyBpbnZlc3RtZW50CiAgICAgICAgICAgIGxhYmVsOiAnJywKICAgICAgICAgICAgdmFsdWU6ICcnLAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYWRkSW52ZXN0bWVudDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGlzLnZhbHVlID0gcGFyc2VJbnQodGhpcy52YWx1ZSk7CgogICAgICAgICAgICAvLyB2YWxpZGF0ZQogICAgICAgICAgICBpZiAoaXNOYU4odGhpcy52YWx1ZSkgfHwgdGhpcy52YWx1ZSA8IDApIHsKICAgICAgICAgICAgICAgIGFsZXJ0KCdJbnZlc3RtZW50IGFtb3VudCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyIScpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICh0aGlzLnZhbHVlID4gdGhpcy51bmFsbG9jYXRlZFN1bSkgewogICAgICAgICAgICAgICAgYWxlcnQoYEludmVzdG1lbnQgbXVzdCBiZSBsZXNzIHRoYW4geW91ciBhdmFpbGFibGUgYnVkZ2V0IG9mICR7dXRpbC5mb3JtYXRNb25leSh0aGlzLnVuYWxsb2NhdGVkU3VtKX1gKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gZW1pdAogICAgICAgICAgICB0aGlzLiRlbWl0KCdhZGRJbnZlc3RtZW50JywgewogICAgICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWwsCiAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy52YWx1ZQogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIC8vIHJlc2V0CiAgICAgICAgICAgIHRoaXMubGFiZWwgPSAnJzsKICAgICAgICAgICAgdGhpcy52YWx1ZSA9ICcnOwogICAgICAgIH0sCiAgICAgICAgcG9wdWxhdGVJbnZlc3RtZW50OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnVuYWxsb2NhdGVkU3VtOwogICAgICAgIH0KICAgIH0KfQoK"},{"version":3,"sources":["AddInvestment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddInvestment.vue","sourceRoot":"src/components/Investments","sourcesContent":["<template>\n    <div>\n        <!-- investment label -->\n        <div class=\"form-group\">\n            <label>Chart Label</label>\n            <input v-model=\"label\" type=\"text\" class=\"form-control\" placeholder=\"Label\">\n            <small class=\"form-text text-muted\">\n                The label will be used in the chart: Stocks, Bonds, Roth IRA, Extra Mortgage Payment, etc.\n            </small>\n        </div>\n\n        <!-- investment amount -->\n        <div class=\"form-group\">\n            <label>Amount</label>\n            <input id=\"new-investment\" type=\"number\" class=\"form-control\" min=\"1\" v-model=\"value\" placeholder=\"Amount\">\n            <small class=\"form-text text-muted\">\n                The amount you invest annually in this fund.\n            </small>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary float-right\" style=\"position:relative;\" v-on:click=\"addInvestment()\">\n            Add Investment\n        </button>\n    </div>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'AddInvestment',\n    props: ['unallocatedSum'],\n    data () {\n        return {\n            // new investment\n            label: '',\n            value: '',\n        }\n    },\n    methods: {\n        addInvestment: function () {\n            this.value = parseInt(this.value);\n\n            // validate\n            if (isNaN(this.value) || this.value < 0) {\n                alert('Investment amount must be a positive number!');\n                return;\n            }\n            if (this.value > this.unallocatedSum) {\n                alert(`Investment must be less than your available budget of ${util.formatMoney(this.unallocatedSum)}`);\n                return;\n            }\n\n            // emit\n            this.$emit('addInvestment', {\n                label: this.label,\n                value: this.value\n            });\n\n            // reset\n            this.label = '';\n            this.value = '';\n        },\n        populateInvestment: function () {\n            this.value = this.unallocatedSum;\n        }\n    }\n}\n\n</script>"]}]}