{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Investments/AddInvestment.vue?vue&type=style&index=0&id=11104905&scoped=true&lang=css&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Investments/AddInvestment.vue","mtime":1599457065397},{"path":"/home/adam/Desktop/sankycash/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kZXNrdG9wLW9ubHktaW5saW5lIHsKICAgIGZsb2F0OiByaWdodDsKICAgIG1hcmdpbi10b3A6IGNhbGMoMzBweCAtIDFyZW0pOwp9CgouZGVza3RvcC1vbmx5LWlubGluZSAucmVtb3ZlLWV4cGVuc2UgewogICAgcGFkZGluZy1sZWZ0OjVweDsKICAgIHBhZGRpbmctcmlnaHQ6MTdweDsKICAgIGNvbG9yOnJlZDsKfQoKLmJ0bi1vdXRsaW5lLWRhbmdlciB7CiAgICBtYXJnaW4tdG9wOjVweDsKfQoKLmJ0bi1vdXRsaW5lLXByaW1hcnkgewogICAgbWFyZ2luLXRvcDo1cHg7Cn0KCgo="},{"version":3,"sources":["AddInvestment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"AddInvestment.vue","sourceRoot":"src/components/Investments","sourcesContent":["<template>\n    <form v-on:keydown.enter.prevent=\"\">\n        <!-- investment label -->\n        <div class=\"form-group\">\n            <label>{{ $t('common.chart_label') }}</label>\n            <input id=\"new-investment-focus\" v-model=\"label\" type=\"text\" class=\"form-control\" :placeholder=\"$t('common.label')\" v-on:keyup.enter=\"addInvestment()\">\n            <small class=\"form-text text-muted\">\n                {{ $t('investments.chart_label_examples') }}\n            </small>\n        </div>\n\n        <!-- investment amount -->\n        <div class=\"form-group\">\n            <label>{{ $t('common.amount') }}</label>\n            <input id=\"new-investment\" type=\"number\" class=\"form-control\" min=\"1\" v-model=\"value\" :placeholder=\"$t('common.amount')\" v-on:keyup.enter=\"addInvestment()\">\n            <small class=\"form-text text-muted\">\n                {{ amountExamples }}\n            </small>\n        </div>\n\n        <!-- desktop buttons: save, cancel -->\n        <div class=\"desktop-only-inline\">\n            <button v-if=\"investment\" class=\"btn btn-link\" v-on:keyup.enter=\"cancelEdit()\" v-on:click.enter.prevent=\"cancelEdit\">\n                {{ $t('common.cancel') }}\n            </button>\n            <button class=\"btn btn-primary\" v-on:keyup.enter=\"addInvestment()\" v-on:click.enter.prevent=\"addInvestment\">\n                {{ submitText }}\n            </button>\n        </div>\n\n        <!-- mobile buttons: save, cancel -->\n        <div class=\"mobile-only row\">\n            <br>\n            <button class=\"btn btn-primary col-sm-12\" v-on:keyup.enter=\"addInvestment()\" v-on:click.enter.prevent=\"addInvestment\">\n                {{ submitText }}\n            </button>\n            <button v-if=\"investment\" class=\"btn btn-outline-primary col-sm-12\" v-on:keyup.enter=\"cancelEdit()\" v-on:click.enter.prevent=\"cancelEdit\">\n                {{ $t('common.cancel') }}\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'AddInvestment',\n    props: ['unallocatedSum', 'mode', 'investment', 'timeline'],\n    data () {\n        return {\n            // new investment\n            label: '',\n            value: '',\n        }\n    },\n    methods: {\n        addInvestment: function (e) {\n            if (e) e.preventDefault();\n            this.value = parseInt(this.value);\n\n            // validate\n            if (isNaN(this.value) || this.value < 0) {\n                alert(this.$t('investments.value_error'));\n                return;\n            }\n\n            // make sure it's in the budget but take into account edit mode\n            var err   = this.investment ? 'difference_error_edit' : 'difference_error_add';\n            var value = this.investment ? this.value - this.investment.value : this.value;\n            if (value > this.unallocatedSum) {\n                var error = this.$t(`investments.${err}`, {\n                    budget: util.formatMoney(this.unallocatedSum, this.mode)\n                });\n                alert(error);\n                return;\n            }\n\n            // emit\n            this.$emit('addInvestment', {\n                label: this.label,\n                value: this.value\n            });\n\n            // reset\n            this.label = '';\n            this.value = '';\n\n            this.focusNewInvestment();\n        },\n        cancelEdit: function () {\n            this.$emit('editInvestment', false);\n        },\n        populateInvestment: function () {\n            this.value = this.unallocatedSum;\n        },\n        focusNewInvestment: function () {\n            document.getElementById('new-investment-focus').focus();\n        },\n    },\n    computed: {\n        submitText: function () {\n            return this.investment ? this.$t('investments.update') : this.$t('investments.add');\n        },\n        amountExamples: function () {\n            var timeline = this.timeline == 'annual' ? 'common.annual' : 'common.monthly';\n            return this.$t('investments.amount_examples', {\n                mode: this.mode ,\n                timeline: this.$t(timeline)\n            });\n        }\n    },\n    watch: {\n        investment: function () {\n            this.value = this.investment ? this.investment.value : '';\n            this.label = this.investment ? this.investment.label : '';\n        }\n    }\n}\n\n</script>\n\n\n<style scoped>\n\n\n.desktop-only-inline {\n    float: right;\n    margin-top: calc(30px - 1rem);\n}\n\n.desktop-only-inline .remove-expense {\n    padding-left:5px;\n    padding-right:17px;\n    color:red;\n}\n\n.btn-outline-danger {\n    margin-top:5px;\n}\n\n.btn-outline-primary {\n    margin-top:5px;\n}\n\n\n</style>"]}]}