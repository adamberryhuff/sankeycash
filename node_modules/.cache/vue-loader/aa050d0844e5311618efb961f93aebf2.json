{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Chart.vue","mtime":1598226934054},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBnb29nbGUgZnJvbSAnZ29vZ2xlJzsKaW1wb3J0IHV0aWwgZnJvbSAnLi4vdXRpbC5qcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnQ2hhcnQnLAogICAgcHJvcHM6IFsnaW5jb21lJywgJ2V4cGVuc2VzJywgJ2ludmVzdG1lbnRzJywgJ2cnLCAnbicsICd0J10sCiAgICBkYXRhICgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICAvLyBjYWxjdWxhdGVkIHZhbHVlcwogICAgICAgICAgICBncm9zczogeyBsYWJlbDogJ0dyb3NzIEluY29tZScsIHZhbHVlOiB0aGlzLmcgfSwKICAgICAgICAgICAgbmV0OiB7IGxhYmVsOiAnTmV0IEluY29tZScsIHZhbHVlOiB0aGlzLm4gfSwKICAgICAgICAgICAgdGF4OiB7IGxhYmVsOiAnVGF4ZXMnLCB2YWx1ZTogdGhpcy50IH0sCiAgICAgICAgICAgIHJlbWFpbmluZzogeyBsYWJlbDogJ0luZGV4IEZ1bmRzJywgdmFsdWU6IDAgfSwKCiAgICAgICAgICAgIC8vIGV4cGVuc2VzIGFuZCBpbnZlc3RtZW50cwogICAgICAgICAgICBzcGVudDogeyBsYWJlbDogJ0V4cGVuc2VzJywgdmFsdWU6IDAgfSwKICAgICAgICAgICAgc2F2ZWQ6IHsgbGFiZWw6ICdJbnZlc3RtZW50cycsIHZhbHVlOiAwIH0sCgogICAgICAgICAgICAvLyBjaGFydCByZW5kZXJpbmcKICAgICAgICAgICAgY2hhcnQ6IGZhbHNlLAogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkICgpIHsKICAgICAgICBnb29nbGUuY2hhcnRzLmxvYWQoJ2N1cnJlbnQnLCB7J3BhY2thZ2VzJzpbJ3NhbmtleSddfSk7CiAgICAgICAgZ29vZ2xlLmNoYXJ0cy5zZXRPbkxvYWRDYWxsYmFjaygoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuY2hhcnQgPSBuZXcgZ29vZ2xlLnZpc3VhbGl6YXRpb24uRGF0YVRhYmxlKCk7CiAgICAgICAgICAgIHRoaXMuY2hhcnQuYWRkQ29sdW1uKCdzdHJpbmcnLCAnRnJvbScpOwogICAgICAgICAgICB0aGlzLmNoYXJ0LmFkZENvbHVtbignc3RyaW5nJywgJ1RvJyk7CiAgICAgICAgICAgIHRoaXMuY2hhcnQuYWRkQ29sdW1uKCdudW1iZXInLCAnQW1vdW50Jyk7CiAgICAgICAgICAgIHRoaXMuZHJhd0luY29tZUJyZWFrZG93bigpOwogICAgICAgICAgICB0aGlzLmRyYXdFeHBlbnNlc0JyZWFrZG93bigpOwogICAgICAgICAgICB0aGlzLmRyYXdJbnZlc3RtZW50QnJlYWtkb3duKCk7CgogICAgICAgICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NhbmtleScpOwogICAgICAgICAgICB2YXIgY2hhcnQgPSBuZXcgZ29vZ2xlLnZpc3VhbGl6YXRpb24uU2Fua2V5KGNhbnZhcyk7CiAgICAgICAgICAgIGNoYXJ0LmRyYXcodGhpcy5jaGFydCwgdGhpcy5nZXRDaGFydFN0eWxpbmcoKSk7CiAgICAgICAgfSk7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAgICAgICAqIEluY29tZQogICAgICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KICAgICAgICBkcmF3SW5jb21lQnJlYWtkb3duOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuZHJhd0dyb3NzSW5jb21lKCk7CiAgICAgICAgICAgIHRoaXMuZHJhd1RheGVzKCk7CiAgICAgICAgICAgIHRoaXMuZHJhd05ldEluY29tZSgpOwogICAgICAgIH0sCiAgICAgICAgLy8gZHJhdyBsaW5lczogaW5jb21lIHN0cmVhbXMgLT4gZ3Jvc3MKICAgICAgICAvLyB0cmVhdCBlbXBsb3llZSBtYXRjaGVzIGFzIHNlcGFyYXRlIGluY29tZSBzdHJlYW1zCiAgICAgICAgZHJhd0dyb3NzSW5jb21lOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuaW5jb21lLmZvckVhY2goc3RyZWFtID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuYWRkQ2hhcnRSb3coc3RyZWFtLCB0aGlzLmdyb3NzKTsKICAgICAgICAgICAgICAgIHN0cmVhbS5leGVtcHRpb25zLmZvckVhY2goZXhlbXB0aW9uID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAoZXhlbXB0aW9uLm1hdGNoID4gMCkgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWF0Y2ggPSB7bGFiZWw6IGV4ZW1wdGlvbi5sYWJlbCsnIE1hdGNoJywgdmFsdWU6IGV4ZW1wdGlvbi5tYXRjaH07CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQ2hhcnRSb3cobWF0Y2gsIHRoaXMuZ3Jvc3MpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgLy8gZHJhdyBsaW5lOiBncm9zcyAtPiB0YXhlcwogICAgICAgIC8vIGRyYXcgbGluZTogdGF4ZXMgLT4gdGF4ZXMKICAgICAgICBkcmF3VGF4ZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy5hZGRDaGFydFJvdyh0aGlzLmdyb3NzLCB0aGlzLnRheCk7CiAgICAgICAgICAgIHZhciB0YXggPSB7IGxhYmVsOiAnVGF4JywgdmFsdWU6IHRoaXMudGF4LnZhbHVlIH0KICAgICAgICAgICAgdGhpcy5hZGRDaGFydFJvdyh0aGlzLnRheCwgdGF4KTsKICAgICAgICAgICAgdGhpcy50YXggPSB0YXg7CiAgICAgICAgfSwKICAgICAgICAvLyBkcmF3IGxpbmU6IGdyb3NzIC0+IG5ldAogICAgICAgIGRyYXdOZXRJbmNvbWU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy5yZW1haW5pbmcudmFsdWUgPSB0aGlzLm5ldC52YWx1ZTsKICAgICAgICAgICAgdGhpcy5hZGRDaGFydFJvdyh0aGlzLmdyb3NzLCB0aGlzLm5ldCk7CiAgICAgICAgfSwKICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgICAgICAgKiBFeHBlbnNlcwogICAgICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KICAgICAgICBkcmF3RXhwZW5zZXNCcmVha2Rvd246IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy5zcGVudC52YWx1ZSA9IHRoaXMuZXhwZW5zZXMucmVkdWNlKChhY2MsIGUpID0+IGFjYyArIGUudmFsdWUsIHRoaXMudGF4LnZhbHVlKTsKICAgICAgICAgICAgdGhpcy5hZGRDaGFydFJvdyh0aGlzLnRheCwgdGhpcy5zcGVudCk7CiAgICAgICAgICAgIHRoaXMuZXhwZW5zZXMuZm9yRWFjaChleHBlbnNlID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuYWRkQ2hhcnRSb3codGhpcy5uZXQsIGV4cGVuc2UpOwogICAgICAgICAgICAgICAgdGhpcy5yZW1haW5pbmcudmFsdWUgLT0gZXhwZW5zZS52YWx1ZTsKICAgICAgICAgICAgICAgIHRoaXMuYWRkQ2hhcnRSb3coZXhwZW5zZSwgdGhpcy5zcGVudCk7CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgICAgICAgKiBJbnZlc3RtZW50cwogICAgICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KICAgICAgICBkcmF3SW52ZXN0bWVudEJyZWFrZG93bjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGlzLnNhdmVkLnZhbHVlID0gdGhpcy5yZW1haW5pbmcudmFsdWU7CiAgICAgICAgICAgIHRoaXMuZHJhd0V4ZW1wdGlvbnMoKTsKICAgICAgICAgICAgdGhpcy5pbnZlc3RtZW50cy5mb3JFYWNoKGludmVzdG1lbnQgPT4gewogICAgICAgICAgICAgICAgdGhpcy5hZGRDaGFydFJvdyh0aGlzLm5ldCwgaW52ZXN0bWVudCk7CiAgICAgICAgICAgICAgICB0aGlzLnJlbWFpbmluZy52YWx1ZSAtPSBpbnZlc3RtZW50LnZhbHVlOwogICAgICAgICAgICAgICAgdGhpcy5hZGRDaGFydFJvdyhpbnZlc3RtZW50LCB0aGlzLnNhdmVkKTsKICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy5hZGRDaGFydFJvdyh0aGlzLm5ldCwgdGhpcy5yZW1haW5pbmcpOwogICAgICAgICAgICB0aGlzLmFkZENoYXJ0Um93KHRoaXMucmVtYWluaW5nLCB0aGlzLnNhdmVkKTsKICAgICAgICB9LAogICAgICAgIGRyYXdFeGVtcHRpb25zOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuaW5jb21lLmZvckVhY2goc3RyZWFtID0+IHsKICAgICAgICAgICAgICAgIHN0cmVhbS5leGVtcHRpb25zLmZvckVhY2goZXhlbXB0aW9uID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZENoYXJ0Um93KHRoaXMubmV0LCBleGVtcHRpb24pOwogICAgICAgICAgICAgICAgICAgIHRoaXMucmVtYWluaW5nLnZhbHVlIC09IGV4ZW1wdGlvbi52YWx1ZTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZENoYXJ0Um93KGV4ZW1wdGlvbiwgdGhpcy5zYXZlZCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAgICAgICAqIENoYXJ0IFN0dWZmCiAgICAgICAgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogICAgICAgIGFkZENoYXJ0Um93OiBmdW5jdGlvbiAoZnJvbSwgdG8pIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gTWF0aC5taW4oZnJvbS52YWx1ZSwgdG8udmFsdWUpOwogICAgICAgICAgICBmcm9tID0gZnJvbS5sYWJlbCArICcgKCcgKyB1dGlsLmZvcm1hdE1vbmV5KGZyb20udmFsdWUpICsgJyknOwogICAgICAgICAgICB0byAgID0gdG8ubGFiZWwgICArICcgKCcgKyB1dGlsLmZvcm1hdE1vbmV5KHRvLnZhbHVlKSArICcpJzsKICAgICAgICAgICAgdGhpcy5jaGFydC5hZGRSb3coW2Zyb20sIHRvLCB2YWx1ZV0pOwogICAgICAgIH0sCiAgICAgICAgZ2V0Q2hhcnRTdHlsaW5nOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCBjb2xvcnMgPSBbCiAgICAgICAgICAgICAgICAnI2E2Y2VlMycsICcjYjJkZjhhJywgJyNmYjlhOTknLCAnI2ZkYmY2ZicsCiAgICAgICAgICAgICAgICAnI2NhYjJkNicsICcjZmZmZjk5JywgJyMxZjc4YjQnLCAnIzMzYTAyYycKICAgICAgICAgICAgXTsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIHNhbmtleTogewogICAgICAgICAgICAgICAgICAgIG5vZGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JzOiBjb2xvcnMsCiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVQYWRkaW5nOiA3CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBsaW5rOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yTW9kZTogJ2dyYWRpZW50JywKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JzOiBjb2xvcnMKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGl0ZXJhdGlvbnM6IDAsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div id=\"sankey\"></div>\n</template>\n\n<script>\nimport google from 'google';\nimport util from '../util.js';\n\nexport default {\n    name: 'Chart',\n    props: ['income', 'expenses', 'investments', 'g', 'n', 't'],\n    data () {\n        return {\n            // calculated values\n            gross: { label: 'Gross Income', value: this.g },\n            net: { label: 'Net Income', value: this.n },\n            tax: { label: 'Taxes', value: this.t },\n            remaining: { label: 'Index Funds', value: 0 },\n\n            // expenses and investments\n            spent: { label: 'Expenses', value: 0 },\n            saved: { label: 'Investments', value: 0 },\n\n            // chart rendering\n            chart: false,\n        }\n    },\n    mounted () {\n        google.charts.load('current', {'packages':['sankey']});\n        google.charts.setOnLoadCallback(() => {\n            this.chart = new google.visualization.DataTable();\n            this.chart.addColumn('string', 'From');\n            this.chart.addColumn('string', 'To');\n            this.chart.addColumn('number', 'Amount');\n            this.drawIncomeBreakdown();\n            this.drawExpensesBreakdown();\n            this.drawInvestmentBreakdown();\n\n            var canvas = document.getElementById('sankey');\n            var chart = new google.visualization.Sankey(canvas);\n            chart.draw(this.chart, this.getChartStyling());\n        });\n    },\n    methods: {\n        /**************************************************************\n         * Income\n         **************************************************************/\n        drawIncomeBreakdown: function () {\n            this.drawGrossIncome();\n            this.drawTaxes();\n            this.drawNetIncome();\n        },\n        // draw lines: income streams -> gross\n        // treat employee matches as separate income streams\n        drawGrossIncome: function () {\n            this.income.forEach(stream => {\n                this.addChartRow(stream, this.gross);\n                stream.exemptions.forEach(exemption => {\n                    if (exemption.match > 0) {\n                        var match = {label: exemption.label+' Match', value: exemption.match};\n                        this.addChartRow(match, this.gross);\n                    }\n                });\n            })\n        },\n        // draw line: gross -> taxes\n        // draw line: taxes -> taxes\n        drawTaxes: function () {\n            this.addChartRow(this.gross, this.tax);\n            var tax = { label: 'Tax', value: this.tax.value }\n            this.addChartRow(this.tax, tax);\n            this.tax = tax;\n        },\n        // draw line: gross -> net\n        drawNetIncome: function () {\n            this.remaining.value = this.net.value;\n            this.addChartRow(this.gross, this.net);\n        },\n        /**************************************************************\n         * Expenses\n         **************************************************************/\n        drawExpensesBreakdown: function () {\n            this.spent.value = this.expenses.reduce((acc, e) => acc + e.value, this.tax.value);\n            this.addChartRow(this.tax, this.spent);\n            this.expenses.forEach(expense => {\n                this.addChartRow(this.net, expense);\n                this.remaining.value -= expense.value;\n                this.addChartRow(expense, this.spent);\n            })\n        },\n        /**************************************************************\n         * Investments\n         **************************************************************/\n        drawInvestmentBreakdown: function () {\n            this.saved.value = this.remaining.value;\n            this.drawExemptions();\n            this.investments.forEach(investment => {\n                this.addChartRow(this.net, investment);\n                this.remaining.value -= investment.value;\n                this.addChartRow(investment, this.saved);\n            })\n            this.addChartRow(this.net, this.remaining);\n            this.addChartRow(this.remaining, this.saved);\n        },\n        drawExemptions: function () {\n            this.income.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    this.addChartRow(this.net, exemption);\n                    this.remaining.value -= exemption.value;\n                    this.addChartRow(exemption, this.saved);\n                });\n            })\n        },\n        /**************************************************************\n         * Chart Stuff\n         **************************************************************/\n        addChartRow: function (from, to) {\n            let value = Math.min(from.value, to.value);\n            from = from.label + ' (' + util.formatMoney(from.value) + ')';\n            to   = to.label   + ' (' + util.formatMoney(to.value) + ')';\n            this.chart.addRow([from, to, value]);\n        },\n        getChartStyling: function () {\n            let colors = [\n                '#a6cee3', '#b2df8a', '#fb9a99', '#fdbf6f',\n                '#cab2d6', '#ffff99', '#1f78b4', '#33a02c'\n            ];\n            return {\n                sankey: {\n                    node: {\n                        colors: colors,\n                        nodePadding: 7\n                    },\n                    link: {\n                        colorMode: 'gradient',\n                        colors: colors\n                    },\n                    iterations: 0,\n                },\n            }\n        }\n    }\n}\n</script>\n\n<style>\n#sankey {\n    width: 100%;\n    height:300px;\n}\n</style>\n\n"]}]}