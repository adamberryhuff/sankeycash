{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Chart.vue","mtime":1598138028134},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div id=\"sankey\"></div>\n</template>\n\n<script>\nexport default {\n    name: 'Chart',\n    data () {\n        return {\n            income: [\n                {\n                    label: 'Salary',\n                    value: 170000,\n                    tax: 30,\n                    exemptions: [\n                        {\n                            label: '401k',\n                            value: 19500,\n                            match: 6800\n                        },\n                        {\n                            label: 'HSA',\n                            value: 2830,\n                            match: 720\n                        }\n                    ]\n                },\n                {\n                    label: 'Equity',\n                    value: 80000,\n                    tax: 22,\n                    exemptions: []\n                },\n                {\n                    label: 'Bonus',\n                    value: 17000,\n                    tax: 30,\n                    exemptions: []\n                },\n                {\n                    label: 'Stipends',\n                    value: 600,\n                    tax: 30,\n                    exemptions: []\n                },\n                {\n                    label: 'Rental',\n                    value: 40800,\n                    tax: 30,\n                    exemptions: []\n                },\n            ],\n            expenses: [\n                {\n                    label: 'Rental Mortgage',\n                    value: 20784\n                },\n                {\n                    label: 'Living Expenses',\n                    value: 36000\n                },\n            ],\n            investments: [\n                {\n                    label: 'Mortgage Principle',\n                    value: 18000\n                },\n            ],\n            // calculated values\n            gross: { label: 'Gross Income', value: 0 },\n            net: { label: 'Net Income', value: 0 },\n            tax: { label: 'Taxes', value: 0 },\n            remaining: { label: 'Index Funds', value: 0 },\n\n            // expenses and investments\n            spent: { label: 'Expenses', value: 0 },\n            saved: { label: 'Investments', value: 0 },\n\n            // chart rendering\n            chart: false,\n            colors: [\n                '#a6cee3', '#b2df8a', '#fb9a99', '#fdbf6f',\n                '#cab2d6', '#ffff99', '#1f78b4', '#33a02c'\n            ],\n            styling: {\n                sankey: {\n                    node: {\n                        colors: this.colors,\n                        nodePadding: 7\n                    },\n                    link: {\n                        colorMode: 'gradient',\n                        colors: this.colors\n                    },\n                    iterations: 0\n                }\n            }\n        }\n    },\n    mounted () {\n        google.charts.load('current', {'packages':['sankey']});\n        google.charts.setOnLoadCallback(() => {\n            this.chart = new google.visualization.DataTable();\n            this.chart.addColumn('string', 'From');\n            this.chart.addColumn('string', 'To');\n            this.chart.addColumn('number', 'Amount');\n            this.drawIncomeBreakdown();\n            this.drawExpensesBreakdown();\n            this.drawInvestmentBreakdown();\n\n            var canvas = document.getElementById('sankey');\n            var chart = new google.visualization.Sankey(canvas);\n            chart.draw(this.chart, this.styling);\n        });\n    },\n    methods: {\n        /**************************************************************\n         * Income\n         **************************************************************/\n        drawIncomeBreakdown: function () {\n            this.getGrossIncome();\n            this.drawGrossIncome();\n            this.applyTaxExemptions();\n            this.drawTaxes();\n            this.drawNetIncome();\n        },\n        getGrossIncome: function () {\n            this.income.forEach(stream => {\n                this.gross.value += stream.value;\n                stream.exemptions.forEach(exemption => {\n                    this.gross.value += exemption.match;\n                })\n            })\n        },\n        drawGrossIncome: function () {\n            this.income.forEach(stream => {\n                this.addChartRow(stream, this.gross);\n                stream.exemptions.forEach(exemption => {\n                    if (exemption.match > 0) {\n                        var match = {label: exemption.label+' Match', value: exemption.match};\n                        this.addChartRow(match, this.gross);\n                    }\n                });\n            })\n        },\n        applyTaxExemptions: function () {\n            this.income.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    stream.value -= exemption.value;\n                });\n            });\n        },\n        drawTaxes: function () {\n            // apply taxes\n            this.income.forEach(stream => {\n                let tax = stream.value*(stream.tax/100);\n                this.tax.value += tax;\n                stream.value -= tax;\n            });\n            this.addChartRow(this.gross, this.tax);\n            var tax = { label: 'Tax', value: this.tax.value }\n            this.addChartRow(this.tax, tax);\n            this.tax = tax;\n        },\n        drawNetIncome: function () {\n            this.net.value = this.gross.value - this.tax.value;\n            this.remaining.value = this.net.value;\n            this.addChartRow(this.gross, this.net);\n        },\n        /**************************************************************\n         * Expenses\n         **************************************************************/\n        drawExpensesBreakdown: function () {\n            this.spent.value = this.expenses.reduce((acc, e) => acc + e.value, this.tax.value);\n            this.addChartRow(this.tax, this.spent);\n            this.expenses.forEach(expense => {\n                this.addChartRow(this.net, expense);\n                this.remaining.value -= expense.value;\n                this.addChartRow(expense, this.spent);\n            })\n        },\n        /**************************************************************\n         * Investments\n         **************************************************************/\n        drawInvestmentBreakdown: function () {\n            this.saved.value = this.remaining.value;\n            this.drawExemptions();\n            this.investments.forEach(investment => {\n                this.addChartRow(this.net, investment);\n                this.remaining.value -= investment.value;\n                this.addChartRow(investment, this.saved);\n            })\n            this.addChartRow(this.net, this.remaining);\n            this.addChartRow(this.remaining, this.saved);\n        },\n        drawExemptions: function () {\n            this.income.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    exemption.value += exemption.match;\n                    this.addChartRow(this.net, exemption);\n                    this.remaining.value -= exemption.value;\n                    this.addChartRow(exemption, this.saved);\n                });\n            })\n        },\n        /**************************************************************\n         * Chart Stuff\n         **************************************************************/\n        addChartRow: function (from, to) {\n            let value = Math.min(from.value, to.value);\n            from = from.label + ' ($' + Math.floor(from.value) + ')';\n            to   = to.label   + ' ($' + Math.floor(to.value)   + ')';\n            this.chart.addRow([from, to, value]);\n        },\n    }\n}\n</script>\n\n<style>\n#sankey {\n    width: 100%;\n    height:300px;\n}\n</style>\n\n"]}]}