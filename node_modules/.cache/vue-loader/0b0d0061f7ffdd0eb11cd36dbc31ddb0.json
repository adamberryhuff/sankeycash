{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Investments/AddInvestment.vue?vue&type=style&index=0&SCOPED=true&lang=css&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Investments/AddInvestment.vue","mtime":1598909604998},{"path":"/home/adam/Desktop/sankycash/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYnRuLm1vYmlsZS1vbmx5IHsKICAgIHdpZHRoOjEwMCU7Cn0KCg=="},{"version":3,"sources":["AddInvestment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA","file":"AddInvestment.vue","sourceRoot":"src/components/Investments","sourcesContent":["<template>\n    <form v-on:keydown.enter.prevent=\"\">\n        <!-- investment label -->\n        <div class=\"form-group\">\n            <label>Chart Label</label>\n            <input id=\"new-investment-focus\" v-model=\"label\" type=\"text\" class=\"form-control\" placeholder=\"Label\">\n            <small class=\"form-text text-muted\">\n                The label will be used in the chart: Stocks, Bonds, Roth IRA, Extra Mortgage Payment, etc.\n            </small>\n        </div>\n\n        <!-- investment amount -->\n        <div class=\"form-group\">\n            <label>Amount</label>\n            <input id=\"new-investment\" type=\"number\" class=\"form-control\" min=\"1\" v-model=\"value\" placeholder=\"Amount\" v-on:keyup=\"processKeyPress\">\n            <small class=\"form-text text-muted\">\n                The amount you invest annually in this fund.\n            </small>\n        </div>\n        <br class=\"mobile-only\">\n        <button class=\"btn btn-primary float-right desktop-only\" style=\"position:relative;\" v-on:click.enter.prevent=\"addInvestment\" v-on:keyup=\"processKeyPress\">\n            Add Investment\n        </button>\n        <button class=\"btn btn-primary mobile-only\" style=\"position:relative;\" v-on:click.enter.prevent=\"addInvestment\" v-on:keyup=\"processKeyPress\">\n            Add Investment\n        </button>\n    </form>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'AddInvestment',\n    props: ['unallocatedSum'],\n    data () {\n        return {\n            // new investment\n            label: '',\n            value: '',\n        }\n    },\n    methods: {\n        addInvestment: function (e) {\n            if (e) e.preventDefault();\n            this.value = parseInt(this.value);\n\n            // validate\n            if (isNaN(this.value) || this.value < 0) {\n                alert('Investment amount must be a positive number!');\n                return;\n            }\n            if (this.value > this.unallocatedSum) {\n                alert(`Investment must be less than your available budget of ${util.formatMoney(this.unallocatedSum)}`);\n                return;\n            }\n\n            // emit\n            this.$emit('addInvestment', {\n                label: this.label,\n                value: this.value\n            });\n\n            // reset\n            this.label = '';\n            this.value = '';\n\n            this.focusNewInvestment();\n        },\n        populateInvestment: function () {\n            this.value = this.unallocatedSum;\n        },\n        focusNewInvestment: function () {\n            document.getElementById('new-investment-focus').focus();\n        },\n        processKeyPress: function (event) {\n            if (event.keyCode == 13) this.addInvestment();\n        }\n    }\n}\n\n</script>\n\n<style SCOPED>\n\n.btn.mobile-only {\n    width:100%;\n}\n\n</style>"]}]}