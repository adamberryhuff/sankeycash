{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Incomes/AddIncome.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Incomes/AddIncome.vue","mtime":1599457032015},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgQWRkSW5jb21lRXhlbXB0aW9uIGZyb20gJy4vQWRkSW5jb21lRXhlbXB0aW9uLnZ1ZSc7CmltcG9ydCBBZGRJbmNvbWVEZWR1Y3Rpb24gZnJvbSAnLi9BZGRJbmNvbWVEZWR1Y3Rpb24udnVlJzsKaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vdXRpbC5qcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnQWRkSW5jb21lJywKICAgIHByb3BzOiBbJ2luY29tZScsICdtb2RlJywgJ3VuYWxsb2NhdGVkU3VtJywgJ3RpbWVsaW5lJ10sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgQWRkSW5jb21lRXhlbXB0aW9uLAogICAgICAgIEFkZEluY29tZURlZHVjdGlvbgogICAgfSwKICAgIGRhdGEgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIC8vIG5ldyBpbmNvbWUgc3RyZWFtCiAgICAgICAgICAgIGxhYmVsOiAnJywKICAgICAgICAgICAgdmFsdWU6ICcnLAogICAgICAgICAgICB0YXg6ICAgJycsCiAgICAgICAgICAgIGV4ZW1wdGlvbnM6IFtdLAogICAgICAgICAgICBkZWR1Y3Rpb25zOiBbXSwKCiAgICAgICAgICAgIHV0aWw6IHV0aWwKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCAoKSB7CiAgICAgICAgdGhpcy5pbml0TmV3SW5jb21lKCk7CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBncm9zc0V4YW1wbGU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIHRpbWVsaW5lID0gdGhpcy50aW1lbGluZSA9PSAnYW5udWFsJyA/ICdjb21tb24uYW5udWFsJyA6ICdjb21tb24ubW9udGhseSc7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiR0KCdpbmNvbWVzLmdyb3NzX2Ftb3VudF9leGFtcGxlcycsIHsKICAgICAgICAgICAgICAgIG1vZGU6IHRoaXMubW9kZSAsCiAgICAgICAgICAgICAgICB0aW1lbGluZTogdGhpcy4kdCh0aW1lbGluZSkKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhZGRJbmNvbWU6IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIGlmIChlKSBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIHRoaXMubm9ybWFsaXplSW5jb21lKCk7CiAgICAgICAgICAgIHRoaXMubm9ybWFsaXplRXhlbXB0aW9ucygpOwogICAgICAgICAgICB0aGlzLm5vcm1hbGl6ZURlZHVjdGlvbnMoKTsKICAgICAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRlSW5jb21lKCkpIHJldHVybjsKICAgICAgICAgICAgdGhpcy52YWxpZGF0ZUV4ZW1wdGlvbnMoKTsKICAgICAgICAgICAgdGhpcy52YWxpZGF0ZURlZHVjdGlvbnMoKTsKCiAgICAgICAgICAgIC8vIGV4ZW1wdGlvbnMgKyBkZWR1Y3Rpb25zID4gaW5jb21lCiAgICAgICAgICAgIGxldCB0YXhfZnJlZSA9IHRoaXMuZXhlbXB0aW9ucy5yZWR1Y2UoKGEsIGUpID0+IGEgKyBlLnZhbHVlLCAwKTsKICAgICAgICAgICAgdGF4X2ZyZWUgPSB0aGlzLmRlZHVjdGlvbnMucmVkdWNlKChhLCBkKSA9PiBhICsgZC52YWx1ZSwgdGF4X2ZyZWUpOwogICAgICAgICAgICBpZiAodGF4X2ZyZWUgPiB0aGlzLnZhbHVlKSB7CiAgICAgICAgICAgICAgICBhbGVydCh0aGlzLiR0KCdpbmNvbWVzLnByZXRheF9lcnJvcicpKTsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gYWRkCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2FkZEluY29tZScsIHsKICAgICAgICAgICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLAogICAgICAgICAgICAgICAgdGF4OiB0aGlzLnRheCwKICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlLAogICAgICAgICAgICAgICAgZXhlbXB0aW9uczogdGhpcy5leGVtcHRpb25zLAogICAgICAgICAgICAgICAgZGVkdWN0aW9uczogdGhpcy5kZWR1Y3Rpb25zCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgdGhpcy5pbml0TmV3SW5jb21lKCk7CiAgICAgICAgfSwKICAgICAgICBub3JtYWxpemVJbmNvbWU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy50YXggICA9IHBhcnNlSW50KHRoaXMudGF4KTsKICAgICAgICAgICAgdGhpcy52YWx1ZSA9IHBhcnNlSW50KHRoaXMudmFsdWUpOwogICAgICAgIH0sCiAgICAgICAgdmFsaWRhdGVJbmNvbWU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgLy8gZG8gd2UgaGF2ZSBidWRnZXQgdG8gZWRpdCB0aGlzIGluY29tZSB3aGVuIGxvd2VyaW5nIHRoZSBpbmNvbWUgdmFsdWU/CiAgICAgICAgICAgIGlmICh0aGlzLmluY29tZSkgewogICAgICAgICAgICAgICAgbGV0IGluY29tZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5pbmNvbWUpKTsKICAgICAgICAgICAgICAgIGluY29tZS52YWx1ZSA9IHRoaXMudmFsdWU7CiAgICAgICAgICAgICAgICB2YXIgZGlmZiA9IHV0aWwuZ2V0TmV0KHRoaXMuaW5jb21lKSAtIHV0aWwuZ2V0TmV0KGluY29tZSk7CiAgICAgICAgICAgICAgICBpZiAoZGlmZiA+IHRoaXMudW5hbGxvY2F0ZWRTdW0pIHsKICAgICAgICAgICAgICAgICAgICBhbGVydCh0aGlzLiR0KCdpbmNvbWVzLnJlZHVjdGlvbl9lcnJvcicsIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWRfdG90YWw6IHV0aWwuZm9ybWF0TW9uZXkoZGlmZiwgdGhpcy5tb2RlKSwKICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWRfYWRkaXRpb25hbDogdXRpbC5mb3JtYXRNb25leShkaWZmLXRoaXMudW5hbGxvY2F0ZWRTdW0sIHRoaXMubW9kZSkKICAgICAgICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyB2YWxpZGF0ZSBsYWJlbCwgdGF4LCBhbmQgdmFsdWUKICAgICAgICAgICAgaWYgKHRoaXMubGFiZWwgPT0gJycpIHsKICAgICAgICAgICAgICAgIGFsZXJ0KHRoaXMuJHQoJ2luY29tZXMubGFiZWxfZXJyb3InKSk7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGlzTmFOKHRoaXMudGF4KSB8fCB0aGlzLnRheCA8IDEgfHwgdGhpcy50YXggPiAxMDApIHsKICAgICAgICAgICAgICAgIGFsZXJ0KHRoaXMuJHQoJ2luY29tZXMudGF4X2Vycm9yJykpOwogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChpc05hTih0aGlzLnZhbHVlKSB8fCB0aGlzLnZhbHVlIDw9IDApIHsKICAgICAgICAgICAgICAgIGFsZXJ0KHRoaXMuJHQoJ2luY29tZXMudmFsdWVfZXJyb3InKSk7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSwKICAgICAgICBjYW5jZWxFZGl0SW5jb21lOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2VkaXRJbmNvbWUnLCBmYWxzZSk7CiAgICAgICAgfSwKICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiAgICAgICAgICogRVhFTVBUSU9OUwogICAgICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiAgICAgICAgYWRkRXhlbXB0aW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuZXhlbXB0aW9ucy5wdXNoKHsKICAgICAgICAgICAgICAgIGxhYmVsOiAnJywKICAgICAgICAgICAgICAgIHZhbHVlOiAnJywKICAgICAgICAgICAgICAgIG1hdGNoOiAnJywKICAgICAgICAgICAgICAgIHZhbHVlX21vZGU6ICdjdXJyZW5jeScsCiAgICAgICAgICAgICAgICBtYXRjaF9tb2RlOiAnY3VycmVuY3knCiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgcmVtb3ZlRXhlbXB0aW9uOiBmdW5jdGlvbiAoaWR4KSB7CiAgICAgICAgICAgIHZhciBlbXB0eSA9ICF0aGlzLmV4ZW1wdGlvbnNbaWR4XS5sYWJlbDsKICAgICAgICAgICAgZW1wdHkgPSBlbXB0eSAmJiAhdGhpcy5leGVtcHRpb25zW2lkeF0udmFsdWU7CiAgICAgICAgICAgIGVtcHR5ID0gZW1wdHkgJiYgIXRoaXMuZXhlbXB0aW9uc1tpZHhdLm1hdGNoOwogICAgICAgICAgICBpZiAoZW1wdHkgfHwgY29uZmlybSh0aGlzLiR0KCdpbmNvbWVzLmV4ZW1wdGlvbl9jb25maXJtYXRpb24nKSkpIHsKICAgICAgICAgICAgICAgIHRoaXMuZXhlbXB0aW9ucy5zcGxpY2UoaWR4LCAxKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY2xlYXJFeGVtcHRpb25zOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuZXhlbXB0aW9ucyA9IFtdOwogICAgICAgIH0sCiAgICAgICAgLy8gY29udmVydCAlIGNvbnRyaWJ1dGlvbiBhbmQgbWF0Y2ggdG8gJAogICAgICAgIG5vcm1hbGl6ZUV4ZW1wdGlvbnM6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuZXhlbXB0aW9ucykgewogICAgICAgICAgICAgICAgbGV0IGV4ZW1wdGlvbiA9IHRoaXMuZXhlbXB0aW9uc1trZXldOwogICAgICAgICAgICAgICAgaWYgKGV4ZW1wdGlvbi52YWx1ZV9tb2RlID09ICdwZXJjZW50JykgewogICAgICAgICAgICAgICAgICAgIGV4ZW1wdGlvbi52YWx1ZSAgICAgID0gdGhpcy52YWx1ZSAqIGV4ZW1wdGlvbi52YWx1ZSAvIDEwMDsKICAgICAgICAgICAgICAgICAgICBleGVtcHRpb24udmFsdWVfbW9kZSA9ICdjdXJyZW5jeSc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoZXhlbXB0aW9uLm1hdGNoX21vZGUgPT0gJ3BlcmNlbnQnKSB7CiAgICAgICAgICAgICAgICAgICAgZXhlbXB0aW9uLm1hdGNoICAgICAgPSB0aGlzLnZhbHVlICogZXhlbXB0aW9uLm1hdGNoIC8gMTAwOwogICAgICAgICAgICAgICAgICAgIGV4ZW1wdGlvbi5tYXRjaF9tb2RlID0gJ2N1cnJlbmN5JzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdmFsaWRhdGVFeGVtcHRpb25zOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuZXhlbXB0aW9ucy5mb3JFYWNoKGV4ZW1wdGlvbiA9PiB7CiAgICAgICAgICAgICAgICBleGVtcHRpb24udmFsdWUgPSBwYXJzZUludChleGVtcHRpb24udmFsdWUpOwogICAgICAgICAgICAgICAgaWYgKGlzTmFOKGV4ZW1wdGlvbi52YWx1ZSkgfHwgZXhlbXB0aW9uLnZhbHVlIDwgMCkgewogICAgICAgICAgICAgICAgICAgIGFsZXJ0KHRoaXMuJHQoJ2luY29tZXMuZXhlbXB0aW9uX3ZhbHVlX2Vycm9yJykpOwogICAgICAgICAgICAgICAgICAgIHRocm93IHRoaXMuJHQoJ2luY29tZXMuZXhlbXB0aW9uX3ZhbHVlX2Vycm9yJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBleGVtcHRpb24ubWF0Y2ggPSBwYXJzZUludChleGVtcHRpb24ubWF0Y2gpOwogICAgICAgICAgICAgICAgaWYgKGlzTmFOKGV4ZW1wdGlvbi5tYXRjaCkgfHwgZXhlbXB0aW9uLm1hdGNoIDwgMCkgewogICAgICAgICAgICAgICAgICAgIGFsZXJ0KHRoaXMuJHQoJ2luY29tZXMuZXhlbXB0aW9uX21hdGNoX2Vycm9yJykpOwogICAgICAgICAgICAgICAgICAgIHRocm93IHRoaXMuJHQoJ2luY29tZXMuZXhlbXB0aW9uX21hdGNoX2Vycm9yJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiAgICAgICAgICogREVEVUNUSU9OUwogICAgICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiAgICAgICAgYWRkRGVkdWN0aW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuZGVkdWN0aW9ucy5wdXNoKHsKICAgICAgICAgICAgICAgIGxhYmVsOiAnJywKICAgICAgICAgICAgICAgIHZhbHVlOiAnJywKICAgICAgICAgICAgICAgIHZhbHVlX21vZGU6ICdjdXJyZW5jeScsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgcmVtb3ZlRGVkdWN0aW9uOiBmdW5jdGlvbiAoaWR4KSB7CiAgICAgICAgICAgIHZhciBlbXB0eSA9ICF0aGlzLmRlZHVjdGlvbnNbaWR4XS5sYWJlbCAmJiAhdGhpcy5kZWR1Y3Rpb25zW2lkeF0udmFsdWU7CiAgICAgICAgICAgIGlmIChlbXB0eSB8fCBjb25maXJtKHRoaXMuJHQoJ2luY29tZXMuZGVkdWN0aW9uX2NvbmZpcm1hdGlvbicpKSkgewogICAgICAgICAgICAgICAgdGhpcy5kZWR1Y3Rpb25zLnNwbGljZShpZHgsIDEpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjbGVhckRlZHVjdGlvbnM6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy5kZWR1Y3Rpb25zID0gW107CiAgICAgICAgfSwKICAgICAgICAvLyBjb252ZXJ0ICUgZGVkdWN0aW9ucyB0byAkCiAgICAgICAgbm9ybWFsaXplRGVkdWN0aW9uczogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5kZWR1Y3Rpb25zKSB7CiAgICAgICAgICAgICAgICBsZXQgZGVkdWN0aW9uID0gdGhpcy5kZWR1Y3Rpb25zW2tleV07CiAgICAgICAgICAgICAgICBpZiAoZGVkdWN0aW9uLnZhbHVlX21vZGUgPT0gJ3BlcmNlbnQnKSB7CiAgICAgICAgICAgICAgICAgICAgZGVkdWN0aW9uLnZhbHVlICAgICAgPSB0aGlzLnZhbHVlICogZGVkdWN0aW9uLnZhbHVlIC8gMTAwOwogICAgICAgICAgICAgICAgICAgIGRlZHVjdGlvbi52YWx1ZV9tb2RlID0gJ2N1cnJlbmN5JzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdmFsaWRhdGVEZWR1Y3Rpb25zOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuZGVkdWN0aW9ucy5mb3JFYWNoKGRlZHVjdGlvbiA9PiB7CiAgICAgICAgICAgICAgICBkZWR1Y3Rpb24udmFsdWUgPSBwYXJzZUludChkZWR1Y3Rpb24udmFsdWUpOwogICAgICAgICAgICAgICAgaWYgKGlzTmFOKGRlZHVjdGlvbi52YWx1ZSkgfHwgZGVkdWN0aW9uLnZhbHVlIDwgMCkgewogICAgICAgICAgICAgICAgICAgIGFsZXJ0KHRoaXMuJHQoJ2luY29tZXMuZGVkdWN0aW9uX3ZhbHVlX2Vycm9yJykpOwogICAgICAgICAgICAgICAgICAgIHRocm93IHRoaXMuJHQoJ2luY29tZXMuZGVkdWN0aW9uX3ZhbHVlX2Vycm9yJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCiAgICAgICAgICogVVRJTAogICAgICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiAgICAgICAgaW5pdE5ld0luY29tZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGlzLmxhYmVsICAgICAgPSAnJzsKICAgICAgICAgICAgdGhpcy50YXggICAgICAgID0gJyc7CiAgICAgICAgICAgIHRoaXMudmFsdWUgICAgICA9ICcnOwogICAgICAgICAgICB0aGlzLmV4ZW1wdGlvbnMgPSBbXTsKICAgICAgICAgICAgdGhpcy5kZWR1Y3Rpb25zID0gW107CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduZXctaW5jb21lLWZvY3VzJykuZm9jdXMoKTsKICAgICAgICB9LAogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAgLy8gc2V0IGxvY2FsIHNjb3BlIHZhbHVlcyBpZiBzb21lb25lIGNsaWNrcyBlZGl0IGluY29tZQogICAgICAgIGluY29tZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGlzLnZhbHVlICAgICAgPSB0aGlzLmluY29tZSA/IHRoaXMuaW5jb21lLnZhbHVlIDogJyc7CiAgICAgICAgICAgIHRoaXMubGFiZWwgICAgICA9IHRoaXMuaW5jb21lID8gdGhpcy5pbmNvbWUubGFiZWwgOiAnJzsKICAgICAgICAgICAgdGhpcy50YXggICAgICAgID0gdGhpcy5pbmNvbWUgPyB0aGlzLmluY29tZS50YXggOiAnJzsKICAgICAgICAgICAgdGhpcy5leGVtcHRpb25zID0gdGhpcy5pbmNvbWUgPyB0aGlzLmluY29tZS5leGVtcHRpb25zIDogW107CiAgICAgICAgICAgIHRoaXMuZGVkdWN0aW9ucyA9IHRoaXMuaW5jb21lID8gdGhpcy5pbmNvbWUuZGVkdWN0aW9ucyA6IFtdOwogICAgICAgICAgICBpZiAodGhpcy5leGVtcHRpb25zLmxlbmd0aCkgewogICAgICAgICAgICAgICAgdGhpcy5leGVtcHRpb25zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmV4ZW1wdGlvbnMpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGhpcy5kZWR1Y3Rpb25zLmxlbmd0aCkgewogICAgICAgICAgICAgICAgdGhpcy5kZWR1Y3Rpb25zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmRlZHVjdGlvbnMpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQoK"},{"version":3,"sources":["AddIncome.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddIncome.vue","sourceRoot":"src/components/Incomes","sourcesContent":["<template>\n    <form v-on:keydown.enter.prevent=\"\">\n        <!-- income stream label -->\n        <div class=\"form-group\">\n            <label>{{ $t('common.chart_label') }}</label>\n            <input id=\"new-income-focus\" v-model=\"label\" type=\"text\" class=\"form-control\" :placeholder=\"$t('common.label')\" name=\"income-stream-label\" v-on:keyup.enter=\"addIncome()\">\n            <small class=\"form-text text-muted\">\n                {{ $t('incomes.chart_label_examples') }}\n            </small>\n        </div>\n\n        <!-- income stream amount -->\n        <div class=\"form-group\">\n            <label>{{ $t('common.gross_amount') }}</label>\n            <input type=\"number\" class=\"form-control\" min=\"1\" v-model=\"value\" :placeholder=\"$t('common.amount')\" v-on:keyup.enter=\"addIncome()\">\n            <small class=\"form-text text-muted\">\n                {{ grossExample }}\n            </small>\n        </div>\n\n        <!-- income stream tax rate -->\n        <div class=\"form-group\">\n            <label>{{ $t('common.tax_rate') }}</label>\n            <input type=\"number\" class=\"form-control\" step=\".001\" min=\"1\" max=\"100\" v-model=\"tax\" :placeholder=\"$t('common.tax')\" v-on:keyup.enter=\"addIncome()\">\n            <small class=\"form-text text-muted\">\n                {{ $t('incomes.tax_rate_examples') }}\n            </small>\n        </div>\n\n        <!-- exemptions question -->\n        {{ $t('incomes.exemptions_question') }}\n        <AddIncomeExemption\n            :exemptions=\"exemptions\"\n            :mode=\"mode\"\n            @addIncome=\"addIncome\"\n            @addExemption=\"addExemption\"\n            @removeExemption=\"removeExemption\"\n            @clearExemptions=\"clearExemptions\" />\n        <br>\n\n        <!-- deductions question -->\n        {{ $t('incomes.deductions_question') }}\n        <AddIncomeDeduction\n            :deductions=\"deductions\"\n            :mode=\"mode\"\n            @addIncome=\"addIncome\"\n            @addDeduction=\"addDeduction\"\n            @removeDeduction=\"removeDeduction\"\n            @clearDeductions=\"clearDeductions\" />\n\n        <!-- desktop buttons: save, cancel -->\n        <div class=\"desktop-only-inline\">\n            <button v-if=\"income\" class=\"btn btn-link\" v-on:click.enter.prevent=\"cancelEditIncome()\" v-on:keyup.enter=\"cancelEditIncome()\">\n                {{ $t('common.cancel') }}\n            </button>\n            <button class=\"btn btn-primary\" v-on:click.enter.prevent=\"addIncome()\" v-on:keyup.enter=\"addIncome()\">\n                {{ income ? $t('incomes.update') : $t('incomes.add') }}\n            </button>\n        </div>\n\n        <!-- mobile buttons: save, cancel -->\n        <div class=\"mobile-only row\">\n            <br>\n            <button class=\"btn btn-primary col-sm-12\" v-on:keyup.enter=\"addIncome()\" v-on:click.enter.prevent=\"addIncome()\">\n                {{ income ? $t('incomes.update') : $t('incomes.add') }}\n            </button>\n            <button v-if=\"income\" class=\"btn btn-outline-primary col-sm-12\" v-on:click.enter.prevent=\"cancelEditIncome()\" v-on:keyup.enter=\"cancelEditIncome()\">\n                {{ $t('common.cancel') }}\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script>\n\nimport AddIncomeExemption from './AddIncomeExemption.vue';\nimport AddIncomeDeduction from './AddIncomeDeduction.vue';\nimport util from '../../util.js';\n\nexport default {\n    name: 'AddIncome',\n    props: ['income', 'mode', 'unallocatedSum', 'timeline'],\n    components: {\n        AddIncomeExemption,\n        AddIncomeDeduction\n    },\n    data () {\n        return {\n            // new income stream\n            label: '',\n            value: '',\n            tax:   '',\n            exemptions: [],\n            deductions: [],\n\n            util: util\n        }\n    },\n    mounted () {\n        this.initNewIncome();\n    },\n    computed: {\n        grossExample: function () {\n            var timeline = this.timeline == 'annual' ? 'common.annual' : 'common.monthly';\n            return this.$t('incomes.gross_amount_examples', {\n                mode: this.mode ,\n                timeline: this.$t(timeline)\n            });\n        }\n    },\n    methods: {\n        addIncome: function (e) {\n            if (e) e.preventDefault();\n            this.normalizeIncome();\n            this.normalizeExemptions();\n            this.normalizeDeductions();\n            if (!this.validateIncome()) return;\n            this.validateExemptions();\n            this.validateDeductions();\n\n            // exemptions + deductions > income\n            let tax_free = this.exemptions.reduce((a, e) => a + e.value, 0);\n            tax_free = this.deductions.reduce((a, d) => a + d.value, tax_free);\n            if (tax_free > this.value) {\n                alert(this.$t('incomes.pretax_error'));\n                return false;\n            }\n\n            // add\n            this.$emit('addIncome', {\n                label: this.label,\n                tax: this.tax,\n                value: this.value,\n                exemptions: this.exemptions,\n                deductions: this.deductions\n            });\n\n            this.initNewIncome();\n        },\n        normalizeIncome: function () {\n            this.tax   = parseInt(this.tax);\n            this.value = parseInt(this.value);\n        },\n        validateIncome: function () {\n            // do we have budget to edit this income when lowering the income value?\n            if (this.income) {\n                let income = JSON.parse(JSON.stringify(this.income));\n                income.value = this.value;\n                var diff = util.getNet(this.income) - util.getNet(income);\n                if (diff > this.unallocatedSum) {\n                    alert(this.$t('incomes.reduction_error', {\n                        required_total: util.formatMoney(diff, this.mode),\n                        required_additional: util.formatMoney(diff-this.unallocatedSum, this.mode)\n                    }));\n                    return false;\n                }\n            }\n\n            // validate label, tax, and value\n            if (this.label == '') {\n                alert(this.$t('incomes.label_error'));\n                return false;\n            }\n            if (isNaN(this.tax) || this.tax < 1 || this.tax > 100) {\n                alert(this.$t('incomes.tax_error'));\n                return false;\n            }\n            if (isNaN(this.value) || this.value <= 0) {\n                alert(this.$t('incomes.value_error'));\n                return false;\n            }\n            return true;\n        },\n        cancelEditIncome: function () {\n            this.$emit('editIncome', false);\n        },\n        /************************************************************\n         * EXEMPTIONS\n         ************************************************************/\n        addExemption: function () {\n            this.exemptions.push({\n                label: '',\n                value: '',\n                match: '',\n                value_mode: 'currency',\n                match_mode: 'currency'\n            });\n        },\n        removeExemption: function (idx) {\n            var empty = !this.exemptions[idx].label;\n            empty = empty && !this.exemptions[idx].value;\n            empty = empty && !this.exemptions[idx].match;\n            if (empty || confirm(this.$t('incomes.exemption_confirmation'))) {\n                this.exemptions.splice(idx, 1);\n            }\n        },\n        clearExemptions: function () {\n            this.exemptions = [];\n        },\n        // convert % contribution and match to $\n        normalizeExemptions: function () {\n            for (var key in this.exemptions) {\n                let exemption = this.exemptions[key];\n                if (exemption.value_mode == 'percent') {\n                    exemption.value      = this.value * exemption.value / 100;\n                    exemption.value_mode = 'currency';\n                }\n                if (exemption.match_mode == 'percent') {\n                    exemption.match      = this.value * exemption.match / 100;\n                    exemption.match_mode = 'currency';\n                }\n            }\n        },\n        validateExemptions: function () {\n            this.exemptions.forEach(exemption => {\n                exemption.value = parseInt(exemption.value);\n                if (isNaN(exemption.value) || exemption.value < 0) {\n                    alert(this.$t('incomes.exemption_value_error'));\n                    throw this.$t('incomes.exemption_value_error');\n                }\n                exemption.match = parseInt(exemption.match);\n                if (isNaN(exemption.match) || exemption.match < 0) {\n                    alert(this.$t('incomes.exemption_match_error'));\n                    throw this.$t('incomes.exemption_match_error');\n                }\n            })\n        },\n        /************************************************************\n         * DEDUCTIONS\n         ************************************************************/\n        addDeduction: function () {\n            this.deductions.push({\n                label: '',\n                value: '',\n                value_mode: 'currency',\n            });\n        },\n        removeDeduction: function (idx) {\n            var empty = !this.deductions[idx].label && !this.deductions[idx].value;\n            if (empty || confirm(this.$t('incomes.deduction_confirmation'))) {\n                this.deductions.splice(idx, 1);\n            }\n        },\n        clearDeductions: function () {\n            this.deductions = [];\n        },\n        // convert % deductions to $\n        normalizeDeductions: function () {\n            for (var key in this.deductions) {\n                let deduction = this.deductions[key];\n                if (deduction.value_mode == 'percent') {\n                    deduction.value      = this.value * deduction.value / 100;\n                    deduction.value_mode = 'currency';\n                }\n            }\n        },\n        validateDeductions: function () {\n            this.deductions.forEach(deduction => {\n                deduction.value = parseInt(deduction.value);\n                if (isNaN(deduction.value) || deduction.value < 0) {\n                    alert(this.$t('incomes.deduction_value_error'));\n                    throw this.$t('incomes.deduction_value_error');\n                }\n            })\n        },\n        /************************************************************\n         * UTIL\n         ************************************************************/\n        initNewIncome: function () {\n            this.label      = '';\n            this.tax        = '';\n            this.value      = '';\n            this.exemptions = [];\n            this.deductions = [];\n            document.getElementById('new-income-focus').focus();\n        },\n    },\n    watch: {\n        // set local scope values if someone clicks edit income\n        income: function () {\n            this.value      = this.income ? this.income.value : '';\n            this.label      = this.income ? this.income.label : '';\n            this.tax        = this.income ? this.income.tax : '';\n            this.exemptions = this.income ? this.income.exemptions : [];\n            this.deductions = this.income ? this.income.deductions : [];\n            if (this.exemptions.length) {\n                this.exemptions = JSON.parse(JSON.stringify(this.exemptions));\n            }\n            if (this.deductions.length) {\n                this.deductions = JSON.parse(JSON.stringify(this.deductions));\n            }\n        }\n    }\n}\n\n</script>\n\n\n<style scoped>\n\n.desktop-only-inline {\n    float: right;\n    margin-top:30px;\n}\n\n.desktop-only-inline .remove-expense {\n    padding-left:5px;\n    padding-right:17px;\n    color:red;\n}\n\n.btn-outline-danger {\n    margin-top:5px;\n}\n\n.btn-outline-primary {\n    margin-top:5px;\n}\n\n\n</style>"]}]}