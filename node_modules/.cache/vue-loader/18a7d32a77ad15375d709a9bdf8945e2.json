{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomeBreakdown.vue?vue&type=style&index=0&id=64b6686b&scoped=true&lang=css&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomeBreakdown.vue","mtime":1599459793246},{"path":"/home/adam/Desktop/sankycash/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lcXVhdGlvbiB7CiAgICBmb250LXZhcmlhbnQ6IGFsbC1zbWFsbC1jYXBzOwogICAgZm9udC1zaXplOiAxNHB4Owp9CgpoNiB7CiAgICBtYXJnaW4tYm90dG9tOiAwcHg7Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTQwcHgpIHsKICAgIC5ncm9zcy1uZXQtaGVhZGVyIHsKICAgICAgICBmbG9hdDpyaWdodDsKICAgIH0KfQoK"},{"version":3,"sources":["ViewIncomeBreakdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqOA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ViewIncomeBreakdown.vue","sourceRoot":"src/components/Incomes","sourcesContent":["<template>\n    <div class=\"modal\" id=\"breakdown-modal\" tabindex=\"-1\" role=\"dialog\">\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\n            <div class=\"modal-content\" v-if=\"income\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" style=\"width:100%\" v-if=\"income\">\n                        {{ income.label }} - Net Breakdown\n                        <span class=\"gross-net-header\">\n                            <span class=\"badge badge-primary\">\n                                {{ $t('common.gross_short') }}: {{ gross }}\n                            </span>&nbsp;\n                            <span class=\"badge badge-primary\">\n                                {{ $t('common.net_short') }}: {{ net }}\n                            </span>&nbsp;\n                        </span>\n                    </h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"row\" v-if=\"income.exemptions.length\">\n                        <div class=\"col-md-6 col-sm-12\">\n                            <h6>\n                                {{ $t('incomes.tax_exempt_contributions') }}\n                                <span class=\"badge badge-secondary\">{{ exemptions }}</span>\n                            </h6>\n                            <span class=\"equation\" v-html=\"exemptionsBreakdown\"></span>\n                        </div>\n                        <div class=\"col-sm-12 mobile-only\"><br></div>\n                        <div class=\"col-md-6 col-sm-12\">\n                            <h6>\n                                {{ $t('incomes.tax_exempt_match') }}\n                                <span class=\"badge badge-secondary\">{{ matches }}</span>\n                            </h6>\n                            <span class=\"equation\" v-html=\"matchesBreakdown\"></span>\n                        </div>\n                    </div>\n                    <br v-if=\"income.exemptions.length\">\n                    <div class=\"row\" v-if=\"income.deductions.length\">\n                        <div class=\"col-md-12\">\n                            <h6>\n                                {{ $t('incomes.pretax_deductions') }}\n                                <span class=\"badge badge-secondary\">{{ deductions }}</span>\n                            </h6>\n                            <span class=\"equation\" v-html=\"deductionsBreakdown\"></span>\n                        </div>\n                    </div>\n                    <br v-if=\"income.deductions.length\">\n                    <div class=\"row\" v-if=\"income.deductions.length || income.exemptions.length\">\n                        <div class=\"col-md-12\">\n                            <h6>\n                                {{ this.$t('common.taxable') }}\n                                <span class=\"badge badge-secondary\">{{ taxable }}</span>\n                            </h6>\n                            <span class=\"equation\" v-html=\"taxableBreakdown\"></span>\n                        </div>\n                    </div>\n                    <br v-if=\"income.deductions.length || income.exemptions.length\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <h6>\n                                {{ this.$t('common.tax') }}\n                                <span class=\"badge badge-secondary\">{{ tax }}</span>\n                            </h6>\n                            <span class=\"equation\" v-html=\"taxBreakdown\"></span>\n                        </div>\n                    </div>\n                    <hr>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <h6>\n                                {{ this.$t('common.net') }}\n                                <span class=\"badge badge-secondary\">{{ net }}</span>\n                            </h6>\n                            <span class=\"equation\" v-html=\"netBreakdown\"></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport util from '../../util.js';\nimport Vue from 'vue';\n\nexport default {\n    name: \"ViewIncomeBreakdown\",\n    props: ['mode'],\n    data () {\n        return {\n            util: util,\n            income: false\n        }\n    },\n    methods: {\n        show: function (income) {\n            Vue.set(this, 'income', income);\n            window.$('#breakdown-modal').modal('show');\n        }\n    },\n    computed: {\n        gross: function () {\n            return util.formatMoney(this.income.value, this.mode);\n        },\n        tax_rate: function () {\n            return util.formatTax(this.income.tax);\n        },\n        exemptions: function () {\n            return util.formatMoney(util.getExemptions(this.income), this.mode);\n        },\n        exemptionsBreakdown: function () {\n            let breakdown = this.$t('incomes.tax_exempt_contributions') + ' = ';\n            this.income.exemptions.forEach(exemption => {\n                breakdown += exemption.label + ' + ';\n            });\n            breakdown = breakdown.substring(0, breakdown.length-2) + '<br>';\n            breakdown += this.$t('incomes.tax_exempt_contributions') + ' = ';\n            this.income.exemptions.forEach(exemption => {\n                breakdown += util.formatMoney(exemption.value, this.mode) + ' + ';\n            });\n            breakdown = breakdown.substring(0, breakdown.length-2) + '<br>';\n            if (this.income.exemptions.length == 1) return breakdown;\n            breakdown += this.$t('incomes.tax_exempt_contributions') + ' = ' + this.exemptions;\n            return breakdown;\n        },\n        matches: function () {\n            return util.formatMoney(util.getMatch(this.income), this.mode);\n        },\n        matchesBreakdown: function () {\n            let breakdown = this.$t('incomes.tax_exempt_match') + ' = ';\n            this.income.exemptions.forEach(exemption => {\n                breakdown += exemption.label + ' + ';\n            });\n            breakdown = breakdown.substring(0, breakdown.length-2) + '<br>';\n            breakdown += this.$t('incomes.tax_exempt_match') + ' = ';\n            this.income.exemptions.forEach(exemption => {\n                breakdown += util.formatMoney(exemption.match, this.mode) + ' + ';\n            });\n            breakdown = breakdown.substring(0, breakdown.length-2) + '<br>';\n            if (this.income.exemptions.length == 1) return breakdown;\n            breakdown += this.$t('incomes.tax_exempt_match') + ' = ' + this.matches;\n            return breakdown;\n        },\n        deductions: function () {\n            return util.formatMoney(util.getDeductions(this.income), this.mode);\n        },\n        deductionsBreakdown: function () {\n            let breakdown = this.$t('incomes.pretax_deductions') + ' = ';\n            this.income.deductions.forEach(deduction => {\n                breakdown += deduction.label + ' + ';\n            });\n            breakdown = breakdown.substring(0, breakdown.length-2) + '<br>';\n            breakdown += this.$t('incomes.pretax_deductions') + ' = ';\n            this.income.deductions.forEach(deduction => {\n                breakdown += util.formatMoney(deduction.value, this.mode) + ' + ';\n            });\n            breakdown = breakdown.substring(0, breakdown.length-2) + '<br>';\n            if (this.income.deductions.length == 1) return breakdown;\n            breakdown += this.$t('incomes.pretax_deductions') + ' = ' + this.deductions;\n            return breakdown;\n        },\n        taxable: function () {\n            return util.formatMoney(util.getTaxableIncome(this.income), this.mode);\n        },\n        taxableBreakdown: function () {\n            let breakdown = this.$t('common.taxable') + ' = ' + this.$t('common.gross');\n            breakdown += ' - ' + this.$t('incomes.tax_exempt_contributions');\n            breakdown += ' - ' + this.$t('incomes.pretax_deductions');\n            breakdown += '<br>';\n            breakdown += this.$t('common.taxable') + ' = ' + this.gross;\n            breakdown += ' - ' + this.exemptions;\n            breakdown += ' - ' + this.deductions;\n            breakdown += '<br>';\n            breakdown += this.$t('common.taxable') + ' = ' + this.taxable;\n            return breakdown;\n        },\n        tax: function () {\n            return util.formatMoney(util.getTax(this.income), this.mode);\n        },\n        taxBreakdown: function () {\n            let breakdown = this.$t('common.tax') + ' = ';\n            breakdown += this.$t('common.taxable') + ' * ' + this.$t('common.tax_rate');\n            breakdown += '<br>';\n            breakdown += this.$t('common.tax') + ' = ';\n            breakdown += this.taxable + ' * (' + this.tax_rate + ' / 100)';\n            breakdown += '<br>';\n            breakdown += this.$t('common.tax') + ' = ' + this.tax;\n            return breakdown;\n        },\n        net: function () {\n            return util.formatMoney(util.getNet(this.income), this.mode);\n        },\n        netBreakdown: function () {\n            let breakdown = this.$t('common.net') + ' = ';\n            if (!this.income.exemptions.length && !this.income.deductions.length) {\n                breakdown += this.$t('common.gross') + ' - ' + this.$t('common.tax');\n                breakdown += '<br>';\n                breakdown += this.$t('common.net') + ' = ';\n                breakdown += this.gross + ' - ' + this.tax;\n                breakdown += '<br>';\n                breakdown += this.$t('common.net') + ' = ' + this.net;\n                return breakdown;\n            }\n            breakdown += this.$t('common.taxable') + ' - ' + this.$t('common.tax');\n            if (this.income.exemptions.length) {\n                breakdown += ' + ' + this.$t('incomes.tax_exempt_contributions');\n                breakdown += ' + ' + this.$t('incomes.tax_exempt_match');\n            }\n            breakdown += '<br>';\n            breakdown += this.$t('common.net') + ' = ';\n            breakdown += this.taxable + ' - ' + this.tax;\n            if (this.income.exemptions.length) {\n                breakdown += ' + ' + this.exemptions + ' + ' + this.matches;\n            }\n            breakdown += '<br>';\n            breakdown += this.$t('common.net') + ' = ' + this.net;\n            return breakdown;\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n\n.equation {\n    font-variant: all-small-caps;\n    font-size: 14px;\n}\n\nh6 {\n    margin-bottom: 0px;\n}\n\n@media only screen and (min-width: 540px) {\n    .gross-net-header {\n        float:right;\n    }\n}\n\n</style>"]}]}