{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Chart.vue","mtime":1599033711897},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div v-show=\"this.gross.value > 0\">\n        <div class=\"sankey-wrapper\" :class=\"{ 'sankey-scroll': canvas == 'medium' || canvas == 'large' }\">\n            <div id=\"sankey\" class=\"sankey\" :class=\"{ 'sankey-md': canvas == 'medium', 'sankey-lg': canvas == 'large' }\"></div>\n        </div>\n        <div style=\"position: relative;\">\n            <span class=\"float-right switch\">\n                <div class=\"btn-group percent-buttons\" role=\"group\" aria-label=\"Basic example\">\n                    <button type=\"button\" v-on:click=\"toggleCanvas('small')\" class=\"btn btn-secondary canvas-small\" :class=\"{ active: canvas == 'small' }\"><span class=\"fa fa-square\"></span></button>\n                    <button type=\"button\" v-on:click=\"toggleCanvas('medium')\" class=\"btn btn-secondary canvas-medium\" :class=\"{ active: canvas == 'medium' }\"><span class=\"fa fa-square\"></span></button>\n                    <button type=\"button\" v-on:click=\"toggleCanvas('large')\" class=\"btn btn-secondary canvas-large\" :class=\"{ active: canvas == 'large' }\"><span class=\"fa fa-square\"></span></button>\n                </div>\n                <div class=\"btn-group percent-buttons\" role=\"group\" aria-label=\"Basic example\">\n                    <button type=\"button\" v-on:click=\"togglePercent(false)\" class=\"btn btn-secondary\" :class=\"{ active: !percent }\">{{ mode }}</button>\n                    <button type=\"button\" v-on:click=\"togglePercent(true)\" class=\"btn btn-secondary\" :class=\"{ active: percent }\">%</button>\n                </div>\n            </span>\n        </div>\n        <div class=\"btn-group chart-up\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"viewChart()\" v-show=\"!atTop && chartShowing\">\n                <span class=\"fa fa-arrow-up\"> Chart</span>\n            </button>\n        </div>\n        <br>\n    </div>\n</template>\n\n<script>\nimport google from 'google';\nimport util from '../util.js';\nimport html2canvas from 'html2canvas';\n\nexport default {\n    name: 'Chart',\n    props: [\n        'chartShowing', 'mode',\n        'itemizedIncomes', 'itemizedExpenses', 'itemizedInvestments',\n        'grossSum', 'netSum', 'taxSum', 'unallocatedSum', 'investmentSum', 'expenseSum',\n        'deductionSum'\n    ],\n    data () {\n        return {\n            // chart labels\n            gross:       { label: 'Gross Income', value: this.formatValue(this.grossSum)      },\n            net:         { label: 'Net Income',   value: this.formatValue(this.netSum)        },\n            tax:         { label: 'Taxes',        value: this.formatValue(this.taxSum)        },\n            deductions:  { label: 'Deductions',   value: this.formatValue(this.deductionSum) },\n            unallocated: { label: 'Unallocated',  value: this.formatValue(this.unallocatedSum)},\n            expenses:    { label: 'Expenses',     value: this.formatValue(this.expenseSum)    },\n            investments: { label: 'Investments',  value: this.formatValue(this.investmentSum) },\n\n            // chart rendering\n            chart: false,\n            colors: 'gradient',\n            atTop: true,\n            percent: false,\n            canvas: 'small'\n        }\n    },\n    mounted () {\n        google.charts.load('current', {'packages':['sankey']});\n    },\n    created () {\n        window.addEventListener('scroll', this.handleScroll);\n        window.addEventListener('resize', this.handleResize);\n    },\n    destroyed () {\n        window.removeEventListener('scroll', this.handleScroll);\n        window.removeEventListener('resize', this.handleResize);\n    },\n    watch: {\n        grossSum: function () {\n            this.render();\n        },\n        netSum: function () {\n            this.render();\n        },\n        taxSum: function () {\n            this.render();\n        },\n        unallocatedSum: function () {\n            this.render();\n        },\n        expenseSum: function () {\n            this.render();\n        },\n        investmentSum: function () {\n            this.render();\n        }\n    },\n    methods: {\n        render: function (download=false) {\n            if (!this.grossSum && !this.netSum && !this.taxSum && !this.deductionSum\n                && !this.unallocatedSum && !this.expenseSum  && !this.investmentSum) {\n                return;\n            }\n            this.gross.value       = this.formatValue(this.grossSum);\n            this.net.value         = this.formatValue(this.netSum);\n            this.tax.value         = this.formatValue(this.taxSum);\n            this.deductions.value  = this.formatValue(this.deductionSum);\n            this.unallocated.value = this.formatValue(this.unallocatedSum);\n            this.expenses.value    = this.formatValue(this.expenseSum);\n            this.investments.value = this.formatValue(this.investmentSum);\n            window.$(function () {\n                window.$('[data-toggle=\"tooltip\"]').tooltip('dispose');\n                window.$('[data-toggle=\"tooltip\"]').tooltip('enable');\n            })\n            google.charts.setOnLoadCallback(() => {\n                this.chart = new google.visualization.DataTable();\n                this.chart.addColumn('string', 'From');\n                this.chart.addColumn('string', 'To');\n                this.chart.addColumn('number', 'Amount');\n                this.drawIncomeBreakdown();\n                this.drawExpensesBreakdown();\n                this.drawInvestmentBreakdown();\n\n                var canvas = document.getElementById('sankey');\n                var chart = new google.visualization.Sankey(canvas);\n                chart.draw(this.chart, this.getChartStyling());\n                if (download) this.downloadChart();\n            });\n        },\n        /**************************************************************\n         * Income\n         **************************************************************/\n        drawIncomeBreakdown: function () {\n            this.drawGrossIncome();\n            this.drawTaxes();\n            this.drawDeductions();\n            this.drawNetIncome();\n        },\n        // draw lines: income streams -> gross\n        // treat employee matches as separate income streams\n        drawGrossIncome: function () {\n            this.itemizedIncomes.forEach(stream => {\n                stream = JSON.parse(JSON.stringify(stream));\n                stream.value = this.formatValue(stream.value);\n                this.addChartRow(stream, this.gross);\n                stream.exemptions.forEach(exemption => {\n                    exemption = JSON.parse(JSON.stringify(exemption));\n                    if (exemption.match > 0) {\n                        exemption.match = this.formatValue(exemption.match);\n                        this.addChartRow({\n                            label: exemption.label+' Match', value: exemption.match\n                        }, this.gross);\n                    }\n                });\n            })\n        },\n        // draw line: gross -> taxes\n        // draw line: taxes -> taxes\n        // draw line: taxes -> taxes\n        drawTaxes: function () {\n            this.addChartRow(this.gross, this.tax);\n            this.addChartRow(this.tax, this.tax);\n            this.addChartRow(this.tax, this.tax);\n        },\n        // draw line: gross      -> deductions\n        // draw line: deductions -> deductions\n        // draw line: deductions -> deductions\n        drawDeductions: function () {\n            this.addChartRow(this.gross, this.deductions);\n            this.addChartRow(this.deductions, this.deductions);\n            this.addChartRow(this.deductions, this.deductions);\n        },\n        // draw line: gross -> net\n        drawNetIncome: function () {\n            this.addChartRow(this.gross, this.net);\n        },\n        /**************************************************************\n         * Expenses\n         **************************************************************/\n        drawExpensesBreakdown: function () {\n            this.itemizedExpenses.forEach(expense => {\n                expense = JSON.parse(JSON.stringify(expense));\n                expense.value = this.formatValue(expense.value);\n                this.addChartRow(this.net, expense);\n                this.addChartRow(expense, this.expenses);\n            })\n        },\n        /**************************************************************\n         * Investments\n         **************************************************************/\n        drawInvestmentBreakdown: function () {\n            this.drawExemptions();\n            this.itemizedInvestments.forEach(investment => {\n                investment = JSON.parse(JSON.stringify(investment));\n                investment.value = this.formatValue(investment.value);\n                this.addChartRow(this.net, investment);\n                this.addChartRow(investment, this.investments);\n            })\n            this.addChartRow(this.net, this.unallocated);\n            this.addChartRow(this.unallocated, this.unallocated);\n        },\n        drawExemptions: function () {\n            this.itemizedIncomes.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    exemption = JSON.parse(JSON.stringify(exemption));\n                    exemption.value = this.formatValue(exemption.value + exemption.match);\n                    this.addChartRow(this.net, exemption);\n                    this.addChartRow(exemption, this.investments);\n                });\n            })\n        },\n        /**************************************************************\n         * Chart Stuff\n         **************************************************************/\n        addChartRow: function (from, to) {\n            let mode = this.percent ? '%' : this.mode;\n            if (from.value == 0 || to.value == 0) return;\n            var append = to.label == from.label ? ' ' : '';\n            let value = Math.min(from.value, to.value);\n            let from_label = from.label + ' (';\n            from_label += util.formatMoney(from.value, mode);\n            from_label += ')';\n            let to_label   = to.label + append + ' (';\n            to_label += util.formatMoney(to.value, mode);\n            to_label += ')';\n            this.chart.addRow([from_label, to_label, value]);\n            to.label += append;\n        },\n        viewChart: () => window.scrollTo(0,0),\n        downloadChartTrigger: function () {\n            this.colors = 'source';\n            this.render(true);\n        },\n        downloadChart: function () {\n            window.scrollTo(0,0);\n            html2canvas(document.querySelector(\"#sankey\")).then(canvas => {\n                let uri = canvas.toDataURL();\n                var link = document.createElement(\"a\");\n                link.download = \"sankeycash.png\";\n                link.href = uri;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            });\n            this.colors = 'gradient';\n            this.render();\n        },\n        getChartStyling: function () {\n            var colors = [\n                '#a6cee3', '#b2df8a', '#fb9a99', '#fdbf6f',\n                '#cab2d6', '#ffff99', '#1f78b4', '#33a02c'\n            ];\n            return {\n                sankey: {\n                    node: {\n                        colors: colors,\n                        nodePadding: 7\n                    },\n                    link: {\n                        colorMode: this.colors,\n                        colors: colors\n                    },\n                    iterations: 0,\n                },\n            }\n        },\n        handleScroll: function () {\n            this.atTop = window.scrollY < 300;\n        },\n        handleResize: function () {\n            this.render();\n        },\n        formatValue: function (num) {\n            return this.percent ? Math.round(num/this.grossSum*100*10)/10 : num;\n        },\n        togglePercent: function (percent) {\n            this.percent = percent;\n            this.render();\n        },\n        toggleCanvas: function (size) {\n            this.canvas = size;\n            this.render();\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n.sankey {\n    height:300px;\n    width: 100%;\n    min-width:1000px;\n    margin-bottom:15px;\n}\n\n.sankey-md {\n    height:450px;\n    width: 150%;\n}\n\n.sankey-lg {\n    height:600px;\n    width:200%;\n}\n\n.chart-up {\n    position:fixed;\n    bottom:0px;\n    left:0px;\n    z-index:10000;\n    border-radius:\n}\n\n.chart-up .btn-secondary {\n    box-shadow: 0 0 0 .2rem rgba(130,138,145,.5);\n}\n\n.chart-up .btn:first-child {\n    border-radius: 0rem 0rem 0rem 0rem !important;\n}\n.chart-up .btn:last-child {\n    border-radius: 0rem 0.25rem 0rem 0rem !important;\n}\n\n.switch {\n    margin-right:30px;\n}\n\n.btn-secondary {\n    font-weight:bold !important;\n}\n\n.sankey-wrapper {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n}\n\n.sankey-scroll {\n    overflow-x: scroll;\n}\n\n@media only screen and (max-width: 1000px) {\n    .sankey-wrapper {\n        overflow-x: scroll;\n    }\n}\n\n.percent-buttons {\n    margin-left:10px;\n}\n\n.canvas-small {\n    font-size: 5px;\n}\n.canvas-medium {\n    font-size: 10px;\n}\n.canvas-large {\n    font-size: 15px;\n}\n\n</style>\n\n"]}]}