{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Chart.vue","mtime":1598333212824},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div id=\"sankey\"></div>\n        <button v-on:click=\"getChartUrl()\">Get</button>\n    </div>\n</template>\n\n<script>\nimport google from 'google';\nimport util from '../util.js';\nimport $ from 'jquery';\nimport _ from 'html2canvas';\n\nexport default {\n    name: 'Chart',\n    props: [\n        'itemizedIncomes', 'itemizedExpenses', 'itemizedInvestments',\n        'grossSum', 'netSum', 'taxSum', 'unallocatedSum', 'investmentSum', 'expenseSum'\n    ],\n    data () {\n        return {\n            // chart labels\n            gross: { label: 'Gross Income', value: this.grossSum },\n            net: { label: 'Net Income', value: this.netSum },\n            tax: { label: 'Taxes', value: this.taxSum },\n            unallocated: { label: 'Unallocated', value: this.unallocatedSum },\n            expenses: { label: 'Expenses', value: this.expenseSum },\n            investments: { label: 'Investments', value: this.investmentSum },\n\n            // chart rendering\n            chart: false,\n        }\n    },\n    mounted () {\n        google.charts.load('current', {'packages':['sankey']});\n    },\n    watch: {\n        grossSum: function () {\n            this.gross.value = this.grossSum;\n            if (this.gross.value != 0) this.render();\n        },\n        netSum: function () {\n            this.net.value = this.netSum;\n            if (this.net.value != 0) this.render();\n        },\n        taxSum: function () {\n            this.tax.value = this.taxSum;\n            if (this.tax.value != 0) this.render();\n        },\n        unallocatedSum: function () {\n            this.unallocated.value = this.unallocatedSum;\n            if (this.unallocated.value != 0) this.render();\n        },\n        expenseSum: function () {\n            this.expenses.value = this.expenseSum;\n            if (this.expenses.value != 0) this.render();\n        },\n        investmentSum: function () {\n            this.investments.value = this.investmentSum;\n            if (this.investments.value != 0) this.render();\n        }\n    },\n    methods: {\n        render: function () {\n            google.charts.setOnLoadCallback(() => {\n                this.chart = new google.visualization.DataTable();\n                this.chart.addColumn('string', 'From');\n                this.chart.addColumn('string', 'To');\n                this.chart.addColumn('number', 'Amount');\n                this.drawIncomeBreakdown();\n                this.drawExpensesBreakdown();\n                this.drawInvestmentBreakdown();\n\n                var canvas = document.getElementById('sankey');\n                var chart = new google.visualization.Sankey(canvas);\n                chart.draw(this.chart, this.getChartStyling());\n\n            });\n        },\n        /**************************************************************\n         * Income\n         **************************************************************/\n        drawIncomeBreakdown: function () {\n            this.drawGrossIncome();\n            this.drawTaxes();\n            this.drawNetIncome();\n        },\n        // draw lines: income streams -> gross\n        // treat employee matches as separate income streams\n        drawGrossIncome: function () {\n            this.itemizedIncomes.forEach(stream => {\n                this.addChartRow(stream, this.gross);\n                stream.exemptions.forEach(exemption => {\n                    if (exemption.match > 0) {\n                        var match = {label: exemption.label+' Match', value: exemption.match};\n                        this.addChartRow(match, this.gross);\n                    }\n                });\n            })\n        },\n        // draw line: gross -> taxes\n        // draw line: taxes -> taxes\n        // draw line: taxes -> taxes\n        drawTaxes: function () {\n            this.addChartRow(this.gross, this.tax);\n            this.addChartRow(this.tax, this.tax);\n            this.addChartRow(this.tax, this.tax);\n        },\n        // draw line: gross -> net\n        drawNetIncome: function () {\n            this.addChartRow(this.gross, this.net);\n        },\n        /**************************************************************\n         * Expenses\n         **************************************************************/\n        drawExpensesBreakdown: function () {\n            this.itemizedExpenses.forEach(expense => {\n                this.addChartRow(this.net, expense);\n                this.addChartRow(expense, this.expenses);\n            })\n        },\n        /**************************************************************\n         * Investments\n         **************************************************************/\n        drawInvestmentBreakdown: function () {\n            this.drawExemptions();\n            this.itemizedInvestments.forEach(investment => {\n                this.addChartRow(this.net, investment);\n                this.addChartRow(investment, this.investments);\n            })\n            this.addChartRow(this.net, this.unallocated);\n            this.addChartRow(this.unallocated, this.unallocated);\n        },\n        drawExemptions: function () {\n            this.itemizedIncomes.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    this.addChartRow(this.net, exemption);\n                    this.addChartRow(exemption, this.investments);\n                });\n            })\n        },\n        /**************************************************************\n         * Chart Stuff\n         **************************************************************/\n        addChartRow: function (from, to) {\n            var append = to.label == from.label ? ' ' : '';\n            let value = Math.min(from.value, to.value);\n            let from_label = from.label + ' (' + util.formatMoney(from.value) + ')';\n            let to_label   = to.label   + append + ' (' + util.formatMoney(to.value) + ')';\n            this.chart.addRow([from_label, to_label, value]);\n            to.label += append;\n        },\n        getChartUrl: function () {\n            $('#sankey').html2canvas();\n            var queue = html2canvas.Parse();\n            var canvas = html2canvas.Renderer(queue,{elements:{length:1}});\n            var img = canvas.toDataURL();\n            window.open(img);\n        },\n        getChartStyling: function () {\n            let colors = [\n                '#a6cee3', '#b2df8a', '#fb9a99', '#fdbf6f',\n                '#cab2d6', '#ffff99', '#1f78b4', '#33a02c'\n            ];\n            return {\n                sankey: {\n                    node: {\n                        colors: colors,\n                        nodePadding: 7\n                    },\n                    link: {\n                        colorMode: 'gradient',\n                        colors: colors\n                    },\n                    iterations: 0,\n                },\n            }\n        }\n    }\n}\n</script>\n\n<style>\n#sankey {\n    width: 100%;\n    height:300px;\n}\n</style>\n\n"]}]}