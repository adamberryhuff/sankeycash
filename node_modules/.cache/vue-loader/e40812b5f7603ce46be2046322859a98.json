{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Incomes.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Incomes.vue","mtime":1598213970916},{"path":"/home/adam/Desktop/sankycash/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmV4ZW1wdGlvbnMgewogICAgcGFkZGluZzowcHggMnB4IDBweCAycHg7IG1hcmdpbi10b3A6NXB4Owp9Cg=="},{"version":3,"sources":["Incomes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsMA;AACA;AACA","file":"Incomes.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"row\">\n        <!-- title -->\n        <div class=\"col-md-12\">\n            <h2>Income Streams</h2>\n            <p>Input your annual income stream(s) and the tax rate you expect to pay.</p>\n        </div>\n\n        <!-- left side -->\n        <div class=\"col-md-6\">\n            <div class=\"form-group\">\n                <label>Label</label>\n                <input v-model=\"label\" type=\"text\" class=\"form-control\" required>\n                <small class=\"form-text text-muted\">\n                    The label is used in the chart: Salary, Rental Income, etc.\n                </small>\n            </div>\n            <div class=\"form-group\">\n                <label>Amount (Gross)</label>\n                <input type=\"number\" class=\"form-control\" min=\"1\" required v-model=\"amount\">\n                <small class=\"form-text text-muted\">\n                    The amount you make annually from this income stream (pre-tax).\n                </small>\n            </div>\n            <div class=\"form-group\">\n                <label>Tax Rate</label>\n                <input type=\"number\" class=\"form-control\" step=\".001\" min=\"0\" max=\"100\" required v-model=\"tax\">\n                <small class=\"form-text text-muted\">\n                    The percentage of tax for this income stream.\n                </small>\n            </div>\n            <div class=\"form-group\">\n                Does this income stream have any tax-exempt contributions?\n                <span class=\"float-right\">\n                    <input type=\"radio\" name=\"gridRadios\" v-on:click=\"addExemption()\">\n                    &nbsp;Yes\n                    <input type=\"radio\" name=\"gridRadios\" v-on:click=\"exemptions = []\" checked>\n                    &nbsp;No\n                </span>\n                <div v-for=\"(exemption, idx) in exemptions\" v-bind:key=\"idx\" class=\"row no-gutters\">\n                    <div class=\"col-md-4\" style=\"padding:0px 2px 0px 2px; margin-top:5px;\">\n                        <input placeholder=\"Label\" class=\"form-control\" required v-model=\"exemption.label\" />\n                    </div>\n                    <div class=\"col-md-4\" style=\"padding:0px 2px 0px 2px; margin-top:5px;\">\n                        <input placeholder=\"Contribution\" type=\"number\" class=\"form-control\" required v-model=\"exemption.value\" />\n                    </div>\n                    <div class=\"col-md-4\" style=\"padding:0px 2px 0px 2px; margin-top:5px;\">\n                        <input placeholder=\"Employer Match\" type=\"number\" class=\"form-control\" required v-model=\"exemption.match\" />\n                    </div>\n                </div>\n                <small class=\"form-text text-muted\">\n                    Examples: 401k, HSA\n                    <span class=\"float-right\" v-if=\"exemptions.length\" v-on:click=\"addExemption()\" style=\"cursor:pointer; color: #007bff; text-decoration: none; background-color: transparent;\">\n                        <i>Add Another</i>\n                    </span>\n                </small>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary float-right\" v-on:click=\"addIncome()\">\n                Add Income Stream\n            </button>\n        </div>\n\n        <!-- right side -->\n        <div class=\"col-md-6\">\n            <label>Income Streams</label>\n            <ul class=\"list-group\">\n                <li class=\"list-group-item d-flex justify-content-between align-items-center disabled\" v-if=\"!incomes.length\">\n                    You haven't added any income streams yet.\n                </li>\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\" style=\"cursor:pointer\" v-for=\"(income, idx) in incomes\" v-bind:key=\"income.label\" v-on:click=\"removeIncome(idx)\">\n                    <span id=\"label\">{{ income.label }}</span>\n                    <div>\n                        <span class=\"badge badge-success badge-pill\">\n                            {{ util.formatMoney(income.value) }}\n                        </span>&nbsp;\n                        <span class=\"badge badge-danger badge-pill\">\n                            {{ util.formatTax(income.tax) }}\n                        </span>\n                    </div>\n                </li>\n            </ul>\n            <small class=\"form-text text-muted\">\n                Click on an income stream to remove it.\n            </small>\n        </div>\n    </div>\n</template>\n\n<script>\nimport util from '../util.js';\n\nexport default {\n    name: 'Incomes',\n    data () {\n        return {\n            util: util,\n            label: '',\n            amount: 0,\n            tax: 0,\n            has_exemptions: false,\n            exemptions: [],\n            incomes: [\n                {\n                    label: 'Salary',\n                    value: 170000,\n                    tax: 30,\n                    exemptions: [\n                        {\n                            label: '401k',\n                            value: 19500,\n                            match: 6800\n                        },\n                        {\n                            label: 'HSA',\n                            value: 2830,\n                            match: 720\n                        }\n                    ]\n                },\n                {\n                    label: 'Equity',\n                    value: 80000,\n                    tax: 22,\n                    exemptions: []\n                },\n                {\n                    label: 'Bonus',\n                    value: 17000,\n                    tax: 30,\n                    exemptions: []\n                },\n                {\n                    label: 'Stipends',\n                    value: 600,\n                    tax: 30,\n                    exemptions: []\n                },\n                {\n                    label: 'Rental',\n                    value: 40800,\n                    tax: 30,\n                    exemptions: []\n                },\n            ],\n        }\n    },\n    methods: {\n        addIncome: function () {\n            // validate\n            if (this.label == '') {\n                alert('Income label is require to render chart.');\n                return;\n            }\n            if (isNaN(this.tax) || this.tax < 0) {\n                alert('Income tax rate should be a number >= 0');\n                return;\n            }\n            if (isNaN(this.amount)) {\n                alert('Income amount must be numeric.');\n                return;\n            }\n            if (this.incomes.filter(stream => stream.label == this.label ).length) {\n                alert('An income stream by this name already exists.');\n                return;\n            }\n\n            // add the new stream\n            this.incomes.push({\n                label: this.label,\n                tax: this.tax,\n                value: this.amount,\n                exemptions: this.exemptions\n            });\n\n            // reset everything in the form\n            this.label = '';\n            this.tax = 0;\n            this.amount = 0;\n            this.has_exemptions = false;\n            this.exemptions = [];\n\n            // emit\n        },\n        removeIncome: function (idx) {\n            // remove income stream\n            this.incomes.splice(idx, 1);\n\n            // emit\n        },\n        addExemption: function () {\n            this.exemptions.push({ label: '', value: '', match: '' });\n        },\n    }\n}\n</script>\n\n\n<style>\n.exemptions {\n    padding:0px 2px 0px 2px; margin-top:5px;\n}\n</style>"]}]}