{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue?vue&type=style&index=0&id=c9d6bd26&scoped=true&lang=css&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue","mtime":1599460822949},{"path":"/home/adam/Desktop/sankycash/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2xpY2thYmxlIHsKICAgIGN1cnNvcjpwb2ludGVyCn0KLmJhZGdlIHsKICAgIG1hcmdpbjoycHg7Cn0KLmluY29tZS1kaXNwbGF5IHsKICAgIHdpZHRoOjEwMCU7Cn0KLm5ldC1pbmNvbWUgewogICAgbWFyZ2luLWJvdHRvbTogMC41cmVtOwp9Ci5uZXQtaW5jb21lLWJhZGdlIHsKICAgIGZsb2F0OmluaXRpYWw7Cn0KLmJhZGdlLWxpZ2h0IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmViZWI7Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTQwcHgpIHsKICAgIC5wYWQgewogICAgICAgIG1hcmdpbi1yaWdodDogY2FsYygwLjI1cmVtICsgMTVweCk7CiAgICB9Cn0KCi5iYWRnZS1kZWR1Y3Rpb24gewogICAgY29sb3I6ICNlZjYwNjA7Cn0KCi5iYWRnZS1leGVtcHRpb24gewogICAgY29sb3I6ICM2Yzc1N2Q7Cn0KCi52aWV3LWJyZWFrZG93biB7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICAgIHBhZGRpbmc6IDBweDsKICAgIGJvcmRlcjogMHB4OwogICAgY29sb3I6ICMwMDdiZmY7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBmb250LXdlaWdodDogNDAwOwp9Cgoudmlldy1lZGl0LWNvbnRhaW5lciB7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBmb250LXdlaWdodDogNDAwOwp9CgouYmFkZ2VzIHsKICAgIHRleHQtYWxpZ246cmlnaHQ7Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTQwcHgpIHsKICAgIC5sZWZ0LXNpZGUgewogICAgICAgIG1pbi1oZWlnaHQ6NjJweDsKICAgIH0KCiAgICAudmlldy1lZGl0LWNvbnRhaW5lciB7CiAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7CiAgICAgICAgYm90dG9tOjBweDsKICAgICAgICBsZWZ0OiAwcHg7CiAgICB9Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTQwcHgpIHsKICAgIC52aWV3LWVkaXQtY29udGFpbmVyIHsKICAgICAgICBmbG9hdDpyaWdodDsKICAgIH0KfQoK"},{"version":3,"sources":["ViewIncomes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ViewIncomes.vue","sourceRoot":"src/components/Incomes","sourcesContent":["<template>\n    <div>\n        <ViewIncomeBreakdown ref=\"breakdown\" :mode=\"mode\" />\n\n        <!-- income streams label -->\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <label>{{ $t('incomes.header') }}</label>\n\n                <!-- income streams gross, tax, net -->\n                <span class=\"float-right net-income\">\n                    <span class=\"badge badge-success net-income-badge clickable\">\n                        {{ $t('common.gross_short') }}<span class=\"desktop-only-inline\">: {{ util.formatMoney(grossSum, mode) }}</span>\n                    </span>\n                    <span class=\"badge badge-success net-income-badge clickable pad\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"netTooltip\">\n                        {{ $t('common.net_short') }}<span class=\"desktop-only-inline\">: {{ util.formatMoney(netSum, mode) }}</span>\n                        &nbsp;\n                        <span class=\"fa fa-question-circle\" v-if=\"incomesItemized.length\"></span>\n                    </span>\n                </span>\n            </div>\n        </div>\n\n        <ul class=\"list-group\">\n\n            <!-- no income streams -->\n            <li class=\"list-group-item d-flex justify-content-between align-items-center disabled\" v-if=\"!incomesItemized.length\">\n                {{ $t('incomes.no_incomes') }}\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center clickable\" v-for=\"(income, idx) in incomesItemized\" v-bind:key=\"income.label\">\n                <div class=\"row no-gutters income-display\">\n                    <div class=\"col-md-4 left-side\">\n                        <span id=\"label\">{{ income.label }}</span><br class=\"desktop-only\">\n                        <span class=\"view-edit-container\">\n                            <button type=\"button\" class=\"btn btn-link view-breakdown\" v-on:click=\"editIncome(idx)\">\n                                {{ $t('common.edit') }}\n                            </button>&nbsp;\n                            |\n                            <button type=\"button\" class=\"btn btn-link view-breakdown\" v-on:click=\"deleteIncome(idx)\">\n                                {{ $t('common.delete') }}\n                            </button>&nbsp;\n                            |\n                            <button type=\"button\" class=\"btn btn-link view-breakdown\" v-on:click=\"showBreakdownModal(income)\">\n                                {{ $t('common.details') }}\n                            </button>\n                        </span>\n                    </div>\n                    <div class=\"col-md-8 badges\">\n                        <span class=\"badge badge-secondary\">\n                            {{ getGrossDisplay(income) }}\n                        </span>\n                        <span class=\"badge badge-secondary clickable\" data-toggle=\"tooltip\" data-placement=\"top\" data-html=\"true\">\n                            {{ getNetDisplay(income) }}\n                        </span><br>\n                        <span class=\"badge badge-light badge-exemption\">\n                            {{ getIncomeDisplay(income) }}\n                        </span>\n                        <span v-for=\"exemption in income.exemptions\" v-bind:key=\"exemption.label\">\n                            <span class=\"badge badge-light badge-exemption\">\n                                {{ getExemptionDisplay(exemption) }}\n                            </span>&nbsp;\n                        </span>\n                        <span v-for=\"deduction in income.deductions\" v-bind:key=\"deduction.label\">\n                            <span class=\"badge badge-light badge-deduction\">\n                                {{ getDeductionDisplay(deduction) }}\n                            </span>&nbsp;\n                        </span>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\nimport util from '../../util.js';\nimport ViewIncomeBreakdown from './ViewIncomeBreakdown.vue';\n\nexport default {\n    name: 'ViewIncomes',\n    props: ['incomesItemized', 'grossSum', 'taxSum', 'netSum', 'mode'],\n    components: {\n        ViewIncomeBreakdown\n    },\n    data () {\n        return {\n            util: util\n        }\n    },\n    methods: {\n        editIncome: function (idx) {\n            this.$emit('editIncome', idx);\n        },\n        getNetDisplay: function (income) {\n            let net = util.formatMoney(util.getNet(income), this.mode);\n            return `${this.$t('common.net_short')}: ${net}`;\n        },\n        showBreakdownModal: function (income) {\n            this.$refs.breakdown.show(income);\n        },\n        getGrossDisplay: function (income) {\n            let gross = util.formatMoney(income.value, this.mode);\n            return `${this.$t('common.gross_short')}: ${gross}`\n        },\n        getExemptionDisplay: function (exemption) {\n            let contribution = util.formatMoney(exemption.value, this.mode);\n            let match        = util.formatMoney(exemption.match, this.mode);\n            var disp = `${exemption.label}: ${contribution} + `;\n            disp += `${match} ${this.$t('common.match_short')}`;\n            return disp;\n        },\n        getIncomeDisplay: function (income) {\n            let taxable = util.formatMoney(util.getTaxableIncome(income), this.mode);\n            let tax     = util.formatTax(income.tax);\n            return `${this.$t('common.taxable_short')}: ${taxable} (${tax})`;\n        },\n        getDeductionDisplay: function (deduction) {\n            let value = util.formatMoney(deduction.value, this.mode);\n            return `${deduction.label}: ${value}`;\n        },\n        deleteIncome: function (idx) {\n            this.$emit('deleteIncome', idx);\n        }\n    },\n    computed: {\n        netTooltip () {\n            if (!this.incomesItemized.length) return '';\n            var tip = `${this.$t('common.net_short')} = `;\n            this.incomesItemized.forEach(income => {\n                tip += income.label + ' (';\n                tip += util.formatMoney(util.getNet(income), this.mode);\n                tip += ') + ';\n            })\n            return tip.substring(0, tip.length-2);\n        }\n    },\n}\n\n</script>\n\n\n<style scoped>\n.clickable {\n    cursor:pointer\n}\n.badge {\n    margin:2px;\n}\n.income-display {\n    width:100%;\n}\n.net-income {\n    margin-bottom: 0.5rem;\n}\n.net-income-badge {\n    float:initial;\n}\n.badge-light {\n    background-color: #ebebeb;\n}\n\n@media only screen and (min-width: 540px) {\n    .pad {\n        margin-right: calc(0.25rem + 15px);\n    }\n}\n\n.badge-deduction {\n    color: #ef6060;\n}\n\n.badge-exemption {\n    color: #6c757d;\n}\n\n.view-breakdown {\n    cursor: pointer;\n    text-decoration: none;\n    background-color: transparent;\n    padding: 0px;\n    border: 0px;\n    color: #007bff;\n    font-size: 12px;\n    font-weight: 400;\n}\n\n.view-edit-container {\n    font-size: 12px;\n    font-weight: 400;\n}\n\n.badges {\n    text-align:right;\n}\n\n@media only screen and (min-width: 540px) {\n    .left-side {\n        min-height:62px;\n    }\n\n    .view-edit-container {\n        position:absolute;\n        bottom:0px;\n        left: 0px;\n    }\n}\n\n@media only screen and (max-width: 540px) {\n    .view-edit-container {\n        float:right;\n    }\n}\n\n</style>"]}]}