{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/App.vue","mtime":1599661949175},{"path":"/home/adam/Desktop/sankycash/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYXBwIHsKICAgIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsKICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7CiAgICBvdmVyZmxvdy14OiBoaWRkZW47Cn0KLmNvbnRhaW5lci1mbHVpZCB7CiAgICBwYWRkaW5nOjMwcHggMzBweCAwcHggMzBweDsKfQoKLmRpdmlkZXIgewogICAgd2lkdGg6IGNhbGMoMTAwJSArIDYwcHgpOwogICAgbWFyZ2luOiA2MHB4IDBweCA2MHB4IC0zMHB4Owp9CgouaW50cm9qcy10b29sdGlwIHsKICAgIG1heC13aWR0aDo4MDBweCAhaW1wb3J0YW50Owp9Ci5nb29nbGUtdmlzdWFsaXphdGlvbi10b29sdGlwIHsKICAgIGRpc3BsYXk6bm9uZTsKfQoKLm1vYmlsZS1vbmx5IHsKICAgIGRpc3BsYXk6bm9uZTsKfQoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NDBweCkgewogICAgLm1vYmlsZS1vbmx5IHsKICAgICAgICBkaXNwbGF5OiBpbml0aWFsOwogICAgfQp9CgouZGVza3RvcC1vbmx5IHsKICAgIGRpc3BsYXk6bm9uZTsKfQoKLmRlc2t0b3Atb25seS1pbmxpbmUgewogICAgZGlzcGxheTogbm9uZTsKfQoKI3NhbmtleS10ZXN0IHsKICAgIG1pbi13aWR0aDo4MDBweDsKfQoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NDBweCkgewogICAgLmRlc2t0b3Atb25seSB7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgIH0KICAgIC5kZXNrdG9wLW9ubHktaW5saW5lIHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmU7CiAgICB9Cn0KCi5sci1icmVhayB7CiAgICBtYXJnaW46IDI1cHggMHB4IDI1cHggMHB4Owp9CgppbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiwKaW5wdXQ6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24gewogIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsKICBtYXJnaW46IDA7Cn0KCmlucHV0W3R5cGU9bnVtYmVyXSB7CiAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n        <Toast ref=\"toast\"></Toast>\n        <Navbar\n            :mode=\"mode\"\n            :percent=\"percent\"\n            :canvas=\"canvas\"\n            :colors=\"colors\"\n            :timeline=\"timeline\"\n            :chartShowing=\"chartShowing\"\n            :itemizedIncomes=\"incomesItemized\"\n            :itemizedExpenses=\"expensesItemized\"\n            :itemizedInvestments=\"investmentsItemized\"\n            @setItemizedInvestments=\"setItemizedInvestments\"\n            @setItemizedExpenses=\"setItemizedExpenses\"\n            @setItemizedIncomes=\"setItemizedIncomes\"\n            @setTimeline=\"setTimeline\"\n            @download=\"download\"\n            @alert=\"alert\"\n            @setMode=\"setMode\"\n            @forceRender=\"forceRender\"\n            @setPercent=\"setPercent\"\n            @setCanvas=\"setCanvas\"\n            @setColors=\"setColors\" />\n        <Chart\n            ref=\"chart\"\n            :colors=\"colors\"\n            :chartShowing=\"chartShowing\"\n            :itemizedIncomes=\"incomesItemized\"\n            :itemizedExpenses=\"expensesItemized\"\n            :itemizedInvestments=\"investmentsItemized\"\n            :grossSum=\"grossSum\"\n            :netSum=\"netSum\"\n            :taxSum=\"taxSum\"\n            :mode=\"mode\"\n            :percent=\"percent\"\n            :canvas=\"canvas\"\n            :expenseSum=\"expenseSum\"\n            :unallocatedSum=\"unallocatedSum\"\n            :investmentSum=\"investmentSum\"\n            :deductionSum=\"deductionSum\"\n            @setPercent=\"setPercent\"\n            @setCanvas=\"setCanvas\" />\n        <div class=\"container-fluid\">\n            <Incomes\n                :incomesItemized=\"incomesItemized\"\n                :unallocatedSum=\"unallocatedSum\"\n                :grossSum=\"grossSum\"\n                :netSum=\"netSum\"\n                :taxSum=\"taxSum\"\n                :timeline=\"timeline\"\n                :mode=\"mode\"\n                @addIncome=\"addIncome\"\n                @removeIncome=\"removeIncome\" />\n            <img src=\"./assets/divider.png\" class=\"divider\">\n            <Expenses\n                :expensesItemized=\"expensesItemized\"\n                :netSum=\"netSum\"\n                :expenseSum=\"expenseSum\"\n                :unallocatedSum=\"unallocatedSum\"\n                :investmentSum=\"investmentSum\"\n                :timeline=\"timeline\"\n                :mode=\"mode\"\n                @removeExpense=\"removeExpense\"\n                @addExpense=\"addExpense\" />\n            <img src=\"./assets/divider.png\" class=\"divider\">\n            <Investments\n                :investmentsItemized=\"investmentsItemized\"\n                :incomesItemized=\"incomesItemized\"\n                :netSum=\"netSum\"\n                :expenseSum=\"expenseSum\"\n                :unallocatedSum=\"unallocatedSum\"\n                :investmentSum=\"investmentSum\"\n                :timeline=\"timeline\"\n                :mode=\"mode\"\n                @removeInvestment=\"removeInvestment\"\n                @addInvestment=\"addInvestment\" />\n        </div>\n        <Footer />\n    </div>\n</template>\n<script>\nimport Toast from './components/Toast.vue';\nimport Navbar from './components/Navbar.vue';\nimport Chart from './components/Chart.vue'\nimport Footer from './components/Footer.vue'\nimport Incomes from './components/Incomes.vue'\nimport Expenses from './components/Expenses.vue'\nimport Investments from './components/Investments.vue'\nimport defaults from './assets/defaults.json';\nimport Vue from 'vue';\n\nexport default {\n    name: 'App',\n    components: {\n        Toast,\n        Chart,\n        Footer,\n        Navbar,\n        Incomes,\n        Expenses,\n        Investments,\n    },\n    data () {\n        return {\n            incomesItemized: [],\n            expensesItemized: [],\n            investmentsItemized: [],\n            mode: defaults.mode,\n            timeline: defaults.timeline,\n            percent: defaults.percent,\n            canvas: defaults.canvas,\n            colors: defaults.colors\n        }\n    },\n    methods: {\n        /**\n         * Investment Methods\n         */\n        addIncome: function (income) {\n            if (income.idx !== false) {\n                this.incomesItemized[income.idx] = income;\n                delete this.incomesItemized[income.idx].idx;\n                this.$refs.toast.show(this.$t('toasts.income_update'));\n            } else {\n                this.incomesItemized.push(income);\n                this.$refs.toast.show(this.$t('toasts.income_added'));\n            }\n            this.incomesItemized.sort((a, b) => a.value < b.value);\n        },\n        removeIncome: function (idx) {\n            this.incomesItemized.splice(idx, 1);\n            this.incomesItemized.sort((a, b) => a.value < b.value);\n            this.$refs.toast.show(this.$t('toasts.income_removed'));\n        },\n        setItemizedIncomes: function (incomes) {\n            incomes.sort((a, b) => a.value < b.value);\n            incomes.forEach(income => {\n                income.value = parseInt(income.value);\n                income.tax   = parseInt(income.tax);\n                income.exemptions.forEach(exemption => {\n                    exemption.value = parseInt(exemption.value);\n                    exemption.match = parseInt(exemption.match);\n                });\n            });\n            Vue.set(this, 'incomesItemized', incomes);\n        },\n\n        /**\n         * Expense Methods\n         */\n        addExpense: function (expense) {\n            if (expense.idx !== false) {\n                this.expensesItemized[expense.idx] = expense;\n                delete this.expensesItemized[expense.idx].idx;\n                this.$refs.toast.show(this.$t('toasts.expense_update'));\n            } else {\n                this.expensesItemized.push(expense);\n                this.$refs.toast.show(this.$t('toasts.expense_added'));\n            }\n            this.expensesItemized.sort((a, b) => a.value < b.value);\n        },\n        removeExpense: function (idx) {\n            this.expensesItemized.splice(idx, 1);\n            this.expensesItemized.sort((a, b) => a.value < b.value);\n            this.$refs.toast.show(this.$t('toasts.expense_removed'));\n        },\n        setItemizedExpenses: function (expenses) {\n            expenses.sort((a, b) => a.value < b.value);\n            Vue.set(this, 'expensesItemized', expenses);\n        },\n\n        /**\n         * Investment Methods\n         */\n        addInvestment: function (investment) {\n            if (investment.idx !== false) {\n                this.investmentsItemized[investment.idx] = investment;\n                delete this.investmentsItemized[investment.idx].idx;\n                this.$refs.toast.show(this.$t('toasts.investment_update'));\n            } else {\n                this.investmentsItemized.push(investment);\n                this.$refs.toast.show(this.$t('toasts.investment_added'));\n            }\n            this.investmentsItemized.sort((a, b) => a.value < b.value);\n        },\n        removeInvestment: function (idx) {\n            this.investmentsItemized.splice(idx, 1);\n            this.investmentsItemized.sort((a, b) => a.value < b.value);\n            this.$refs.toast.show(this.$t('toasts.investment_removed'));\n        },\n        setItemizedInvestments: function (investments) {\n            investments.sort((a, b) => a.value < b.value);\n            Vue.set(this, 'investmentsItemized', investments);\n        },\n\n        /**\n         * Util\n         */\n        download: function () {\n            this.$refs.chart.downloadChartTrigger();\n        },\n        alert: function (alert) {\n            this.$refs.toast.show(alert);\n        },\n        setMode: function (mode) {\n            this.mode = mode;\n        },\n        forceRender: function () {\n            this.$refs.chart.render();\n        },\n        setTimeline: function (timeline) {\n            // adjust all numbers\n            this.incomesItemized.forEach(income => {\n                income.value = this.adjustTimeline(income.value, timeline);\n                income.exemptions.forEach(exemption => {\n                    exemption.value = this.adjustTimeline(exemption.value, timeline);\n                    exemption.match = this.adjustTimeline(exemption.match, timeline);\n                });\n                income.deductions.forEach(deduction => {\n                    deduction.value = this.adjustTimeline(deduction.value, timeline);\n                })\n            });\n            this.expensesItemized.forEach(expense => {\n                expense.value = this.adjustTimeline(expense.value, timeline);\n            });\n            this.investmentsItemized.forEach(investment => {\n                investment.value = this.adjustTimeline(investment.value, timeline);\n            });\n\n            this.timeline = timeline;\n        },\n        adjustTimeline (amount, new_timeline) {\n            if (this.timeline == 'annual' && new_timeline == 'monthly') {\n                return amount/12;\n            } else if (this.timeline == 'monthly' && new_timeline == 'annual') {\n                return amount*12;\n            }\n            return amount;\n        },\n        setPercent: function (percent) {\n            this.percent = percent;\n        },\n        setCanvas: function (canvas) {\n            this.canvas = canvas;\n        },\n        setColors: function (colors) {\n            this.colors = colors;\n        }\n    },\n    computed: {\n        grossSum () {\n            let value = 0;\n            this.incomesItemized.forEach(income => {\n                value += income.value;\n                income.exemptions.forEach(exemption => {\n                    value += exemption.match;\n                })\n            })\n            return value;\n        },\n        netSum () {\n            return this.grossSum-this.taxSum-this.deductionSum;\n        },\n        taxSum () {\n            let value = 0;\n            this.incomesItemized.forEach(income => {\n                let untaxable = income.exemptions.reduce((a, e) => a + e.value, 0);\n                untaxable = income.deductions.reduce((a, d) => a + d.value, untaxable);\n                let taxable   = income.value - untaxable;\n                value += taxable*(income.tax/100);\n            })\n            return value;\n        },\n        deductionSum () {\n            var value = 0;\n            this.incomesItemized.forEach(income => {\n                value += income.deductions.reduce((a, d) => a + d.value, 0);\n            });\n            return value;\n        },\n        exemptionSum () {\n            var value = 0;\n            this.incomesItemized.forEach(income => {\n                value += income.exemptions.reduce((a, e) => a + e.value + e.match, 0);\n            });\n            return value;\n        },\n        expenseSum () {\n            return this.expensesItemized.reduce((a, e) => a + e.value, 0);\n        },\n        investmentSum () {\n            let value = this.investmentsItemized.reduce((a, i) => a + i.value, 0);\n            return value + this.exemptionSum;\n        },\n        unallocatedSum () {\n            return this.netSum-this.expenseSum-this.investmentSum;\n        },\n        chartShowing () {\n            return this.investmentSum || this.expenseSum || this.unallocatedSum;\n        },\n    },\n    watch: {\n        incomesItemized: function () {\n            window.$(function () {\n                window.$('[data-toggle=\"tooltip\"]').tooltip('dispose');\n                window.$('[data-toggle=\"tooltip\"]').tooltip('enable');\n            })\n        },\n    },\n}\n</script>\n\n<style>\n#app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    overflow-x: hidden;\n}\n.container-fluid {\n    padding:30px 30px 0px 30px;\n}\n\n.divider {\n    width: calc(100% + 60px);\n    margin: 60px 0px 60px -30px;\n}\n\n.introjs-tooltip {\n    max-width:800px !important;\n}\n.google-visualization-tooltip {\n    display:none;\n}\n\n.mobile-only {\n    display:none;\n}\n\n@media only screen and (max-width: 540px) {\n    .mobile-only {\n        display: initial;\n    }\n}\n\n.desktop-only {\n    display:none;\n}\n\n.desktop-only-inline {\n    display: none;\n}\n\n#sankey-test {\n    min-width:800px;\n}\n\n@media only screen and (min-width: 540px) {\n    .desktop-only {\n        display: flex;\n    }\n    .desktop-only-inline {\n        display: inline;\n    }\n}\n\n.lr-break {\n    margin: 25px 0px 25px 0px;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n</style>\n"]}]}