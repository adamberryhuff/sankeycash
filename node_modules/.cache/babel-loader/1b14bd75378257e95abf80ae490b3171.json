{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/thread-loader/dist/cjs.js!/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Chart.vue","mtime":1598558708709},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div v-show=\"this.gross.value > 0\">\n        <div id=\"sankey\"></div>\n        <div style=\"position: relative;\" v-on:click=\"toggleMode()\">\n            <span class=\"float-right switch\">\n                <b><input type=\"checkbox\" id=\"mode-checkbox\" checked data-toggle=\"toggle\" data-size=\"sm\" data-on=\"$\" data-off=\"%\" data-onstyle=\"secondary\" data-offstyle=\"secondary\"></b>\n            </span>\n        </div>\n        <div class=\"btn-group\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"viewChart()\" v-show=\"!atTop && chartShowing\">\n                <span class=\"fa fa-arrow-up\"> Chart</span>\n            </button>\n        </div>\n        <br>\n    </div>\n</template>\n\n<script>\nimport google from 'google';\nimport util from '../util.js';\nimport html2canvas from 'html2canvas';\n\nexport default {\n    name: 'Chart',\n    props: [\n        'chartShowing',\n        'itemizedIncomes', 'itemizedExpenses', 'itemizedInvestments',\n        'grossSum', 'netSum', 'taxSum', 'unallocatedSum', 'investmentSum', 'expenseSum'\n    ],\n    data () {\n        return {\n            // chart labels\n            gross:       { label: 'Gross Income', value: this.formatValue(this.grossSum)      },\n            net:         { label: 'Net Income',   value: this.formatValue(this.netSum)        },\n            tax:         { label: 'Taxes',        value: this.formatValue(this.taxSum)        },\n            unallocated: { label: 'Unallocated',  value: this.formatValue(this.unallocatedSum)},\n            expenses:    { label: 'Expenses',     value: this.formatValue(this.expenseSum)    },\n            investments: { label: 'Investments',  value: this.formatValue(this.investmentSum) },\n\n            // chart rendering\n            chart: false,\n            colors: 'gradient',\n            atTop: true,\n            mode: 'value',\n            percent: false\n        }\n    },\n    mounted () {\n        google.charts.load('current', {'packages':['sankey']});\n    },\n    created () {\n        window.addEventListener('scroll', this.handleScroll);\n    },\n    destroyed () {\n        window.removeEventListener('scroll', this.handleScroll);\n    },\n    watch: {\n        grossSum: function () {\n            this.gross.value = this.formatValue(this.grossSum);\n            if (this.gross.value != 0) this.render();\n        },\n        netSum: function () {\n            this.net.value = this.formatValue(this.netSum);\n            if (this.net.value != 0) this.render();\n        },\n        taxSum: function () {\n            this.tax.value = this.formatValue(this.taxSum);\n            if (this.tax.value != 0) this.render();\n        },\n        unallocatedSum: function () {\n            this.unallocated.value = this.formatValue(this.unallocatedSum);\n            if (this.unallocated.value != 0) this.render();\n        },\n        expenseSum: function () {\n            this.expenses.value = this.formatValue(this.expenseSum);\n            if (this.expenses.value != 0) this.render();\n        },\n        investmentSum: function () {\n            this.investments.value = this.formatValue(this.investmentSum);\n            if (this.investments.value != 0) this.render();\n        }\n    },\n    methods: {\n        render: function (download=false) {\n            window.$(function () {\n                window.$('[data-toggle=\"tooltip\"]').tooltip('dispose');\n                window.$('[data-toggle=\"tooltip\"]').tooltip('enable');\n            })\n            google.charts.setOnLoadCallback(() => {\n                this.chart = new google.visualization.DataTable();\n                this.chart.addColumn('string', 'From');\n                this.chart.addColumn('string', 'To');\n                this.chart.addColumn('number', 'Amount');\n                this.drawIncomeBreakdown();\n                this.drawExpensesBreakdown();\n                this.drawInvestmentBreakdown();\n\n                var canvas = document.getElementById('sankey');\n                var chart = new google.visualization.Sankey(canvas);\n                chart.draw(this.chart, this.getChartStyling());\n                if (download) this.downloadChart();\n            });\n        },\n        /**************************************************************\n         * Income\n         **************************************************************/\n        drawIncomeBreakdown: function () {\n            this.drawGrossIncome();\n            this.drawTaxes();\n            this.drawNetIncome();\n        },\n        // draw lines: income streams -> gross\n        // treat employee matches as separate income streams\n        drawGrossIncome: function () {\n            this.itemizedIncomes.forEach(stream => {\n                stream = JSON.parse(JSON.stringify(stream));\n                stream.value = this.formatValue(stream.value);\n                this.addChartRow(stream, this.gross);\n                stream.exemptions.forEach(exemption => {\n                    exemption = JSON.parse(JSON.stringify(exemption));\n                    if (exemption.match > 0) {\n                        exemption.match = this.formatValue(exemption.match);\n                        this.addChartRow({\n                            label: exemption.label+' Match', value: exemption.match\n                        }, this.gross);\n                    }\n                });\n            })\n        },\n        // draw line: gross -> taxes\n        // draw line: taxes -> taxes\n        // draw line: taxes -> taxes\n        drawTaxes: function () {\n            this.addChartRow(this.gross, this.tax);\n            this.addChartRow(this.tax, this.tax);\n            this.addChartRow(this.tax, this.tax);\n        },\n        // draw line: gross -> net\n        drawNetIncome: function () {\n            this.addChartRow(this.gross, this.net);\n        },\n        /**************************************************************\n         * Expenses\n         **************************************************************/\n        drawExpensesBreakdown: function () {\n            this.itemizedExpenses.forEach(expense => {\n                expense = JSON.parse(JSON.stringify(expense));\n                expense.value = this.formatValue(expense.value);\n                this.addChartRow(this.net, expense);\n                this.addChartRow(expense, this.expenses);\n            })\n        },\n        /**************************************************************\n         * Investments\n         **************************************************************/\n        drawInvestmentBreakdown: function () {\n            this.drawExemptions();\n            this.itemizedInvestments.forEach(investment => {\n                investment = JSON.parse(JSON.stringify(investment));\n                investment.value = this.formatValue(investment.value);\n                this.addChartRow(this.net, investment);\n                this.addChartRow(investment, this.investments);\n            })\n            this.addChartRow(this.net, this.unallocated);\n            this.addChartRow(this.unallocated, this.unallocated);\n        },\n        drawExemptions: function () {\n            this.itemizedIncomes.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    exemption = JSON.parse(JSON.stringify(exemption));\n                    exemption.value = this.formatValue(exemption.value + exemption.match);\n                    this.addChartRow(this.net, exemption);\n                    this.addChartRow(exemption, this.investments);\n                });\n            })\n        },\n        /**************************************************************\n         * Chart Stuff\n         **************************************************************/\n        addChartRow: function (from, to) {\n            if (from.value == 0 || to.value == 0) return;\n            var append = to.label == from.label ? ' ' : '';\n            let value = Math.min(from.value, to.value);\n            let from_label = from.label + ' (';\n            from_label += this.percent ? from.value + '%' : util.formatMoney(from.value);\n            from_label += ')';\n            let to_label   = to.label   + append + ' (';\n            to_label += this.percent ? to.value + '%' : util.formatMoney(to.value);\n            to_label += ')';\n            this.chart.addRow([from_label, to_label, value]);\n            to.label += append;\n        },\n        viewChart: () => window.scrollTo(0,0),\n        downloadChartTrigger: function () {\n            this.colors = 'source';\n            this.render(true);\n        },\n        downloadChart: function () {\n            window.scrollTo(0,0);\n            html2canvas(document.querySelector(\"#sankey\")).then(canvas => {\n                let uri = canvas.toDataURL();\n                var link = document.createElement(\"a\");\n                link.download = \"sankeycash.png\";\n                link.href = uri;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            });\n            this.colors = 'gradient';\n            this.render();\n        },\n        getChartStyling: function () {\n            var colors = [\n                '#a6cee3', '#b2df8a', '#fb9a99', '#fdbf6f',\n                '#cab2d6', '#ffff99', '#1f78b4', '#33a02c'\n            ];\n            return {\n                sankey: {\n                    node: {\n                        colors: colors,\n                        nodePadding: 7\n                    },\n                    link: {\n                        colorMode: this.colors,\n                        colors: colors\n                    },\n                    iterations: 0,\n                },\n            }\n        },\n        handleScroll: function () {\n            this.atTop = window.scrollY < 300;\n        },\n        formatValue: function (num) {\n            return this.percent ? Math.round(num/this.grossSum*100*10)/10 : num;\n        },\n        toggleMode: function () {\n            this.percent           = document.getElementById('mode-checkbox').checked;\n            this.gross.value       = this.formatValue(this.grossSum);\n            this.net.value         = this.formatValue(this.netSum);\n            this.tax.value         = this.formatValue(this.taxSum);\n            this.unallocated.value = this.formatValue(this.unallocatedSum);\n            this.expenses.value    = this.formatValue(this.expenseSum);\n            this.investments.value = this.formatValue(this.investmentSum);\n            this.render();\n        }\n    }\n}\n</script>\n\n<style scoped>\n#sankey {\n    width: 100%;\n    height:300px;\n}\n\n.btn-group {\n    position:fixed;\n    bottom:0px;\n    left:0px;\n    z-index:10000;\n    border-radius:\n}\n\n.btn-secondary {\n    box-shadow: 0 0 0 .2rem rgba(130,138,145,.5);\n}\n\n.btn-group .btn:first-child {\n    border-radius: 0rem 0rem 0rem 0rem !important;\n}\n.btn-group .btn:last-child {\n    border-radius: 0rem 0.25rem 0rem 0rem !important;\n}\n\n.switch {\n    margin-right:30px;\n}\n\n.btn-secondary {\n    font-weight:bold !important;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}