{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Chart.vue","mtime":1598138028134},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div id=\"sankey\"></div>\n</template>\n\n<script>\nexport default {\n    name: 'Chart',\n    data () {\n        return {\n            income: [\n                {\n                    label: 'Salary',\n                    value: 170000,\n                    tax: 30,\n                    exemptions: [\n                        {\n                            label: '401k',\n                            value: 19500,\n                            match: 6800\n                        },\n                        {\n                            label: 'HSA',\n                            value: 2830,\n                            match: 720\n                        }\n                    ]\n                },\n                {\n                    label: 'Equity',\n                    value: 80000,\n                    tax: 22,\n                    exemptions: []\n                },\n                {\n                    label: 'Bonus',\n                    value: 17000,\n                    tax: 30,\n                    exemptions: []\n                },\n                {\n                    label: 'Stipends',\n                    value: 600,\n                    tax: 30,\n                    exemptions: []\n                },\n                {\n                    label: 'Rental',\n                    value: 40800,\n                    tax: 30,\n                    exemptions: []\n                },\n            ],\n            expenses: [\n                {\n                    label: 'Rental Mortgage',\n                    value: 20784\n                },\n                {\n                    label: 'Living Expenses',\n                    value: 36000\n                },\n            ],\n            investments: [\n                {\n                    label: 'Mortgage Principle',\n                    value: 18000\n                },\n            ],\n            // calculated values\n            gross: { label: 'Gross Income', value: 0 },\n            net: { label: 'Net Income', value: 0 },\n            tax: { label: 'Taxes', value: 0 },\n            remaining: { label: 'Index Funds', value: 0 },\n\n            // expenses and investments\n            spent: { label: 'Expenses', value: 0 },\n            saved: { label: 'Investments', value: 0 },\n\n            // chart rendering\n            chart: false,\n            colors: [\n                '#a6cee3', '#b2df8a', '#fb9a99', '#fdbf6f',\n                '#cab2d6', '#ffff99', '#1f78b4', '#33a02c'\n            ],\n            styling: {\n                sankey: {\n                    node: {\n                        colors: this.colors,\n                        nodePadding: 7\n                    },\n                    link: {\n                        colorMode: 'gradient',\n                        colors: this.colors\n                    },\n                    iterations: 0\n                }\n            }\n        }\n    },\n    mounted () {\n        google.charts.load('current', {'packages':['sankey']});\n        google.charts.setOnLoadCallback(() => {\n            this.chart = new google.visualization.DataTable();\n            this.chart.addColumn('string', 'From');\n            this.chart.addColumn('string', 'To');\n            this.chart.addColumn('number', 'Amount');\n            this.drawIncomeBreakdown();\n            this.drawExpensesBreakdown();\n            this.drawInvestmentBreakdown();\n\n            var canvas = document.getElementById('sankey');\n            var chart = new google.visualization.Sankey(canvas);\n            chart.draw(this.chart, this.styling);\n        });\n    },\n    methods: {\n        /**************************************************************\n         * Income\n         **************************************************************/\n        drawIncomeBreakdown: function () {\n            this.getGrossIncome();\n            this.drawGrossIncome();\n            this.applyTaxExemptions();\n            this.drawTaxes();\n            this.drawNetIncome();\n        },\n        getGrossIncome: function () {\n            this.income.forEach(stream => {\n                this.gross.value += stream.value;\n                stream.exemptions.forEach(exemption => {\n                    this.gross.value += exemption.match;\n                })\n            })\n        },\n        drawGrossIncome: function () {\n            this.income.forEach(stream => {\n                this.addChartRow(stream, this.gross);\n                stream.exemptions.forEach(exemption => {\n                    if (exemption.match > 0) {\n                        var match = {label: exemption.label+' Match', value: exemption.match};\n                        this.addChartRow(match, this.gross);\n                    }\n                });\n            })\n        },\n        applyTaxExemptions: function () {\n            this.income.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    stream.value -= exemption.value;\n                });\n            });\n        },\n        drawTaxes: function () {\n            // apply taxes\n            this.income.forEach(stream => {\n                let tax = stream.value*(stream.tax/100);\n                this.tax.value += tax;\n                stream.value -= tax;\n            });\n            this.addChartRow(this.gross, this.tax);\n            var tax = { label: 'Tax', value: this.tax.value }\n            this.addChartRow(this.tax, tax);\n            this.tax = tax;\n        },\n        drawNetIncome: function () {\n            this.net.value = this.gross.value - this.tax.value;\n            this.remaining.value = this.net.value;\n            this.addChartRow(this.gross, this.net);\n        },\n        /**************************************************************\n         * Expenses\n         **************************************************************/\n        drawExpensesBreakdown: function () {\n            this.spent.value = this.expenses.reduce((acc, e) => acc + e.value, this.tax.value);\n            this.addChartRow(this.tax, this.spent);\n            this.expenses.forEach(expense => {\n                this.addChartRow(this.net, expense);\n                this.remaining.value -= expense.value;\n                this.addChartRow(expense, this.spent);\n            })\n        },\n        /**************************************************************\n         * Investments\n         **************************************************************/\n        drawInvestmentBreakdown: function () {\n            this.saved.value = this.remaining.value;\n            this.drawExemptions();\n            this.investments.forEach(investment => {\n                this.addChartRow(this.net, investment);\n                this.remaining.value -= investment.value;\n                this.addChartRow(investment, this.saved);\n            })\n            this.addChartRow(this.net, this.remaining);\n            this.addChartRow(this.remaining, this.saved);\n        },\n        drawExemptions: function () {\n            this.income.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    exemption.value += exemption.match;\n                    this.addChartRow(this.net, exemption);\n                    this.remaining.value -= exemption.value;\n                    this.addChartRow(exemption, this.saved);\n                });\n            })\n        },\n        /**************************************************************\n         * Chart Stuff\n         **************************************************************/\n        addChartRow: function (from, to) {\n            let value = Math.min(from.value, to.value);\n            from = from.label + ' ($' + Math.floor(from.value) + ')';\n            to   = to.label   + ' ($' + Math.floor(to.value)   + ')';\n            this.chart.addRow([from, to, value]);\n        },\n    }\n}\n</script>\n\n<style>\n#sankey {\n    width: 100%;\n    height:300px;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}