{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue","mtime":1599041009495},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgdXRpbCBmcm9tICcuLi8uLi91dGlsLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdWaWV3SW5jb21lcycsCiAgcHJvcHM6IFsnaW5jb21lc0l0ZW1pemVkJywgJ2dyb3NzU3VtJywgJ3RheFN1bScsICduZXRTdW0nLCAnbW9kZSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1dGlsOiB1dGlsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZWRpdEluY29tZTogZnVuY3Rpb24gZWRpdEluY29tZShpZHgpIHsKICAgICAgdGhpcy4kZW1pdCgnZWRpdEluY29tZScsIGlkeCk7CiAgICB9LAogICAgZ2V0TmV0RGlzcGxheTogZnVuY3Rpb24gZ2V0TmV0RGlzcGxheShpbmNvbWUpIHsKICAgICAgdmFyIG5ldCA9IHV0aWwuZm9ybWF0TW9uZXkodXRpbC5nZXROZXQoaW5jb21lKSwgdGhpcy5tb2RlKTsKICAgICAgcmV0dXJuICJOZXQ6ICIuY29uY2F0KG5ldCk7CiAgICB9LAogICAgZ2V0TmV0VG9vbHRpcDogZnVuY3Rpb24gZ2V0TmV0VG9vbHRpcChpbmNvbWUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBleGVtcHRpb25zID0gdXRpbC5mb3JtYXRNb25leSh1dGlsLmdldEV4ZW1wdGlvbnMoaW5jb21lKSwgdGhpcy5tb2RlKTsKICAgICAgdmFyIGRlZHVjdGlvbnMgPSB1dGlsLmZvcm1hdE1vbmV5KHV0aWwuZ2V0RGVkdWN0aW9ucyhpbmNvbWUpLCB0aGlzLm1vZGUpOwogICAgICB2YXIgbWF0Y2ggPSB1dGlsLmZvcm1hdE1vbmV5KHV0aWwuZ2V0TWF0Y2goaW5jb21lKSwgdGhpcy5tb2RlKTsKICAgICAgdmFyIGdyb3NzID0gdXRpbC5mb3JtYXRNb25leShpbmNvbWUudmFsdWUsIHRoaXMubW9kZSk7CiAgICAgIHZhciB0YXggPSB1dGlsLmZvcm1hdE1vbmV5KHV0aWwuZ2V0VGF4KGluY29tZSksIHRoaXMubW9kZSk7CiAgICAgIHZhciB0YXhfcmF0ZSA9IHV0aWwuZm9ybWF0VGF4KGluY29tZS50YXgpOwogICAgICB2YXIgdGF4YWJsZSA9IHV0aWwuZm9ybWF0TW9uZXkodXRpbC5nZXRUYXhhYmxlSW5jb21lKGluY29tZSksIHRoaXMubW9kZSk7CiAgICAgIHZhciBuZXQgPSB1dGlsLmZvcm1hdE1vbmV5KHV0aWwuZ2V0TmV0KGluY29tZSksIHRoaXMubW9kZSk7CiAgICAgIHZhciB0aXAgPSAnJzsKCiAgICAgIGlmIChpbmNvbWUuZXhlbXB0aW9ucy5sZW5ndGgpIHsKICAgICAgICB0aXAgKz0gIkV4ZW1wdGlvbnMgKCIuY29uY2F0KGV4ZW1wdGlvbnMsICIpID0gIik7CiAgICAgICAgaW5jb21lLmV4ZW1wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoZXhlbXB0aW9uKSB7CiAgICAgICAgICB0aXAgKz0gIiIuY29uY2F0KGV4ZW1wdGlvbi5sYWJlbCwgIiAiKTsKICAgICAgICAgIHRpcCArPSAiKCIuY29uY2F0KHV0aWwuZm9ybWF0TW9uZXkoZXhlbXB0aW9uLnZhbHVlLCBfdGhpcy5tb2RlKSwgIikgKyAiKTsKICAgICAgICB9KTsKICAgICAgICB0aXAgPSB0aXAuc3Vic3RyaW5nKDAsIHRpcC5sZW5ndGggLSAyKTsKICAgICAgICB0aXAgKz0gIjxicj48YnI+RW1wbG95ZWUgTWF0Y2ggKCIuY29uY2F0KG1hdGNoLCAiKSA9ICIpOwogICAgICAgIGluY29tZS5leGVtcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKGV4ZW1wdGlvbikgewogICAgICAgICAgdGlwICs9ICIiLmNvbmNhdChleGVtcHRpb24ubGFiZWwsICIgIik7CiAgICAgICAgICB0aXAgKz0gIigiLmNvbmNhdCh1dGlsLmZvcm1hdE1vbmV5KGV4ZW1wdGlvbi5tYXRjaCwgX3RoaXMubW9kZSksICIpICsgIik7CiAgICAgICAgfSk7CiAgICAgICAgdGlwID0gdGlwLnN1YnN0cmluZygwLCB0aXAubGVuZ3RoIC0gMik7CiAgICAgICAgdGlwICs9ICI8YnI+PGJyPiI7CiAgICAgIH0KCiAgICAgIGlmIChpbmNvbWUuZGVkdWN0aW9ucy5sZW5ndGgpIHsKICAgICAgICB0aXAgKz0gIkRlZHVjdGlvbnMgKCIuY29uY2F0KGRlZHVjdGlvbnMsICIpID0gIik7CiAgICAgICAgaW5jb21lLmRlZHVjdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoZGVkdWN0aW9uKSB7CiAgICAgICAgICB0aXAgKz0gIiIuY29uY2F0KGRlZHVjdGlvbi5sYWJlbCwgIiAiKTsKICAgICAgICAgIHRpcCArPSAiKCIuY29uY2F0KHV0aWwuZm9ybWF0TW9uZXkoZGVkdWN0aW9uLnZhbHVlLCBfdGhpcy5tb2RlKSwgIikgKyAiKTsKICAgICAgICB9KTsKICAgICAgICB0aXAgPSB0aXAuc3Vic3RyaW5nKDAsIHRpcC5sZW5ndGggLSAyKTsKICAgICAgICB0aXAgKz0gIjxicj48YnI+IjsKICAgICAgfQoKICAgICAgaWYgKGluY29tZS5leGVtcHRpb25zLmxlbmd0aCB8fCBpbmNvbWUuZGVkdWN0aW9ucy5sZW5ndGgpIHsKICAgICAgICB0aXAgKz0gIlRheGFibGUgSW5jb21lICgiLmNvbmNhdCh0YXhhYmxlLCAiKSA9IEdyb3NzICIpLmNvbmNhdChncm9zcyk7CiAgICAgICAgaWYgKGV4ZW1wdGlvbnMpIHRpcCArPSAiIC0gRXhlbXB0aW9ucyAoIi5jb25jYXQoZXhlbXB0aW9ucywgIikiKTsKICAgICAgICBpZiAoZGVkdWN0aW9ucykgdGlwICs9ICIgLSBEZWR1Y3Rpb25zICgiLmNvbmNhdChkZWR1Y3Rpb25zLCAiKSIpOwogICAgICAgIHRpcCArPSAiPGJyPjxicj4iOwogICAgICAgIHRpcCArPSAiVGF4ICgiLmNvbmNhdCh0YXgsICIpID0gVGF4YWJsZSBJbmNvbWUgIikuY29uY2F0KHRheGFibGUsICIgKiBUYXggUmF0ZSAoIikuY29uY2F0KHRheF9yYXRlLCAiKSIpOwogICAgICAgIHRpcCArPSAiPGJyPjxicj4iOwogICAgICB9IC8vIG5ldAoKCiAgICAgIGlmICghaW5jb21lLmV4ZW1wdGlvbnMubGVuZ3RoICYmICFpbmNvbWUuZGVkdWN0aW9ucy5sZW5ndGgpIHsKICAgICAgICByZXR1cm4gdGlwICsgIk5ldCAoIi5jb25jYXQobmV0LCAiKSA9IEdyb3NzICgiKS5jb25jYXQoZ3Jvc3MsICIpIC0gVGF4ICgiKS5jb25jYXQodGF4LCAiKSIpOwogICAgICB9CgogICAgICB0aXAgKz0gIk5ldCAoIi5jb25jYXQobmV0LCAiKSA9IFRheGFibGUgSW5jb21lICgiKS5jb25jYXQodGF4YWJsZSwgIikgLSBUYXggKCIpLmNvbmNhdCh0YXgsICIpIik7CgogICAgICBpZiAoaW5jb21lLmV4ZW1wdGlvbnMubGVuZ3RoKSB7CiAgICAgICAgdGlwICs9ICIgKyBFeGVtcHRpb25zICgiLmNvbmNhdChleGVtcHRpb25zLCAiKSArIEVtcGxveWVlIE1hdGNoICgiKS5jb25jYXQobWF0Y2gsICIpIik7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aXA7CiAgICB9LAogICAgZ2V0R3Jvc3NEaXNwbGF5OiBmdW5jdGlvbiBnZXRHcm9zc0Rpc3BsYXkoaW5jb21lKSB7CiAgICAgIHZhciBncm9zcyA9IHV0aWwuZm9ybWF0TW9uZXkoaW5jb21lLnZhbHVlLCB0aGlzLm1vZGUpOwogICAgICByZXR1cm4gIkdyb3NzOiAiLmNvbmNhdChncm9zcyk7CiAgICB9LAogICAgZ2V0RXhlbXB0aW9uRGlzcGxheTogZnVuY3Rpb24gZ2V0RXhlbXB0aW9uRGlzcGxheShleGVtcHRpb24pIHsKICAgICAgdmFyIGNvbnRyaWJ1dGlvbiA9IHV0aWwuZm9ybWF0TW9uZXkoZXhlbXB0aW9uLnZhbHVlLCB0aGlzLm1vZGUpOwogICAgICB2YXIgbWF0Y2ggPSB1dGlsLmZvcm1hdE1vbmV5KGV4ZW1wdGlvbi5tYXRjaCwgdGhpcy5tb2RlKTsKICAgICAgcmV0dXJuICIiLmNvbmNhdChleGVtcHRpb24ubGFiZWwsICI6ICIpLmNvbmNhdChjb250cmlidXRpb24sICIgKyAgIikuY29uY2F0KG1hdGNoLCAiIE1hdGNoIik7CiAgICB9LAogICAgZ2V0SW5jb21lRGlzcGxheTogZnVuY3Rpb24gZ2V0SW5jb21lRGlzcGxheShpbmNvbWUpIHsKICAgICAgdmFyIHRheGFibGUgPSB1dGlsLmZvcm1hdE1vbmV5KHV0aWwuZ2V0VGF4YWJsZUluY29tZShpbmNvbWUpLCB0aGlzLm1vZGUpOwogICAgICB2YXIgdGF4ID0gdXRpbC5mb3JtYXRUYXgoaW5jb21lLnRheCk7CiAgICAgIHJldHVybiAiIi5jb25jYXQoaW5jb21lLmxhYmVsLCAiOiAiKS5jb25jYXQodGF4YWJsZSwgIiAtICIpLmNvbmNhdCh0YXgpOwogICAgfSwKICAgIGdldERlZHVjdGlvbkRpc3BsYXk6IGZ1bmN0aW9uIGdldERlZHVjdGlvbkRpc3BsYXkoZGVkdWN0aW9uKSB7CiAgICAgIHZhciB2YWx1ZSA9IHV0aWwuZm9ybWF0TW9uZXkoZGVkdWN0aW9uLnZhbHVlLCB0aGlzLm1vZGUpOwogICAgICByZXR1cm4gIiIuY29uY2F0KGRlZHVjdGlvbi5sYWJlbCwgIjogIikuY29uY2F0KHZhbHVlKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBuZXRUb29sdGlwOiBmdW5jdGlvbiBuZXRUb29sdGlwKCkgewogICAgICB2YXIgdGlwID0gIk5ldCAoIi5jb25jYXQodXRpbC5mb3JtYXRNb25leSh0aGlzLm5ldFN1bSwgdGhpcy5tb2RlKSwgIikgPSAiKTsKICAgICAgdGlwICs9ICJHcm9zcyAoIi5jb25jYXQodXRpbC5mb3JtYXRNb25leSh0aGlzLmdyb3NzU3VtLCB0aGlzLm1vZGUpLCAiKSAtICIpOwogICAgICB0aXAgKz0gIlRheCAoIi5jb25jYXQodXRpbC5mb3JtYXRNb25leSh0aGlzLnRheFN1bSwgdGhpcy5tb2RlKSwgIikiKTsKICAgICAgcmV0dXJuIHRpcDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ViewIncomes.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n\n        <!-- income streams label -->\n        <label>Income Streams</label>\n\n        <!-- income streams gross, tax, net -->\n        <span class=\"float-right net-income\">\n            <span class=\"badge badge-success net-income-badge clickable\">\n                Gross<span class=\"desktop-only-inline\">: {{ util.formatMoney(grossSum, mode) }}</span>\n            </span>\n            <span class=\"badge badge-success net-income-badge clickable pad\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"netTooltip\">\n                Net<span class=\"desktop-only-inline\">: {{ util.formatMoney(netSum, mode) }}</span>\n                &nbsp;\n                <span class=\"fa fa-question-circle\"></span>\n            </span>\n        </span>\n\n        <ul class=\"list-group\">\n\n            <!-- no income streams -->\n            <li class=\"list-group-item d-flex justify-content-between align-items-center disabled\" v-if=\"!incomesItemized.length\">\n                You haven't added any income streams yet.\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center clickable\" v-for=\"(income, idx) in incomesItemized\" v-bind:key=\"income.label\" v-on:click=\"editIncome(idx)\">\n                <div class=\"row no-gutters income-display\">\n                    <div class=\"col-md-4\">\n                        <span id=\"label\">{{ income.label }}</span>\n                    </div>\n                    <div class=\"col-md-8\">\n                        <span class=\"badge badge-primary clickable\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"getNetTooltip(income)\" data-html=\"true\">\n                            {{ getNetDisplay(income) }}\n                            <span class=\"fa fa-question-circle\"></span>\n                        </span>\n                        <span class=\"badge badge-primary\">\n                            {{ getGrossDisplay(income) }}\n                        </span><br>\n                        <span class=\"badge badge-secondary float-right\">\n                            {{ getIncomeDisplay(income) }}\n                        </span>\n                        <span v-for=\"(exemption, idx) in income.exemptions\" v-bind:key=\"idx\">\n                            <span class=\"badge badge-secondary\">\n                                {{ getExemptionDisplay(exemption) }}\n                            </span>&nbsp;\n                        </span>\n                        <span v-for=\"(deduction, idx) in income.deductions\" v-bind:key=\"deduction.label\">\n                            <span class=\"badge badge-secondary\">\n                                {{ getDeductionDisplay(deduction) }}\n                            </span>&nbsp;\n                        </span>\n                    </div>\n                </div>\n            </li>\n        </ul>\n        <small class=\"form-text text-muted\">\n            Click on an income stream to edit or remove it.\n        </small>\n    </div>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'ViewIncomes',\n    props: ['incomesItemized', 'grossSum', 'taxSum', 'netSum', 'mode'],\n    data () {\n        return {\n            util: util,\n        }\n    },\n    methods: {\n        editIncome: function (idx) {\n            this.$emit('editIncome', idx);\n        },\n        getNetDisplay: function (income) {\n            let net = util.formatMoney(util.getNet(income), this.mode);\n            return `Net: ${net}`;\n        },\n        getNetTooltip: function (income) {\n            var exemptions = util.formatMoney(util.getExemptions(income), this.mode);\n            var deductions = util.formatMoney(util.getDeductions(income), this.mode);\n            var match      = util.formatMoney(util.getMatch(income), this.mode);\n            var gross      = util.formatMoney(income.value, this.mode);\n            var tax        = util.formatMoney(util.getTax(income), this.mode);\n            var tax_rate   = util.formatTax(income.tax);\n            var taxable    = util.formatMoney(util.getTaxableIncome(income), this.mode);\n            let net        = util.formatMoney(util.getNet(income), this.mode);\n\n            var tip = '';\n            if (income.exemptions.length) {\n                tip += `Exemptions (${exemptions}) = `;\n                income.exemptions.forEach(exemption => {\n                    tip += `${exemption.label} `;\n                    tip += `(${util.formatMoney(exemption.value, this.mode)}) + `;\n                });\n                tip = tip.substring(0, tip.length-2);\n                tip += `<br><br>Employee Match (${match}) = `\n                income.exemptions.forEach(exemption => {\n                    tip += `${exemption.label} `;\n                    tip += `(${util.formatMoney(exemption.match, this.mode)}) + `;\n                });\n                tip = tip.substring(0, tip.length-2);\n                tip += `<br><br>`;\n            }\n            if (income.deductions.length) {\n                tip += `Deductions (${deductions}) = `;\n                income.deductions.forEach(deduction => {\n                    tip += `${deduction.label} `;\n                    tip += `(${util.formatMoney(deduction.value, this.mode)}) + `;\n                });\n                tip = tip.substring(0, tip.length-2);\n                tip += `<br><br>`;\n            }\n            if (income.exemptions.length || income.deductions.length) {\n                tip += `Taxable Income (${taxable}) = Gross ${gross}`;\n                if (exemptions) tip += ` - Exemptions (${exemptions})`;\n                if (deductions) tip += ` - Deductions (${deductions})`;\n                tip += `<br><br>`;\n                tip += `Tax (${tax}) = Taxable Income ${taxable} * Tax Rate (${tax_rate})`;\n                tip += `<br><br>`;\n            }\n\n            // net\n            if (!income.exemptions.length && !income.deductions.length) {\n                return tip + `Net (${net}) = Gross (${gross}) - Tax (${tax})`;\n            }\n            tip += `Net (${net}) = Taxable Income (${taxable}) - Tax (${tax})`;\n            if (income.exemptions.length) {\n                tip += ` + Exemptions (${exemptions}) + Employee Match (${match})`;\n            }\n            return tip;\n        },\n        getGrossDisplay: function (income) {\n            let gross = util.formatMoney(income.value, this.mode);\n            return `Gross: ${gross}`\n        },\n        getExemptionDisplay: function (exemption) {\n            let contribution = util.formatMoney(exemption.value, this.mode);\n            let match        = util.formatMoney(exemption.match, this.mode);\n            return `${exemption.label}: ${contribution} +  ${match} Match`;\n        },\n        getIncomeDisplay: function (income) {\n            let taxable = util.formatMoney(util.getTaxableIncome(income), this.mode);\n            let tax     = util.formatTax(income.tax);\n            return `${income.label}: ${taxable} - ${tax}`;\n        },\n        getDeductionDisplay: function (deduction) {\n            let value = util.formatMoney(deduction.value, this.mode);\n            return `${deduction.label}: ${value}`;\n        }\n    },\n    computed: {\n        netTooltip () {\n            var tip = `Net (${util.formatMoney(this.netSum, this.mode)}) = `;\n            tip += `Gross (${util.formatMoney(this.grossSum, this.mode)}) - `;\n            tip += `Tax (${util.formatMoney(this.taxSum, this.mode)})`;\n            return tip;\n        }\n    },\n}\n\n</script>\n\n\n<style scoped>\n.clickable {\n    cursor:pointer\n}\n.badge {\n    float:right;\n    margin:2px;\n}\n.income-display {\n    width:100%;\n}\n.net-income-badge {\n    float:initial;\n}\n\n@media only screen and (min-width: 540px) {\n    .pad {\n        margin-right: calc(0.25rem + 15px);\n    }\n}\n\n\n</style>"],"sourceRoot":"src/components/Incomes"}]}