{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue","mtime":1598295970781},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgdXRpbCBmcm9tICcuLi8uLi91dGlsLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdWaWV3SW5jb21lcycsCiAgcHJvcHM6IFsnaW5jb21lc0l0ZW1pemVkJywgJ2dyb3NzU3VtJywgJ3RheFN1bScsICduZXRTdW0nXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXRpbDogdXRpbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJlbW92ZUluY29tZTogZnVuY3Rpb24gcmVtb3ZlSW5jb21lKGlkeCkgewogICAgICBpZiAoY29uZmlybSgiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJlbW92ZSB0aGlzIGluY29tZSBzdHJlYW0/IikpIHsKICAgICAgICB0aGlzLiRlbWl0KCdyZW1vdmVJbmNvbWUnLCBpZHgpOwogICAgICB9CiAgICB9LAogICAgZ2V0VGF4YWJsZUluY29tZTogZnVuY3Rpb24gZ2V0VGF4YWJsZUluY29tZShpbmNvbWUpIHsKICAgICAgdmFyIHZhbHVlID0gcGFyc2VJbnQoaW5jb21lLnZhbHVlKTsKICAgICAgaW5jb21lLmV4ZW1wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoZXhlbXB0aW9uKSB7CiAgICAgICAgdmFsdWUgLT0gcGFyc2VJbnQoZXhlbXB0aW9uLnZhbHVlKTsKICAgICAgfSk7CiAgICAgIHJldHVybiB2YWx1ZTsKICAgIH0sCiAgICBnZXRUYXg6IGZ1bmN0aW9uIGdldFRheChpbmNvbWUpIHsKICAgICAgdmFyIHZhbHVlID0gcGFyc2VJbnQoaW5jb21lLnZhbHVlKTsKICAgICAgdmFsdWUgLT0gaW5jb21lLmV4ZW1wdGlvbnMucmVkdWNlKGZ1bmN0aW9uIChhLCBlKSB7CiAgICAgICAgcmV0dXJuIGEgKyBwYXJzZUludChlLnZhbHVlKTsKICAgICAgfSwgMCk7CiAgICAgIHJldHVybiBwYXJzZUludCh2YWx1ZSkgKiAocGFyc2VJbnQoaW5jb21lLnRheCkgLyAxMDApOwogICAgfSwKICAgIGdldE1hdGNoOiBmdW5jdGlvbiBnZXRNYXRjaChpbmNvbWUpIHsKICAgICAgcmV0dXJuIGluY29tZS5leGVtcHRpb25zLnJlZHVjZShmdW5jdGlvbiAoYSwgZSkgewogICAgICAgIHJldHVybiBhICsgcGFyc2VJbnQoZS5tYXRjaCk7CiAgICAgIH0sIDApOwogICAgfSwKICAgIGdldE5ldDogZnVuY3Rpb24gZ2V0TmV0KGluY29tZSkgewogICAgICByZXR1cm4gcGFyc2VJbnQoaW5jb21lLnZhbHVlKSAtIHRoaXMuZ2V0VGF4KGluY29tZSkgKyB0aGlzLmdldE1hdGNoKGluY29tZSk7CiAgICB9LAogICAgZ2V0RXhlbXB0aW9uczogZnVuY3Rpb24gZ2V0RXhlbXB0aW9ucyhpbmNvbWUpIHsKICAgICAgcmV0dXJuIGluY29tZS5leGVtcHRpb25zLnJlZHVjZShmdW5jdGlvbiAoYSwgZSkgewogICAgICAgIHJldHVybiBhICsgcGFyc2VJbnQoZS52YWx1ZSk7CiAgICAgIH0sIDApOwogICAgfSwKICAgIGdldE5ldERpc3BsYXk6IGZ1bmN0aW9uIGdldE5ldERpc3BsYXkoaW5jb21lKSB7CiAgICAgIHZhciBuZXQgPSB1dGlsLmZvcm1hdE1vbmV5KHRoaXMuZ2V0TmV0KGluY29tZSkpOwogICAgICByZXR1cm4gIk5ldDogIi5jb25jYXQobmV0KTsKICAgIH0sCiAgICBnZXROZXRUb29sdGlwOiBmdW5jdGlvbiBnZXROZXRUb29sdGlwKGluY29tZSkgewogICAgICB2YXIgZXhlbXB0aW9ucyA9IHV0aWwuZm9ybWF0TW9uZXkodGhpcy5nZXRFeGVtcHRpb25zKGluY29tZSkpOwogICAgICB2YXIgbWF0Y2ggPSB1dGlsLmZvcm1hdE1vbmV5KHRoaXMuZ2V0TWF0Y2goaW5jb21lKSk7CiAgICAgIHZhciBncm9zcyA9IHV0aWwuZm9ybWF0TW9uZXkoaW5jb21lLnZhbHVlKTsKICAgICAgdmFyIHRheCA9IHV0aWwuZm9ybWF0VGF4KGluY29tZS50YXgpOwogICAgICB2YXIgdGF4YWJsZSA9IHV0aWwuZm9ybWF0TW9uZXkodGhpcy5nZXRUYXhhYmxlSW5jb21lKGluY29tZSkpOwogICAgICB2YXIgdGlwID0gJyc7CgogICAgICBpZiAoaW5jb21lLmV4ZW1wdGlvbnMubGVuZ3RoKSB7CiAgICAgICAgdGlwICs9ICJFeGVtcHRpb25zICgiLmNvbmNhdChleGVtcHRpb25zLCAiKSA9ICIpOwogICAgICAgIGluY29tZS5leGVtcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKGV4ZW1wdGlvbikgewogICAgICAgICAgdGlwICs9ICIiLmNvbmNhdChleGVtcHRpb24ubGFiZWwsICIgIik7CiAgICAgICAgICB0aXAgKz0gIigiLmNvbmNhdCh1dGlsLmZvcm1hdE1vbmV5KGV4ZW1wdGlvbi52YWx1ZSksICIpICsgIik7CiAgICAgICAgfSk7CiAgICAgICAgdGlwID0gdGlwLnN1YnN0cmluZygwLCB0aXAubGVuZ3RoIC0gMik7CiAgICAgICAgdGlwICs9ICI8YnI+PGJyPkVtcGxveWVlIE1hdGNoICgiLmNvbmNhdChtYXRjaCwgIikgPSAiKTsKICAgICAgICBpbmNvbWUuZXhlbXB0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChleGVtcHRpb24pIHsKICAgICAgICAgIHRpcCArPSAiIi5jb25jYXQoZXhlbXB0aW9uLmxhYmVsLCAiICIpOwogICAgICAgICAgdGlwICs9ICIoIi5jb25jYXQodXRpbC5mb3JtYXRNb25leShleGVtcHRpb24ubWF0Y2gpLCAiKSArICIpOwogICAgICAgIH0pOwogICAgICAgIHRpcCA9IHRpcC5zdWJzdHJpbmcoMCwgdGlwLmxlbmd0aCAtIDIpOwogICAgICAgIHRpcCArPSAiPGJyPjxicj4iOwogICAgICAgIHRpcCArPSAiVGF4YWJsZSBJbmNvbWUgKCIuY29uY2F0KHRheGFibGUsICIpID0gR3Jvc3MgIikuY29uY2F0KGdyb3NzLCAiIC0gIik7CiAgICAgICAgdGlwICs9ICJFeGVtcHRpb25zICgiLmNvbmNhdChleGVtcHRpb25zLCAiKTxicj48YnI+Iik7CiAgICAgIH0gLy8gbmV0CgoKICAgICAgdmFyIG5ldCA9ICJHcm9zcyAoIi5jb25jYXQoZ3Jvc3MsICIpIC0gR3Jvc3MgKCIpLmNvbmNhdChncm9zcywgIikgKiBUYXggKCIpLmNvbmNhdCh0YXgsICIpIik7CiAgICAgIHRpcCArPSB0aGlzLmdldE5ldERpc3BsYXkoaW5jb21lKSArICIgPSAiOwoKICAgICAgaWYgKGluY29tZS5leGVtcHRpb25zLmxlbmd0aCkgewogICAgICAgIHRpcCArPSAiRXhlbXB0aW9ucyAoIi5jb25jYXQoZXhlbXB0aW9ucywgIikgKyAiKTsKICAgICAgICB0aXAgKz0gIkVtcGxveWVlIE1hdGNoICgiLmNvbmNhdChtYXRjaCwgIikgKyAiKTsKICAgICAgICBuZXQgPSAiVGF4YWJsZSBJbmNvbWUgKCIuY29uY2F0KHRheGFibGUsICIpIC0gVGF4YWJsZSBJbmNvbWUgKCIpLmNvbmNhdCh0YXhhYmxlLCAiKSAqICIpOwogICAgICAgIG5ldCArPSAiVGF4ICgiLmNvbmNhdCh0YXgsICIpIik7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aXAgKyBuZXQ7CiAgICB9LAogICAgZ2V0R3Jvc3NEaXNwbGF5OiBmdW5jdGlvbiBnZXRHcm9zc0Rpc3BsYXkoaW5jb21lKSB7CiAgICAgIHZhciBncm9zcyA9IHV0aWwuZm9ybWF0TW9uZXkoaW5jb21lLnZhbHVlKTsKICAgICAgcmV0dXJuICJHcm9zczogIi5jb25jYXQoZ3Jvc3MpOwogICAgfSwKICAgIGdldEV4ZW1wdGlvbk1hdGNoRGlzcGxheTogZnVuY3Rpb24gZ2V0RXhlbXB0aW9uTWF0Y2hEaXNwbGF5KGV4ZW1wdGlvbikgewogICAgICB2YXIgbWF0Y2ggPSB1dGlsLmZvcm1hdE1vbmV5KGV4ZW1wdGlvbi5tYXRjaCk7CiAgICAgIHJldHVybiAiIi5jb25jYXQoZXhlbXB0aW9uLmxhYmVsLCAiIE1hdGNoOiAiKS5jb25jYXQobWF0Y2gsICIgQCAwJSIpOwogICAgfSwKICAgIGdldEV4ZW1wdGlvbkRpc3BsYXk6IGZ1bmN0aW9uIGdldEV4ZW1wdGlvbkRpc3BsYXkoZXhlbXB0aW9uKSB7CiAgICAgIHZhciBjb250cmlidXRpb24gPSB1dGlsLmZvcm1hdE1vbmV5KGV4ZW1wdGlvbi52YWx1ZSk7CiAgICAgIHJldHVybiAiIi5jb25jYXQoZXhlbXB0aW9uLmxhYmVsLCAiOiAiKS5jb25jYXQoY29udHJpYnV0aW9uLCAiIEAgMCUiKTsKICAgIH0sCiAgICBnZXRJbmNvbWVEaXNwbGF5OiBmdW5jdGlvbiBnZXRJbmNvbWVEaXNwbGF5KGluY29tZSkgewogICAgICB2YXIgdGF4YWJsZSA9IHV0aWwuZm9ybWF0TW9uZXkodGhpcy5nZXRUYXhhYmxlSW5jb21lKGluY29tZSkpOwogICAgICB2YXIgdGF4ID0gdXRpbC5mb3JtYXRUYXgoaW5jb21lLnRheCk7CiAgICAgIHJldHVybiAiIi5jb25jYXQoaW5jb21lLmxhYmVsLCAiOiAiKS5jb25jYXQodGF4YWJsZSwgIiBAICIpLmNvbmNhdCh0YXgpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG5ldFRvb2x0aXA6IGZ1bmN0aW9uIG5ldFRvb2x0aXAoKSB7CiAgICAgIHZhciB0aXAgPSAiTmV0ICgiLmNvbmNhdCh1dGlsLmZvcm1hdE1vbmV5KHRoaXMubmV0U3VtKSwgIikgPSAiKTsKICAgICAgdGlwICs9ICJHcm9zcyAoIi5jb25jYXQodXRpbC5mb3JtYXRNb25leSh0aGlzLmdyb3NzU3VtKSwgIikgLSAiKTsKICAgICAgdGlwICs9ICJUYXggKCIuY29uY2F0KHV0aWwuZm9ybWF0TW9uZXkodGhpcy50YXhTdW0pLCAiKSIpOwogICAgICByZXR1cm4gdGlwOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ViewIncomes.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n\n        <!-- income streams label -->\n        <label>Income Streams</label>\n\n        <!-- income streams gross, tax, net -->\n        <span class=\"float-right net-income\">\n            <span class=\"badge badge-success badge-pill net-income-badge clickable\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"netTooltip\">\n                Net: {{ util.formatMoney(netSum) }}\n                <span class=\"fa fa-question-circle\"></span>\n            </span>\n        </span>\n\n        <ul class=\"list-group\">\n\n            <!-- no income streams -->\n            <li class=\"list-group-item d-flex justify-content-between align-items-center disabled\" v-if=\"!incomesItemized.length\">\n                You haven't added any income streams yet.\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center clickable\" v-for=\"(income, idx) in incomesItemized\" v-bind:key=\"income.label\" v-on:click=\"removeIncome(idx)\">\n                <div class=\"row no-gutters income-display\">\n                    <div class=\"col-md-4\">\n                        <span id=\"label\">{{ income.label }}</span>\n                    </div>\n                    <div class=\"col-md-8\">\n                        <span class=\"badge badge-primary badge-pill clickable\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"getNetTooltip(income)\" data-html=\"true\">\n                            {{ getNetDisplay(income) }}\n                            <span class=\"fa fa-question-circle\"></span>\n                        </span>\n                        <span class=\"badge badge-primary badge-pill\">\n                            {{ getGrossDisplay(income) }}\n                        </span><br>\n                        <span v-for=\"(exemption, idx) in income.exemptions\" v-bind:key=\"idx\">\n                            <span class=\"badge badge-secondary badge-pill\" v-if=\"exemption.match > 0\">\n                                {{ getExemptionMatchDisplay(exemption) }}\n                            </span>&nbsp;\n                            <span class=\"badge badge-secondary badge-pill\" v-if=\"exemption.value > 0\">\n                                {{ getExemptionDisplay(exemption) }}\n                            </span>&nbsp;\n                        </span>\n                        <span class=\"badge badge-secondary badge-pill float-right\">\n                            {{ getIncomeDisplay(income) }}\n                        </span>\n                    </div>\n                </div>\n            </li>\n        </ul>\n        <small class=\"form-text text-muted\">\n            Click on an income stream to remove it.\n        </small>\n    </div>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'ViewIncomes',\n    props: ['incomesItemized', 'grossSum', 'taxSum', 'netSum'],\n    data () {\n        return {\n            util: util,\n        }\n    },\n    methods: {\n        removeIncome: function (idx) {\n            if (confirm(\"Are you sure you want to remove this income stream?\")) {\n                this.$emit('removeIncome', idx);\n            }\n        },\n        getTaxableIncome: function (income) {\n            var value = parseInt(income.value);\n            income.exemptions.forEach(exemption => {\n                value -= parseInt(exemption.value);\n            })\n            return value;\n        },\n        getTax: function (income) {\n            let value = parseInt(income.value);\n            value -= income.exemptions.reduce((a, e) => a + parseInt(e.value), 0);\n            return parseInt(value)*(parseInt(income.tax)/100);\n        },\n        getMatch: function (income) {\n            return income.exemptions.reduce((a, e) => a + parseInt(e.match), 0);\n        },\n        getNet: function (income) {\n            return parseInt(income.value) - this.getTax(income) + this.getMatch(income);\n        },\n        getExemptions: function (income) {\n            return income.exemptions.reduce((a, e) => a + parseInt(e.value), 0);\n        },\n        getNetDisplay: function (income) {\n            let net = util.formatMoney(this.getNet(income));\n            return `Net: ${net}`;\n        },\n        getNetTooltip: function (income) {\n            var exemptions = util.formatMoney(this.getExemptions(income));\n            var match = util.formatMoney(this.getMatch(income));\n            var gross = util.formatMoney(income.value);\n            var tax = util.formatTax(income.tax);\n            var taxable = util.formatMoney(this.getTaxableIncome(income));\n\n            var tip = '';\n            if (income.exemptions.length) {\n                tip += `Exemptions (${exemptions}) = `;\n                income.exemptions.forEach(exemption => {\n                    tip += `${exemption.label} `;\n                    tip += `(${util.formatMoney(exemption.value)}) + `;\n                });\n                tip = tip.substring(0, tip.length-2);\n                tip += `<br><br>Employee Match (${match}) = `\n                income.exemptions.forEach(exemption => {\n                    tip += `${exemption.label} `;\n                    tip += `(${util.formatMoney(exemption.match)}) + `;\n                });\n                tip = tip.substring(0, tip.length-2);\n                tip += `<br><br>`;\n                tip += `Taxable Income (${taxable}) = Gross ${gross} - `;\n                tip += `Exemptions (${exemptions})<br><br>`;\n            }\n\n            // net\n            var net = `Gross (${gross}) - Gross (${gross}) * Tax (${tax})`;\n            tip += this.getNetDisplay(income) + ` = `;\n            if (income.exemptions.length) {\n                tip += `Exemptions (${exemptions}) + `;\n                tip += `Employee Match (${match}) + `\n                net = `Taxable Income (${taxable}) - Taxable Income (${taxable}) * `;\n                net += `Tax (${tax})`;\n            }\n            return tip + net;\n        },\n        getGrossDisplay: function (income) {\n            let gross = util.formatMoney(income.value);\n            return `Gross: ${gross}`\n        },\n        getExemptionMatchDisplay: function (exemption) {\n            let match = util.formatMoney(exemption.match);\n            return `${exemption.label} Match: ${match} @ 0%`;\n        },\n        getExemptionDisplay: function (exemption) {\n            let contribution = util.formatMoney(exemption.value);\n            return `${exemption.label}: ${contribution} @ 0%`;\n        },\n        getIncomeDisplay: function (income) {\n            let taxable = util.formatMoney(this.getTaxableIncome(income));\n            let tax     = util.formatTax(income.tax);\n            return `${income.label}: ${taxable} @ ${tax}`;\n        }\n    },\n    computed: {\n        netTooltip () {\n            var tip = `Net (${util.formatMoney(this.netSum)}) = `;\n            tip += `Gross (${util.formatMoney(this.grossSum)}) - `;\n            tip += `Tax (${util.formatMoney(this.taxSum)})`;\n            return tip;\n        }\n    },\n}\n\n</script>\n\n\n<style scoped>\n.clickable {\n    cursor:pointer\n}\n.badge {\n    float:right;\n    margin:2px;\n}\n.income-display {\n    width:100%;\n}\n.net-income {\n    padding-right: 1.25rem;\n}\n.net-income-badge {\n    float:initial;\n}\n</style>"],"sourceRoot":"src/components/Incomes"}]}