{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/eslint-loader/index.js??ref--13-0!/home/adam/Desktop/sankycash/src/util.js","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/util.js","mtime":1598220326788},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKZXhwb3J0IGRlZmF1bHQgewogIGZvcm1hdE1vbmV5OiBmdW5jdGlvbiBmb3JtYXRNb25leShxdWFudGl0eSkgewogICAgcmV0dXJuICckJyArIHF1YW50aXR5LnRvU3RyaW5nKCkucmVwbGFjZSgvXEIoPz0oXGR7M30pKyg/IVxkKSkvZywgIiwiKTsKICB9LAogIGZvcm1hdFRheDogZnVuY3Rpb24gZm9ybWF0VGF4KHJhdGUpIHsKICAgIHJldHVybiByYXRlICsgJyUnOwogIH0sCiAgaXNWYWxpZENoYXJ0TGFiZWw6IGZ1bmN0aW9uIGlzVmFsaWRDaGFydExhYmVsKGxhYmVsLCBpbmNvbWVzKSB7CiAgICAvLyBub3QgZW1wdHkKICAgIGlmIChsYWJlbCA9PSAnJykgcmV0dXJuIGZhbHNlOyAvLyB1bmlxdWUgdG8gaW5jb21lcyBhbmQgZXhlbXB0aW9ucwoKICAgIGluY29tZXMuZm9yRWFjaChmdW5jdGlvbiAoaW5jb21lKSB7CiAgICAgIGlmIChpbmNvbWUubGFiZWwgPT0gbGFiZWwpIHJldHVybiBmYWxzZTsKICAgICAgaW5jb21lLmV4ZW1wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoZXhlbXB0aW9uKSB7CiAgICAgICAgaWYgKGV4ZW1wdGlvbi5sYWJlbCA9PSBsYWJlbCkgcmV0dXJuIGZhbHNlOwogICAgICB9KTsKICAgIH0pOwogICAgcmV0dXJuIHRydWU7CiAgfQp9Ow=="},{"version":3,"sources":["/home/adam/Desktop/sankycash/src/util.js"],"names":["formatMoney","quantity","toString","replace","formatTax","rate","isValidChartLabel","label","incomes","forEach","income","exemptions","exemption"],"mappings":";;;;;;AAAA,eAAe;AACXA,EAAAA,WADW,uBACEC,QADF,EACY;AACnB,WAAO,MAAMA,QAAQ,CAACC,QAAT,GAAoBC,OAApB,CAA4B,uBAA5B,EAAqD,GAArD,CAAb;AACH,GAHU;AAIXC,EAAAA,SAJW,qBAIAC,IAJA,EAIM;AACb,WAAOA,IAAI,GAAG,GAAd;AACH,GANU;AAOXC,EAAAA,iBAPW,6BAOQC,KAPR,EAOeC,OAPf,EAOwB;AAC/B;AACA,QAAID,KAAK,IAAI,EAAb,EAAiB,OAAO,KAAP,CAFc,CAI/B;;AACAC,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACtB,UAAIA,MAAM,CAACH,KAAP,IAAgBA,KAApB,EAA2B,OAAO,KAAP;AAC3BG,MAAAA,MAAM,CAACC,UAAP,CAAkBF,OAAlB,CAA0B,UAAAG,SAAS,EAAI;AACnC,YAAIA,SAAS,CAACL,KAAV,IAAmBA,KAAvB,EAA8B,OAAO,KAAP;AACjC,OAFD;AAGH,KALD;AAMA,WAAO,IAAP;AACH;AAnBU,CAAf","sourcesContent":["export default {\n    formatMoney (quantity) {\n        return '$' + quantity.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n    formatTax (rate) {\n        return rate + '%';\n    },\n    isValidChartLabel (label, incomes) {\n        // not empty\n        if (label == '') return false;\n\n        // unique to incomes and exemptions\n        incomes.forEach(income => {\n            if (income.label == label) return false;\n            income.exemptions.forEach(exemption => {\n                if (exemption.label == label) return false;\n            })\n        })\n        return true;\n    }\n}"]}]}