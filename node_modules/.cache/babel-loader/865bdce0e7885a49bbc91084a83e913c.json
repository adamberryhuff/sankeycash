{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Incomes/AddIncome.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Incomes/AddIncome.vue","mtime":1599032278675},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AddIncome.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <form v-on:keydown.enter.prevent=\"\">\n        <!-- income stream label -->\n        <div class=\"form-group\">\n            <label>Chart Label</label>\n            <input id=\"new-income-focus\" v-model=\"label\" type=\"text\" class=\"form-control\" placeholder=\"Label\" name=\"income-stream-label\">\n            <small class=\"form-text text-muted\">\n                The label will be used in the chart: Salary, Rental Income, etc.\n            </small>\n        </div>\n\n        <!-- income stream amount -->\n        <div class=\"form-group\">\n            <label>Gross Amount</label>\n            <input type=\"number\" class=\"form-control\" min=\"1\" v-model=\"value\" placeholder=\"Amount\" v-on:keyup=\"processKeyPress\">\n            <small class=\"form-text text-muted\">\n                The amount ({{ mode }}) you make annually from this income stream (pre-tax).\n            </small>\n        </div>\n\n        <!-- income stream tax rate -->\n        <div class=\"form-group\">\n            <label>Tax Rate</label>\n            <input type=\"number\" class=\"form-control\" step=\".001\" min=\"1\" max=\"100\" v-model=\"tax\" placeholder=\"Tax\" v-on:keyup=\"processKeyPress\">\n            <small class=\"form-text text-muted\">\n                The tax rate (%) of this income stream.\n            </small>\n        </div>\n\n        <!-- exemptions question -->\n        Does this income stream have any tax-exempt contributions?\n        <AddIncomeExemption\n            :exemptions=\"exemptions\"\n            :mode=\"mode\"\n            @addIncome=\"addIncome\"\n            @addExemption=\"addExemption\"\n            @removeExemption=\"removeExemption\"\n            @clearExemptions=\"clearExemptions\" />\n        <br>\n\n        <!-- deductions question -->\n        Does this income stream have any pre-tax deductions?\n        <AddIncomeDeduction\n            :deductions=\"deductions\"\n            :mode=\"mode\"\n            @addIncome=\"addIncome\"\n            @addDeduction=\"addDeduction\"\n            @removeDeduction=\"removeDeduction\"\n            @clearDeductions=\"clearDeductions\" />\n\n        <!-- desktop buttons: save, delete, cancel -->\n        <div class=\"desktop-only\">\n            <button class=\"btn btn-primary float-right\" v-on:keyup=\"processKeyPress\" v-on:click.enter.prevent=\"addIncome\">\n                {{ income ? 'Update Income Stream' : 'Add Income Stream' }}\n            </button>\n            <button v-if=\"income\" class=\"btn btn-link\" v-on:click.enter.prevent=\"cancelEditIncome\">\n                Cancel\n            </button>\n            <button v-if=\"income\" class=\"btn btn-link remove-expense\" v-on:click.enter.prevent=\"deleteIncome\">\n                Delete\n            </button>\n        </div>\n\n        <!-- mobile buttons: save, delete, cancel -->\n        <div class=\"mobile-only\">\n            <button class=\"btn btn-primary\" v-on:keyup=\"processKeyPress\" v-on:click.enter.prevent=\"addIncome\">\n                {{ income ? 'Update Income Stream' : 'Add Income Stream' }}\n            </button>\n            <button v-if=\"income\" class=\"btn btn-link cancel-btn\" v-on:click.enter.prevent=\"cancelEditIncome\">\n                Cancel\n            </button>\n            <button v-if=\"income\" class=\"btn btn-link remove-expense\" v-on:click.enter.prevent=\"deleteIncome\">\n                Delete\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script>\n\nimport AddIncomeExemption from './AddIncomeExemption.vue';\nimport AddIncomeDeduction from './AddIncomeDeduction.vue';\nimport util from '../../util.js';\n\nexport default {\n    name: 'AddIncome',\n    props: ['income', 'mode', 'unallocatedSum'],\n    components: {\n        AddIncomeExemption,\n        AddIncomeDeduction\n    },\n    data () {\n        return {\n            // new income stream\n            label: '',\n            value: '',\n            tax:   '',\n            exemptions: [],\n            deductions: [],\n\n            util: util\n        }\n    },\n    mounted () {\n        this.focusNewIncome();\n    },\n    methods: {\n        addIncome: function (e) {\n            // stop form from reloading the page\n            if (e) e.preventDefault();\n\n            // normlize\n            this.normalizeIncome();\n            this.normalizeExemptions();\n            this.normalizeDeductions();\n\n            // validate\n            if (!this.validateIncome()) return;\n            if (!this.validateExemptionsAndDeductions()) return;\n\n            // add\n            this.$emit('addIncome', {\n                label: this.label,\n                tax: this.tax,\n                value: this.value,\n                exemptions: this.exemptions,\n                deductions: this.deductions\n            });\n\n            // reset\n            this.label      = '';\n            this.tax        = '';\n            this.value      = '';\n            this.exemptions = [];\n            this.deductions = [];\n\n            // refocus on label field\n            this.focusNewIncome();\n        },\n        normalizeIncome: function () {\n            this.tax   = parseInt(this.tax);\n            this.value = parseInt(this.value);\n        },\n        validateIncome: function () {\n            // do we have budget to edit this income when lowering the income value?\n            if (this.income) {\n                let income = JSON.parse(JSON.stringify(this.income));\n                income.value = this.value;\n                var diff = util.getNet(this.income) - util.getNet(income);\n                if (diff > this.unallocatedSum) {\n                    alert(`You cannot edit this income stream until you free up at least ${util.formatMoney(diff, this.mode)} into your unallocated budget. You must remove at least ${util.formatMoney(diff-this.unallocatedSum, this.mode)} in expenses or investments before you can make this change.`);\n                    return false;\n                }\n            }\n\n            // validate label, tax, and value\n            if (this.label == '') {\n                alert('Income stream label is required.');\n                return false;\n            }\n            if (isNaN(this.tax) || this.tax < 1 || this.tax > 100) {\n                alert('Income stream tax rate should be between 1 and 100.');\n                return false;\n            }\n            if (isNaN(this.value) || this.value <= 0) {\n                alert('Income stream amount must be positive number.');\n                return false;\n            }\n            return true;\n        },\n        validateExemptionsAndDeductions: function () {\n            // required, valid labels\n            var exemption_total = 0;\n            this.exemptions.forEach(exemption => {\n                exemption.value = parseInt(exemption.value);\n                if (isNaN(exemption.value) || exemption.value < 0) {\n                    let str = 'Exemption amount must be greater or equal to 0.';\n                    alert(str);\n                    throw str;\n                }\n                exemption.match = parseInt(exemption.match);\n                if (isNaN(exemption.match) || exemption.match < 0) {\n                    let str = 'Exemption match amount must be greater or equal to 0.';\n                    alert(str);\n                    throw str;\n                }\n                exemption_total += exemption.value;\n            })\n\n            this.deductions.forEach(deduction => {\n                deduction.value = parseInt(deduction.value);\n                if (isNaN(deduction.value) || deduction.value < 0) {\n                    let str = 'Deduction amount must be greater or equal to 0.';\n                    alert(str);\n                    throw str;\n                }\n                exemption_total += deduction.value;\n            })\n\n            // sum of exemptions cannot be greater than income stream total\n            if (exemption_total > this.value) {\n                alert('Tax-exempt contributions and deductions cannot be more than income stream amount!');\n                return false;\n            }\n            return true;\n        },\n        cancelEditIncome: function () {\n            this.$emit('editIncome', false);\n        },\n        deleteIncome: function () {\n            let net = util.getNet(this.income);\n            net = net - this.income.exemptions.reduce((a, e) => a + e.value + e.match, 0);\n            if (net > this.unallocatedSum) {\n                alert(`You cannot remove this income stream until you free up at least ${util.formatMoney(net, this.mode)} into your unallocated budget. You must remove at least ${util.formatMoney(net-this.unallocatedSum, this.mode)} in expenses or investments before you can remove this income stream.`);\n                return;\n            }\n            if (confirm(\"Are you sure you want to remove this income stream?\")) {\n                this.$emit('deleteIncome');\n            }\n        },\n        /************************************************************\n         * EXEMPTIONS\n         ************************************************************/\n        addExemption: function () {\n            this.exemptions.push({\n                label: '',\n                value: '',\n                match: '',\n                value_mode: 'currency',\n                match_mode: 'currency'\n            });\n        },\n        removeExemption: function (idx) {\n            var empty = !this.exemptions[idx].label;\n            empty = empty && !this.exemptions[idx].value;\n            empty = empty && !this.exemptions[idx].match;\n            if (empty || confirm('Are you sure you want to remove this exemption?')) {\n                this.exemptions.splice(idx, 1);\n            }\n        },\n        clearExemptions: function () {\n            this.exemptions = [];\n        },\n        normalizeExemptions: function () {\n            // translate all exemptions to $ mode\n            for (var key in this.exemptions) {\n                let exemption = this.exemptions[key];\n                if (exemption.value_mode == 'percent') {\n                    exemption.value      = this.value * exemption.value / 100;\n                    exemption.value_mode = 'currency';\n                }\n                if (exemption.match_mode == 'percent') {\n                    exemption.match      = this.value * exemption.match / 100;\n                    exemption.match_mode = 'currency';\n                }\n            }\n        },\n        /************************************************************\n         * DEDUCTIONS\n         ************************************************************/\n        addDeduction: function () {\n            this.deductions.push({\n                label: '',\n                value: '',\n                value_mode: 'currency',\n            });\n        },\n        removeDeduction: function (idx) {\n            var empty = !this.deductions[idx].label && !this.deductions[idx].value;\n            if (empty || confirm('Are you sure you want to remove this deduction?')) {\n                this.deductions.splice(idx, 1);\n            }\n        },\n        clearDeductions: function () {\n            this.deductions = [];\n        },\n        /************************************************************\n         * UTIL\n         ************************************************************/\n        focusNewIncome: function () {\n            document.getElementById('new-income-focus').focus();\n        },\n        processKeyPress: function (event) {\n            if (event.keyCode == 13) this.addIncome();\n        }\n    },\n    watch: {\n        // set local scope values if someone clicks edit income\n        income: function () {\n            this.value      = this.income ? this.income.value : '';\n            this.label      = this.income ? this.income.label : '';\n            this.tax        = this.income ? this.income.tax : '';\n            this.exemptions = this.income ? this.income.exemptions : [];\n            this.deductions = this.income ? this.income.deductions : [];\n            if (this.exemptions.length) {\n                this.exemptions = JSON.parse(JSON.stringify(this.exemptions));\n            }\n            if (this.deductions.length) {\n                this.deductions = JSON.parse(JSON.stringify(this.deductions));\n            }\n        }\n    }\n}\n\n</script>\n\n\n<style scoped>\n\n.desktop-only {\n    float: right;\n    display:inline;\n    margin-top:30px;\n}\n\n.remove-expense {\n    color: red;\n}\n\n.desktop-only .remove-expense {\n    padding-left:5px;\n    padding-right:17px;\n}\n\n</style>"],"sourceRoot":"src/components/Incomes"}]}