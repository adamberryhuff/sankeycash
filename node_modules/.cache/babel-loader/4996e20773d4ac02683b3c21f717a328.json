{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/thread-loader/dist/cjs.js!/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Chart.vue","mtime":1599662970723},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div v-show=\"show\">\n        <div class=\"sankey-wrapper\" :class=\"{ 'sankey-scroll': canvas == 'medium' || canvas == 'large' }\">\n            <div id=\"sankey\" class=\"sankey\" :class=\"{ 'sankey-md': canvas == 'medium', 'sankey-lg': canvas == 'large' }\"></div>\n        </div>\n        <div style=\"position: relative;\">\n            <span class=\"float-right switch\">\n                <div class=\"btn-group percent-buttons\" role=\"group\" aria-label=\"Basic example\">\n                    <input type=\"color\" class=\"btn btn-secondary color-inputs\" v-model=\"colors.income_light\" />\n                    <input type=\"color\" class=\"btn btn-secondary color-inputs\" v-model=\"colors.expenses_light\" />\n                    <input type=\"color\" class=\"btn btn-secondary color-inputs\" v-model=\"colors.investments_light\" />\n                    <input type=\"color\" class=\"btn btn-secondary color-inputs\" v-model=\"colors.unallocated_light\" />\n                </div>\n                <div class=\"btn-group percent-buttons\" role=\"group\" aria-label=\"Basic example\">\n                    <button type=\"button\" v-on:click=\"toggleCanvas('small')\" class=\"btn btn-secondary canvas-small\" :class=\"{ active: canvas == 'small' }\"><span class=\"fa fa-square\"></span></button>\n                    <button type=\"button\" v-on:click=\"toggleCanvas('medium')\" class=\"btn btn-secondary canvas-medium\" :class=\"{ active: canvas == 'medium' }\"><span class=\"fa fa-square\"></span></button>\n                    <button type=\"button\" v-on:click=\"toggleCanvas('large')\" class=\"btn btn-secondary canvas-large\" :class=\"{ active: canvas == 'large' }\"><span class=\"fa fa-square\"></span></button>\n                </div>\n                <div class=\"btn-group percent-buttons\" role=\"group\" aria-label=\"Basic example\">\n                    <button type=\"button\" v-on:click=\"togglePercent(false)\" class=\"btn btn-secondary\" :class=\"{ active: !percent }\">{{ mode }}</button>\n                    <button type=\"button\" v-on:click=\"togglePercent(true)\" class=\"btn btn-secondary\" :class=\"{ active: percent }\">%</button>\n                </div>\n            </span>\n        </div>\n        <div class=\"btn-group chart-up\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-secondary\" v-on:click=\"viewChart()\" v-show=\"!atTop && chartShowing\">\n                <span class=\"fa fa-arrow-up\"> {{ $t('common.chart') }}</span>\n            </button>\n        </div>\n        <br>\n    </div>\n</template>\n\n<script>\nimport google from 'google';\nimport util from '../util.js';\nimport html2canvas from 'html2canvas';\n\nexport default {\n    name: 'Chart',\n    props: [\n        'chartShowing', 'mode', 'percent', 'canvas', 'colors',\n        'itemizedIncomes', 'itemizedExpenses', 'itemizedInvestments',\n        'grossSum', 'netSum', 'taxSum', 'unallocatedSum', 'investmentSum', 'expenseSum',\n        'deductionSum'\n    ],\n    data () {\n        return {\n            // chart labels\n            gross:       { label: false, value: false },\n            net:         { label: false, value: false },\n            tax:         { label: false, value: false },\n            deductions:  { label: false, value: false },\n            unallocated: { label: false, value: false },\n            expenses:    { label: false, value: false },\n            investments: { label: false, value: false },\n\n            // chart rendering\n            chart: false,\n            color_mode: 'gradient',\n            atTop: true,\n            coded: [],\n            nodes: [],\n        }\n    },\n    mounted () {\n        google.charts.load('current', {'packages':['sankey']});\n        this.setChartLabels();\n    },\n    created () {\n        window.addEventListener('scroll', this.handleScroll);\n        window.addEventListener('resize', this.handleResize);\n    },\n    destroyed () {\n        window.removeEventListener('scroll', this.handleScroll);\n        window.removeEventListener('resize', this.handleResize);\n    },\n    watch: {\n        grossSum: function () {\n            this.render();\n        },\n        netSum: function () {\n            this.render();\n        },\n        taxSum: function () {\n            this.render();\n        },\n        unallocatedSum: function () {\n            this.render();\n        },\n        expenseSum: function () {\n            this.render();\n        },\n        investmentSum: function () {\n            this.render();\n        },\n        '$i18n.locale': function () {\n            this.setChartLabels();\n            this.render();\n        },\n        itemizedIncomes: function () {\n            this.render();\n        },\n        itemizedExpenses: function () {\n            this.render();\n        },\n        itemizedInvestments: function () {\n            this.render();\n        },\n        percent: function () {\n            this.render();\n        },\n        canvas: function () {\n            this.render();\n        },\n        mode: function () {\n            this.render();\n        },\n        'colors.income_light': function () {\n            this.colors.income_dark = util.shadeColor(this.colors.income_light, -40);\n            this.render();\n        },\n        'colors.expenses_light': function () {\n            this.colors.expenses_dark = util.shadeColor(this.colors.expenses_light, -40);\n            this.render();\n        },\n        'colors.investments_light': function () {\n            this.colors.investments_dark = util.shadeColor(this.colors.investments_light, -40);\n            this.render();\n        },\n        'colors.unallocated_light': function () {\n            this.colors.unallocated_dark = util.shadeColor(this.colors.unallocated_light, -40);\n            this.render();\n        }\n    },\n    computed: {\n        show: function () {\n            return this.grossSum || this.netSum || this.taxSum || this.deductionSum\n                || this.unallocatedSum || this.expenseSum || this.investmentSum;\n        }\n    },\n    methods: {\n        render: function (download=false) {\n            if (!this.show) {\n                return;\n            }\n            this.gross.value       = this.formatValue(this.grossSum);\n            this.net.value         = this.formatValue(this.netSum);\n            this.tax.value         = this.formatValue(this.taxSum);\n            this.deductions.value  = this.formatValue(this.deductionSum);\n            this.unallocated.value = this.formatValue(this.unallocatedSum);\n            this.expenses.value    = this.formatValue(this.expenseSum);\n            this.investments.value = this.formatValue(this.investmentSum);\n            window.$(function () {\n                window.$('[data-toggle=\"tooltip\"]').tooltip('dispose');\n                window.$('[data-toggle=\"tooltip\"]').tooltip('enable');\n            })\n            google.charts.setOnLoadCallback(() => {\n                this.chart = new google.visualization.DataTable();\n                this.chart.addColumn('string', 'From');\n                this.chart.addColumn('string', 'To');\n                this.chart.addColumn('number', 'Amount');\n                this.coded             = [];\n                this.nodes             = [];\n                this.drawIncomeBreakdown();\n                this.drawExpensesBreakdown();\n                this.drawInvestmentBreakdown();\n\n                var canvas = document.getElementById('sankey-test');\n                if (!canvas) canvas = document.getElementById('sankey');\n                var chart = new google.visualization.Sankey(canvas);\n                chart.draw(this.chart, this.getChartStyling());\n                if (download) this.downloadChart();\n            });\n        },\n        /**************************************************************\n         * Income\n         **************************************************************/\n        drawIncomeBreakdown: function () {\n            this.drawGrossIncome();\n            this.drawTaxes();\n            this.drawDeductions();\n            this.drawNetIncome();\n        },\n        // draw lines: income streams -> gross\n        // treat employee matches as separate income streams\n        drawGrossIncome: function () {\n            this.itemizedIncomes.forEach(stream => {\n                stream = JSON.parse(JSON.stringify(stream));\n                stream.value = this.formatValue(stream.value);\n                this.addChartRow(stream, this.gross, this.colors.income_dark, this.colors.income_light);\n                stream.exemptions.forEach(exemption => {\n                    exemption = JSON.parse(JSON.stringify(exemption));\n                    if (exemption.match > 0) {\n                        exemption.match = this.formatValue(exemption.match);\n                        this.addChartRow({\n                            label: exemption.label+' Match', value: exemption.match\n                        }, this.gross, this.colors.income_dark, this.colors.income_light);\n                    }\n                });\n            })\n        },\n        // draw line: gross -> taxes\n        // draw line: taxes -> taxes\n        // draw line: taxes -> taxes\n        drawTaxes: function () {\n            this.addChartRow(this.gross, this.tax, this.colors.income_light, this.colors.expenses_light);\n            this.addChartRow(this.tax, this.tax, this.colors.expenses_light, this.colors.expenses_light);\n            this.addChartRow(this.tax, this.tax, this.colors.expenses_light, this.colors.expenses_dark);\n        },\n        // draw line: gross      -> deductions\n        // draw line: deductions -> deductions\n        // draw line: deductions -> deductions\n        drawDeductions: function () {\n            this.itemizedIncomes.forEach(stream => {\n                stream.deductions.forEach(deduction => {\n                    deduction = JSON.parse(JSON.stringify(deduction));\n                    deduction.value = this.formatValue(deduction.value);\n                    this.addChartRow(this.gross, deduction, this.colors.expenses_light, this.colors.expenses_light);\n                    this.addChartRow(deduction, this.deductions, this.colors.expenses_light, this.colors.expenses_light);\n                });\n            });\n            this.addChartRow(this.deductions, this.deductions, this.colors.expenses_light, this.colors.expenses_dark);\n        },\n        // draw line: gross -> net\n        drawNetIncome: function () {\n            this.addChartRow(this.gross, this.net, this.colors.income_light, this.colors.income_light);\n        },\n        /**************************************************************\n         * Expenses\n         **************************************************************/\n        drawExpensesBreakdown: function () {\n            this.itemizedExpenses.forEach(expense => {\n                expense = JSON.parse(JSON.stringify(expense));\n                expense.value = this.formatValue(expense.value);\n                this.addChartRow(this.net, expense, this.colors.income_light, this.colors.expenses_light);\n                this.addChartRow(expense, this.expenses, this.colors.expenses_light, this.colors.expenses_dark);\n            })\n        },\n        /**************************************************************\n         * Investments\n         **************************************************************/\n        drawInvestmentBreakdown: function () {\n            this.drawExemptions();\n            this.itemizedInvestments.forEach(investment => {\n                investment = JSON.parse(JSON.stringify(investment));\n                investment.value = this.formatValue(investment.value);\n                this.addChartRow(this.net, investment, this.colors.income_light, this.colors.investments_light);\n                this.addChartRow(investment, this.investments, this.colors.investments_light, this.colors.investments_dark);\n            })\n            this.addChartRow(this.net, this.unallocated, this.colors.income_light, this.colors.unallocated_light);\n            this.addChartRow(this.unallocated, this.unallocated, this.colors.unallocated_light, this.colors.unallocated_dark);\n        },\n        drawExemptions: function () {\n            this.itemizedIncomes.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    exemption = JSON.parse(JSON.stringify(exemption));\n                    exemption.value = this.formatValue(exemption.value + exemption.match);\n                    this.addChartRow(this.net, exemption, this.colors.income_light, this.colors.investments_light);\n                    this.addChartRow(exemption, this.investments, this.colors.investments_light, this.colors.investments_dark);\n                });\n            })\n        },\n        /**************************************************************\n         * Chart Stuff\n         **************************************************************/\n        addChartRow: function (from, to, from_color, to_color) {\n            let mode = this.percent ? '%' : this.mode;\n            if (from.value == 0 || to.value == 0) return;\n            var append = to.label == from.label ? ' ' : '';\n            let value = Math.min(from.value, to.value);\n            let from_label = from.label + ' (';\n            from_label += util.formatMoney(from.value, mode);\n            from_label += ')';\n            let to_label   = to.label + append + ' (';\n            to_label += util.formatMoney(to.value, mode);\n            to_label += ')';\n            if (!this.nodes.includes(from_label)) this.coded.push(from_color);\n            if (!this.nodes.includes(to_label)) this.coded.push(to_color);\n            this.nodes.push(from_label);\n            this.nodes.push(to_label);\n            this.chart.addRow([from_label, to_label, value]);\n            to.label += append;\n        },\n        viewChart: () => window.scrollTo(0,0),\n        downloadChartTrigger: function () {\n            this.color_mode = 'source';\n            this.render(true);\n        },\n        downloadChart: function () {\n            window.scrollTo(0,0);\n            html2canvas(document.querySelector(\"#sankey\")).then(canvas => {\n                let uri = canvas.toDataURL();\n                var link = document.createElement(\"a\");\n                link.download = \"sankeycash.png\";\n                link.href = uri;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            });\n            this.color_mode = 'gradient';\n            this.render();\n        },\n        getChartStyling: function () {\n            // light yellow - #fdbf6f, #ffff99\n            // var colors = [\n            //     '#a6cee3', '#b2df8a', '#fb9a99', '#fdbf6f',\n            //     '#cab2d6', '#ffff99', '#1f78b4', '#33a02c'\n            // ];\n            return {\n                sankey: {\n                    node: {\n                        colors: this.coded,\n                        nodePadding: 7\n                    },\n                    link: {\n                        colorMode: this.color_mode,\n                        colors: this.coded\n                    },\n                    iterations: 0,\n                },\n            }\n        },\n        handleScroll: function () {\n            this.atTop = window.scrollY < 300;\n        },\n        handleResize: function () {\n            this.render();\n        },\n        formatValue: function (num) {\n            return this.percent ? Math.round(num/this.grossSum*100*10)/10 : num;\n        },\n        togglePercent: function (percent) {\n            this.$emit('setPercent', percent);\n        },\n        toggleCanvas: function (size) {\n            this.$emit('setCanvas', size);\n        },\n        setChartLabels: function () {\n            this.gross = {\n                label: this.$t('common.gross'),\n                value: this.formatValue(this.grossSum)\n            };\n            this.net = {\n                label: this.$t('common.net'),\n                value: this.formatValue(this.netSum)\n            };\n            this.tax = {\n                label: this.$t('common.taxes'),\n                value: this.formatValue(this.taxSum)\n            };\n            this.deductions = {\n                label: this.$t('common.deductions'),\n                value: this.formatValue(this.deductionSum)\n            };\n            this.unallocated = {\n                label: this.$t('common.unallocated'),\n                value: this.formatValue(this.unallocatedSum)\n            };\n            this.expenses = {\n                label: this.$t('common.expenses'),\n                value: this.formatValue(this.expenseSum)\n            };\n            this.investments = {\n                label: this.$t('common.investments'),\n                value: this.formatValue(this.investmentSum)\n            };\n        },\n    }\n}\n</script>\n\n<style scoped>\n\n.sankey {\n    height:300px;\n    width: 100%;\n    min-width:1000px;\n    margin-bottom:15px;\n}\n\n.sankey-md {\n    height:450px;\n    width: 150%;\n}\n\n.sankey-lg {\n    height:600px;\n    width:200%;\n}\n\n.chart-up {\n    position:fixed;\n    bottom:0px;\n    left:0px;\n    z-index:10000;\n    border-radius:\n}\n\n.chart-up .btn-secondary {\n    box-shadow: 0 0 0 .2rem rgba(130,138,145,.5);\n}\n\n.chart-up .btn:first-child {\n    border-radius: 0rem 0rem 0rem 0rem !important;\n}\n.chart-up .btn:last-child {\n    border-radius: 0rem 0.25rem 0rem 0rem !important;\n}\n\n.switch {\n    margin-right:30px;\n}\n\n.btn-secondary {\n    font-weight:bold !important;\n}\n\n.sankey-wrapper {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n}\n\n.sankey-scroll {\n    overflow-x: scroll;\n}\n\n@media only screen and (max-width: 1000px) {\n    .sankey-wrapper {\n        overflow-x: scroll;\n    }\n}\n\n.percent-buttons {\n    margin-left:10px;\n}\n\n.canvas-small {\n    font-size: 5px;\n}\n.canvas-medium {\n    font-size: 10px;\n}\n.canvas-large {\n    font-size: 15px;\n}\n\n.color-inputs {\n    width: 40px;\n    height: 36.5px;\n    padding: .6rem .7rem;\n}\n\n</style>\n\n"],"sourceRoot":"src/components"}]}