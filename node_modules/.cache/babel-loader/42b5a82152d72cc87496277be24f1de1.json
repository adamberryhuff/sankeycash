{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Chart.vue","mtime":1598333744671},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div id=\"sankey\"></div>\n        <button v-on:click=\"getChartUrl()\">Get</button>\n    </div>\n</template>\n\n<script>\nimport google from 'google';\nimport util from '../util.js';\nimport $ from 'jquery';\n\nexport default {\n    name: 'Chart',\n    props: [\n        'itemizedIncomes', 'itemizedExpenses', 'itemizedInvestments',\n        'grossSum', 'netSum', 'taxSum', 'unallocatedSum', 'investmentSum', 'expenseSum'\n    ],\n    data () {\n        return {\n            // chart labels\n            gross: { label: 'Gross Income', value: this.grossSum },\n            net: { label: 'Net Income', value: this.netSum },\n            tax: { label: 'Taxes', value: this.taxSum },\n            unallocated: { label: 'Unallocated', value: this.unallocatedSum },\n            expenses: { label: 'Expenses', value: this.expenseSum },\n            investments: { label: 'Investments', value: this.investmentSum },\n\n            // chart rendering\n            chart: false,\n        }\n    },\n    mounted () {\n        google.charts.load('current', {'packages':['sankey']});\n    },\n    watch: {\n        grossSum: function () {\n            this.gross.value = this.grossSum;\n            if (this.gross.value != 0) this.render();\n        },\n        netSum: function () {\n            this.net.value = this.netSum;\n            if (this.net.value != 0) this.render();\n        },\n        taxSum: function () {\n            this.tax.value = this.taxSum;\n            if (this.tax.value != 0) this.render();\n        },\n        unallocatedSum: function () {\n            this.unallocated.value = this.unallocatedSum;\n            if (this.unallocated.value != 0) this.render();\n        },\n        expenseSum: function () {\n            this.expenses.value = this.expenseSum;\n            if (this.expenses.value != 0) this.render();\n        },\n        investmentSum: function () {\n            this.investments.value = this.investmentSum;\n            if (this.investments.value != 0) this.render();\n        }\n    },\n    methods: {\n        render: function () {\n            google.charts.setOnLoadCallback(() => {\n                this.chart = new google.visualization.DataTable();\n                this.chart.addColumn('string', 'From');\n                this.chart.addColumn('string', 'To');\n                this.chart.addColumn('number', 'Amount');\n                this.drawIncomeBreakdown();\n                this.drawExpensesBreakdown();\n                this.drawInvestmentBreakdown();\n\n                var canvas = document.getElementById('sankey');\n                var chart = new google.visualization.Sankey(canvas);\n                chart.draw(this.chart, this.getChartStyling());\n\n            });\n        },\n        /**************************************************************\n         * Income\n         **************************************************************/\n        drawIncomeBreakdown: function () {\n            this.drawGrossIncome();\n            this.drawTaxes();\n            this.drawNetIncome();\n        },\n        // draw lines: income streams -> gross\n        // treat employee matches as separate income streams\n        drawGrossIncome: function () {\n            this.itemizedIncomes.forEach(stream => {\n                this.addChartRow(stream, this.gross);\n                stream.exemptions.forEach(exemption => {\n                    if (exemption.match > 0) {\n                        var match = {label: exemption.label+' Match', value: exemption.match};\n                        this.addChartRow(match, this.gross);\n                    }\n                });\n            })\n        },\n        // draw line: gross -> taxes\n        // draw line: taxes -> taxes\n        // draw line: taxes -> taxes\n        drawTaxes: function () {\n            this.addChartRow(this.gross, this.tax);\n            this.addChartRow(this.tax, this.tax);\n            this.addChartRow(this.tax, this.tax);\n        },\n        // draw line: gross -> net\n        drawNetIncome: function () {\n            this.addChartRow(this.gross, this.net);\n        },\n        /**************************************************************\n         * Expenses\n         **************************************************************/\n        drawExpensesBreakdown: function () {\n            this.itemizedExpenses.forEach(expense => {\n                this.addChartRow(this.net, expense);\n                this.addChartRow(expense, this.expenses);\n            })\n        },\n        /**************************************************************\n         * Investments\n         **************************************************************/\n        drawInvestmentBreakdown: function () {\n            this.drawExemptions();\n            this.itemizedInvestments.forEach(investment => {\n                this.addChartRow(this.net, investment);\n                this.addChartRow(investment, this.investments);\n            })\n            this.addChartRow(this.net, this.unallocated);\n            this.addChartRow(this.unallocated, this.unallocated);\n        },\n        drawExemptions: function () {\n            this.itemizedIncomes.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    this.addChartRow(this.net, exemption);\n                    this.addChartRow(exemption, this.investments);\n                });\n            })\n        },\n        /**************************************************************\n         * Chart Stuff\n         **************************************************************/\n        addChartRow: function (from, to) {\n            var append = to.label == from.label ? ' ' : '';\n            let value = Math.min(from.value, to.value);\n            let from_label = from.label + ' (' + util.formatMoney(from.value) + ')';\n            let to_label   = to.label   + append + ' (' + util.formatMoney(to.value) + ')';\n            this.chart.addRow([from_label, to_label, value]);\n            to.label += append;\n        },\n        getChartUrl: function () {\n            $('#sankey').html2canvas();\n            var queue = window.html2canvas.Parse();\n            var canvas = window.html2canvas.Renderer(queue,{elements:{length:1}});\n            var img = canvas.toDataURL();\n            window.open(img);\n        },\n        getChartStyling: function () {\n            let colors = [\n                '#a6cee3', '#b2df8a', '#fb9a99', '#fdbf6f',\n                '#cab2d6', '#ffff99', '#1f78b4', '#33a02c'\n            ];\n            return {\n                sankey: {\n                    node: {\n                        colors: colors,\n                        nodePadding: 7\n                    },\n                    link: {\n                        colorMode: 'gradient',\n                        colors: colors\n                    },\n                    iterations: 0,\n                },\n            }\n        }\n    }\n}\n</script>\n\n<style>\n#sankey {\n    width: 100%;\n    height:300px;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}