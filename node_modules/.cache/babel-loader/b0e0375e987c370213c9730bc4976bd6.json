{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue","mtime":1598242072395},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgdXRpbCBmcm9tICcuLi8uLi91dGlsLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdWaWV3SW5jb21lcycsCiAgcHJvcHM6IFsnaW5jb21lcycsICdncm9zcycsICd0YXhlcycsICduZXQnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXRpbDogdXRpbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJlbW92ZUluY29tZTogZnVuY3Rpb24gcmVtb3ZlSW5jb21lKGlkeCkgewogICAgICBpZiAoY29uZmlybSgiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJlbW92ZSB0aGlzIGluY29tZSBzdHJlYW0/IikpIHsKICAgICAgICB0aGlzLiRlbWl0KCdyZW1vdmVJbmNvbWUnLCBpZHgpOwogICAgICB9CiAgICB9LAogICAgZ2V0VGF4YWJsZUluY29tZTogZnVuY3Rpb24gZ2V0VGF4YWJsZUluY29tZShpbmNvbWUpIHsKICAgICAgdmFyIHZhbHVlID0gcGFyc2VJbnQoaW5jb21lLnZhbHVlKTsKICAgICAgaW5jb21lLmV4ZW1wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoZXhlbXB0aW9uKSB7CiAgICAgICAgdmFsdWUgLT0gcGFyc2VJbnQoZXhlbXB0aW9uLnZhbHVlKTsKICAgICAgfSk7CiAgICAgIHJldHVybiB2YWx1ZTsKICAgIH0sCiAgICBnZXRUYXg6IGZ1bmN0aW9uIGdldFRheChpbmNvbWUpIHsKICAgICAgdmFyIHZhbHVlID0gcGFyc2VJbnQoaW5jb21lLnZhbHVlKTsKICAgICAgdmFsdWUgLT0gaW5jb21lLmV4ZW1wdGlvbnMucmVkdWNlKGZ1bmN0aW9uIChhLCBlKSB7CiAgICAgICAgcmV0dXJuIGEgKyBwYXJzZUludChlLnZhbHVlKTsKICAgICAgfSwgMCk7CiAgICAgIHJldHVybiBwYXJzZUludCh2YWx1ZSkgKiAocGFyc2VJbnQoaW5jb21lLnRheCkgLyAxMDApOwogICAgfSwKICAgIGdldE1hdGNoOiBmdW5jdGlvbiBnZXRNYXRjaChpbmNvbWUpIHsKICAgICAgcmV0dXJuIGluY29tZS5leGVtcHRpb25zLnJlZHVjZShmdW5jdGlvbiAoYSwgZSkgewogICAgICAgIHJldHVybiBhICsgcGFyc2VJbnQoZS5tYXRjaCk7CiAgICAgIH0sIDApOwogICAgfSwKICAgIGdldE5ldDogZnVuY3Rpb24gZ2V0TmV0KGluY29tZSkgewogICAgICByZXR1cm4gcGFyc2VJbnQoaW5jb21lLnZhbHVlKSAtIHRoaXMuZ2V0VGF4KGluY29tZSkgKyB0aGlzLmdldE1hdGNoKGluY29tZSk7CiAgICB9LAogICAgZ2V0TmV0RGlzcGxheTogZnVuY3Rpb24gZ2V0TmV0RGlzcGxheShpbmNvbWUpIHsKICAgICAgdmFyIG5ldCA9IHV0aWwuZm9ybWF0TW9uZXkodGhpcy5nZXROZXQoaW5jb21lKSk7CiAgICAgIHJldHVybiAiTmV0OiAiLmNvbmNhdChuZXQpOwogICAgfSwKICAgIGdldEdyb3NzRGlzcGxheTogZnVuY3Rpb24gZ2V0R3Jvc3NEaXNwbGF5KGluY29tZSkgewogICAgICB2YXIgZ3Jvc3MgPSB1dGlsLmZvcm1hdE1vbmV5KGluY29tZS52YWx1ZSk7CiAgICAgIHJldHVybiAiR3Jvc3M6ICIuY29uY2F0KGdyb3NzKTsKICAgIH0sCiAgICBnZXRFeGVtcHRpb25NYXRjaERpc3BsYXk6IGZ1bmN0aW9uIGdldEV4ZW1wdGlvbk1hdGNoRGlzcGxheShleGVtcHRpb24pIHsKICAgICAgdmFyIG1hdGNoID0gdXRpbC5mb3JtYXRNb25leShleGVtcHRpb24ubWF0Y2gpOwogICAgICByZXR1cm4gIiIuY29uY2F0KGV4ZW1wdGlvbi5sYWJlbCwgIiBNYXRjaDogIikuY29uY2F0KG1hdGNoLCAiIEAgMCUiKTsKICAgIH0sCiAgICBnZXRFeGVtcHRpb25EaXNwbGF5OiBmdW5jdGlvbiBnZXRFeGVtcHRpb25EaXNwbGF5KGV4ZW1wdGlvbikgewogICAgICB2YXIgY29udHJpYnV0aW9uID0gdXRpbC5mb3JtYXRNb25leShleGVtcHRpb24udmFsdWUpOwogICAgICByZXR1cm4gIiIuY29uY2F0KGV4ZW1wdGlvbi5sYWJlbCwgIjogIikuY29uY2F0KGNvbnRyaWJ1dGlvbiwgIiBAIDAlIik7CiAgICB9LAogICAgZ2V0SW5jb21lRGlzcGxheTogZnVuY3Rpb24gZ2V0SW5jb21lRGlzcGxheShpbmNvbWUpIHsKICAgICAgdmFyIHRheGFibGUgPSB1dGlsLmZvcm1hdE1vbmV5KHRoaXMuZ2V0VGF4YWJsZUluY29tZShpbmNvbWUpKTsKICAgICAgdmFyIHRheCA9IHV0aWwuZm9ybWF0VGF4KGluY29tZS50YXgpOwogICAgICByZXR1cm4gIiIuY29uY2F0KGluY29tZS5sYWJlbCwgIjogIikuY29uY2F0KHRheGFibGUsICIgQCAiKS5jb25jYXQodGF4KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ViewIncomes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,OAAA,IAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAAA,KAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,EAAA,sBAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,qDAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,cAAA,EAAA,GAAA;AACA;AACA,KALA;AAMA,IAAA,gBAAA,EAAA,0BAAA,MAAA,EAAA;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,MAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,SAAA,EAAA;AACA,QAAA,KAAA,IAAA,QAAA,CAAA,SAAA,CAAA,KAAA,CAAA;AACA,OAFA;AAGA,aAAA,KAAA;AACA,KAZA;AAaA,IAAA,MAAA,EAAA,gBAAA,MAAA,EAAA;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,MAAA,KAAA,IAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,GAAA,QAAA,CAAA,CAAA,CAAA,KAAA,CAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,IAAA,QAAA,CAAA,MAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA;AACA,KAjBA;AAkBA,IAAA,QAAA,EAAA,kBAAA,MAAA,EAAA;AACA,aAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,GAAA,QAAA,CAAA,CAAA,CAAA,KAAA,CAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AACA,KApBA;AAqBA,IAAA,MAAA,EAAA,gBAAA,MAAA,EAAA;AACA,aAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,GAAA,KAAA,QAAA,CAAA,MAAA,CAAA;AACA,KAvBA;AAwBA,IAAA,aAAA,EAAA,uBAAA,MAAA,EAAA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,WAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,CAAA;AACA,4BAAA,GAAA;AACA,KA3BA;AA4BA,IAAA,eAAA,EAAA,yBAAA,MAAA,EAAA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,8BAAA,KAAA;AACA,KA/BA;AAgCA,IAAA,wBAAA,EAAA,kCAAA,SAAA,EAAA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,WAAA,CAAA,SAAA,CAAA,KAAA,CAAA;AACA,uBAAA,SAAA,CAAA,KAAA,qBAAA,KAAA;AACA,KAnCA;AAoCA,IAAA,mBAAA,EAAA,6BAAA,SAAA,EAAA;AACA,UAAA,YAAA,GAAA,IAAA,CAAA,WAAA,CAAA,SAAA,CAAA,KAAA,CAAA;AACA,uBAAA,SAAA,CAAA,KAAA,eAAA,YAAA;AACA,KAvCA;AAwCA,IAAA,gBAAA,EAAA,0BAAA,MAAA,EAAA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,WAAA,CAAA,KAAA,gBAAA,CAAA,MAAA,CAAA,CAAA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA;AACA,uBAAA,MAAA,CAAA,KAAA,eAAA,OAAA,gBAAA,GAAA;AACA;AA5CA;AARA,CAAA","sourcesContent":["<template>\n    <div>\n\n        <!-- income streams label -->\n        <label>Income Streams</label>\n\n        <!-- income streams gross, tax, net -->\n        <span class=\"float-right net-income\">\n            <span class=\"badge badge-success badge-pill net-income-badge\">\n                Gross: {{ util.formatMoney(gross) }}\n            </span>\n            -\n            <span class=\"badge badge-success badge-pill net-income-badge\">\n                Tax: {{ util.formatMoney(taxes) }}\n            </span>\n            =\n            <span class=\"badge badge-success badge-pill net-income-badge\">\n                Net: {{ util.formatMoney(net) }}\n            </span>\n        </span>\n\n        <ul class=\"list-group\">\n\n            <!-- no income streams -->\n            <li class=\"list-group-item d-flex justify-content-between align-items-center disabled\" v-if=\"!incomes.length\">\n                You haven't added any income streams yet.\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center clickable\" v-for=\"(income, idx) in incomes\" v-bind:key=\"income.label\" v-on:click=\"removeIncome(idx)\">\n                <div class=\"row no-gutters income-display\">\n                    <div class=\"col-md-4\">\n                        <span id=\"label\">{{ income.label }}</span>\n                    </div>\n                    <div class=\"col-md-8\">\n                        <span class=\"badge badge-primary badge-pill\">\n                            {{ getNetDisplay(income) }}\n                        </span>\n                        <span class=\"badge badge-primary badge-pill\">\n                            {{ getGrossDisplay(income) }}\n                        </span><br>\n                        <span v-for=\"(exemption, idx) in income.exemptions\" v-bind:key=\"idx\">\n                            <span class=\"badge badge-secondary badge-pill\" v-if=\"exemption.match > 0\">\n                                {{ getExemptionMatchDisplay(exemption) }}\n                            </span>&nbsp;\n                            <span class=\"badge badge-secondary badge-pill\" v-if=\"exemption.value > 0\">\n                                {{ getExemptionDisplay(exemption) }}\n                            </span>&nbsp;\n                        </span>\n                        <span class=\"badge badge-secondary badge-pill float-right\">\n                            {{ getIncomeDisplay(income) }}\n                        </span>\n                    </div>\n                </div>\n            </li>\n        </ul>\n        <small class=\"form-text text-muted\">\n            Click on an income stream to remove it.\n        </small>\n    </div>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'ViewIncomes',\n    props: ['incomes', 'gross', 'taxes', 'net'],\n    data () {\n        return {\n            util: util,\n        }\n    },\n    methods: {\n        removeIncome: function (idx) {\n            if (confirm(\"Are you sure you want to remove this income stream?\")) {\n                this.$emit('removeIncome', idx);\n            }\n        },\n        getTaxableIncome: function (income) {\n            var value = parseInt(income.value);\n            income.exemptions.forEach(exemption => {\n                value -= parseInt(exemption.value);\n            })\n            return value;\n        },\n        getTax: function (income) {\n            let value = parseInt(income.value);\n            value -= income.exemptions.reduce((a, e) => a + parseInt(e.value), 0);\n            return parseInt(value)*(parseInt(income.tax)/100);\n        },\n        getMatch: function (income) {\n            return income.exemptions.reduce((a, e) => a + parseInt(e.match), 0);\n        },\n        getNet: function (income) {\n            return parseInt(income.value) - this.getTax(income) + this.getMatch(income);\n        },\n        getNetDisplay: function (income) {\n            let net = util.formatMoney(this.getNet(income));\n            return `Net: ${net}`;\n        },\n        getGrossDisplay: function (income) {\n            let gross = util.formatMoney(income.value);\n            return `Gross: ${gross}`\n        },\n        getExemptionMatchDisplay: function (exemption) {\n            let match = util.formatMoney(exemption.match);\n            return `${exemption.label} Match: ${match} @ 0%`;\n        },\n        getExemptionDisplay: function (exemption) {\n            let contribution = util.formatMoney(exemption.value);\n            return `${exemption.label}: ${contribution} @ 0%`;\n        },\n        getIncomeDisplay: function (income) {\n            let taxable = util.formatMoney(this.getTaxableIncome(income));\n            let tax     = util.formatTax(income.tax);\n            return `${income.label}: ${taxable} @ ${tax}`;\n        }\n    },\n}\n\n</script>\n\n\n<style scoped>\n.clickable {\n    cursor:pointer\n}\n.badge {\n    float:right;\n    margin:2px;\n}\n.income-display {\n    width:100%;\n}\n.net-income {\n    padding-right: 1.25rem;\n}\n.net-income-badge {\n    float:initial;\n}\n</style>"],"sourceRoot":"src/components/Incomes"}]}