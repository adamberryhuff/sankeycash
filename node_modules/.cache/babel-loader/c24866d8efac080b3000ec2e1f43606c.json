{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Chart.vue","mtime":1598226934054},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwppbXBvcnQgZ29vZ2xlIGZyb20gJ2dvb2dsZSc7CmltcG9ydCB1dGlsIGZyb20gJy4uL3V0aWwuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NoYXJ0JywKICBwcm9wczogWydpbmNvbWUnLCAnZXhwZW5zZXMnLCAnaW52ZXN0bWVudHMnLCAnZycsICduJywgJ3QnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gY2FsY3VsYXRlZCB2YWx1ZXMKICAgICAgZ3Jvc3M6IHsKICAgICAgICBsYWJlbDogJ0dyb3NzIEluY29tZScsCiAgICAgICAgdmFsdWU6IHRoaXMuZwogICAgICB9LAogICAgICBuZXQ6IHsKICAgICAgICBsYWJlbDogJ05ldCBJbmNvbWUnLAogICAgICAgIHZhbHVlOiB0aGlzLm4KICAgICAgfSwKICAgICAgdGF4OiB7CiAgICAgICAgbGFiZWw6ICdUYXhlcycsCiAgICAgICAgdmFsdWU6IHRoaXMudAogICAgICB9LAogICAgICByZW1haW5pbmc6IHsKICAgICAgICBsYWJlbDogJ0luZGV4IEZ1bmRzJywKICAgICAgICB2YWx1ZTogMAogICAgICB9LAogICAgICAvLyBleHBlbnNlcyBhbmQgaW52ZXN0bWVudHMKICAgICAgc3BlbnQ6IHsKICAgICAgICBsYWJlbDogJ0V4cGVuc2VzJywKICAgICAgICB2YWx1ZTogMAogICAgICB9LAogICAgICBzYXZlZDogewogICAgICAgIGxhYmVsOiAnSW52ZXN0bWVudHMnLAogICAgICAgIHZhbHVlOiAwCiAgICAgIH0sCiAgICAgIC8vIGNoYXJ0IHJlbmRlcmluZwogICAgICBjaGFydDogZmFsc2UKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBnb29nbGUuY2hhcnRzLmxvYWQoJ2N1cnJlbnQnLCB7CiAgICAgICdwYWNrYWdlcyc6IFsnc2Fua2V5J10KICAgIH0pOwogICAgZ29vZ2xlLmNoYXJ0cy5zZXRPbkxvYWRDYWxsYmFjayhmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLmNoYXJ0ID0gbmV3IGdvb2dsZS52aXN1YWxpemF0aW9uLkRhdGFUYWJsZSgpOwoKICAgICAgX3RoaXMuY2hhcnQuYWRkQ29sdW1uKCdzdHJpbmcnLCAnRnJvbScpOwoKICAgICAgX3RoaXMuY2hhcnQuYWRkQ29sdW1uKCdzdHJpbmcnLCAnVG8nKTsKCiAgICAgIF90aGlzLmNoYXJ0LmFkZENvbHVtbignbnVtYmVyJywgJ0Ftb3VudCcpOwoKICAgICAgX3RoaXMuZHJhd0luY29tZUJyZWFrZG93bigpOwoKICAgICAgX3RoaXMuZHJhd0V4cGVuc2VzQnJlYWtkb3duKCk7CgogICAgICBfdGhpcy5kcmF3SW52ZXN0bWVudEJyZWFrZG93bigpOwoKICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzYW5rZXknKTsKICAgICAgdmFyIGNoYXJ0ID0gbmV3IGdvb2dsZS52aXN1YWxpemF0aW9uLlNhbmtleShjYW52YXMpOwogICAgICBjaGFydC5kcmF3KF90aGlzLmNoYXJ0LCBfdGhpcy5nZXRDaGFydFN0eWxpbmcoKSk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAgICogSW5jb21lCiAgICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiAgICBkcmF3SW5jb21lQnJlYWtkb3duOiBmdW5jdGlvbiBkcmF3SW5jb21lQnJlYWtkb3duKCkgewogICAgICB0aGlzLmRyYXdHcm9zc0luY29tZSgpOwogICAgICB0aGlzLmRyYXdUYXhlcygpOwogICAgICB0aGlzLmRyYXdOZXRJbmNvbWUoKTsKICAgIH0sCiAgICAvLyBkcmF3IGxpbmVzOiBpbmNvbWUgc3RyZWFtcyAtPiBncm9zcwogICAgLy8gdHJlYXQgZW1wbG95ZWUgbWF0Y2hlcyBhcyBzZXBhcmF0ZSBpbmNvbWUgc3RyZWFtcwogICAgZHJhd0dyb3NzSW5jb21lOiBmdW5jdGlvbiBkcmF3R3Jvc3NJbmNvbWUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5pbmNvbWUuZm9yRWFjaChmdW5jdGlvbiAoc3RyZWFtKSB7CiAgICAgICAgX3RoaXMyLmFkZENoYXJ0Um93KHN0cmVhbSwgX3RoaXMyLmdyb3NzKTsKCiAgICAgICAgc3RyZWFtLmV4ZW1wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoZXhlbXB0aW9uKSB7CiAgICAgICAgICBpZiAoZXhlbXB0aW9uLm1hdGNoID4gMCkgewogICAgICAgICAgICB2YXIgbWF0Y2ggPSB7CiAgICAgICAgICAgICAgbGFiZWw6IGV4ZW1wdGlvbi5sYWJlbCArICcgTWF0Y2gnLAogICAgICAgICAgICAgIHZhbHVlOiBleGVtcHRpb24ubWF0Y2gKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIF90aGlzMi5hZGRDaGFydFJvdyhtYXRjaCwgX3RoaXMyLmdyb3NzKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8gZHJhdyBsaW5lOiBncm9zcyAtPiB0YXhlcwogICAgLy8gZHJhdyBsaW5lOiB0YXhlcyAtPiB0YXhlcwogICAgZHJhd1RheGVzOiBmdW5jdGlvbiBkcmF3VGF4ZXMoKSB7CiAgICAgIHRoaXMuYWRkQ2hhcnRSb3codGhpcy5ncm9zcywgdGhpcy50YXgpOwogICAgICB2YXIgdGF4ID0gewogICAgICAgIGxhYmVsOiAnVGF4JywKICAgICAgICB2YWx1ZTogdGhpcy50YXgudmFsdWUKICAgICAgfTsKICAgICAgdGhpcy5hZGRDaGFydFJvdyh0aGlzLnRheCwgdGF4KTsKICAgICAgdGhpcy50YXggPSB0YXg7CiAgICB9LAogICAgLy8gZHJhdyBsaW5lOiBncm9zcyAtPiBuZXQKICAgIGRyYXdOZXRJbmNvbWU6IGZ1bmN0aW9uIGRyYXdOZXRJbmNvbWUoKSB7CiAgICAgIHRoaXMucmVtYWluaW5nLnZhbHVlID0gdGhpcy5uZXQudmFsdWU7CiAgICAgIHRoaXMuYWRkQ2hhcnRSb3codGhpcy5ncm9zcywgdGhpcy5uZXQpOwogICAgfSwKCiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgICAqIEV4cGVuc2VzCiAgICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiAgICBkcmF3RXhwZW5zZXNCcmVha2Rvd246IGZ1bmN0aW9uIGRyYXdFeHBlbnNlc0JyZWFrZG93bigpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLnNwZW50LnZhbHVlID0gdGhpcy5leHBlbnNlcy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgZSkgewogICAgICAgIHJldHVybiBhY2MgKyBlLnZhbHVlOwogICAgICB9LCB0aGlzLnRheC52YWx1ZSk7CiAgICAgIHRoaXMuYWRkQ2hhcnRSb3codGhpcy50YXgsIHRoaXMuc3BlbnQpOwogICAgICB0aGlzLmV4cGVuc2VzLmZvckVhY2goZnVuY3Rpb24gKGV4cGVuc2UpIHsKICAgICAgICBfdGhpczMuYWRkQ2hhcnRSb3coX3RoaXMzLm5ldCwgZXhwZW5zZSk7CgogICAgICAgIF90aGlzMy5yZW1haW5pbmcudmFsdWUgLT0gZXhwZW5zZS52YWx1ZTsKCiAgICAgICAgX3RoaXMzLmFkZENoYXJ0Um93KGV4cGVuc2UsIF90aGlzMy5zcGVudCk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgICAqIEludmVzdG1lbnRzCiAgICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiAgICBkcmF3SW52ZXN0bWVudEJyZWFrZG93bjogZnVuY3Rpb24gZHJhd0ludmVzdG1lbnRCcmVha2Rvd24oKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy5zYXZlZC52YWx1ZSA9IHRoaXMucmVtYWluaW5nLnZhbHVlOwogICAgICB0aGlzLmRyYXdFeGVtcHRpb25zKCk7CiAgICAgIHRoaXMuaW52ZXN0bWVudHMuZm9yRWFjaChmdW5jdGlvbiAoaW52ZXN0bWVudCkgewogICAgICAgIF90aGlzNC5hZGRDaGFydFJvdyhfdGhpczQubmV0LCBpbnZlc3RtZW50KTsKCiAgICAgICAgX3RoaXM0LnJlbWFpbmluZy52YWx1ZSAtPSBpbnZlc3RtZW50LnZhbHVlOwoKICAgICAgICBfdGhpczQuYWRkQ2hhcnRSb3coaW52ZXN0bWVudCwgX3RoaXM0LnNhdmVkKTsKICAgICAgfSk7CiAgICAgIHRoaXMuYWRkQ2hhcnRSb3codGhpcy5uZXQsIHRoaXMucmVtYWluaW5nKTsKICAgICAgdGhpcy5hZGRDaGFydFJvdyh0aGlzLnJlbWFpbmluZywgdGhpcy5zYXZlZCk7CiAgICB9LAogICAgZHJhd0V4ZW1wdGlvbnM6IGZ1bmN0aW9uIGRyYXdFeGVtcHRpb25zKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHRoaXMuaW5jb21lLmZvckVhY2goZnVuY3Rpb24gKHN0cmVhbSkgewogICAgICAgIHN0cmVhbS5leGVtcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKGV4ZW1wdGlvbikgewogICAgICAgICAgX3RoaXM1LmFkZENoYXJ0Um93KF90aGlzNS5uZXQsIGV4ZW1wdGlvbik7CgogICAgICAgICAgX3RoaXM1LnJlbWFpbmluZy52YWx1ZSAtPSBleGVtcHRpb24udmFsdWU7CgogICAgICAgICAgX3RoaXM1LmFkZENoYXJ0Um93KGV4ZW1wdGlvbiwgX3RoaXM1LnNhdmVkKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAgICogQ2hhcnQgU3R1ZmYKICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KICAgIGFkZENoYXJ0Um93OiBmdW5jdGlvbiBhZGRDaGFydFJvdyhmcm9tLCB0bykgewogICAgICB2YXIgdmFsdWUgPSBNYXRoLm1pbihmcm9tLnZhbHVlLCB0by52YWx1ZSk7CiAgICAgIGZyb20gPSBmcm9tLmxhYmVsICsgJyAoJyArIHV0aWwuZm9ybWF0TW9uZXkoZnJvbS52YWx1ZSkgKyAnKSc7CiAgICAgIHRvID0gdG8ubGFiZWwgKyAnICgnICsgdXRpbC5mb3JtYXRNb25leSh0by52YWx1ZSkgKyAnKSc7CiAgICAgIHRoaXMuY2hhcnQuYWRkUm93KFtmcm9tLCB0bywgdmFsdWVdKTsKICAgIH0sCiAgICBnZXRDaGFydFN0eWxpbmc6IGZ1bmN0aW9uIGdldENoYXJ0U3R5bGluZygpIHsKICAgICAgdmFyIGNvbG9ycyA9IFsnI2E2Y2VlMycsICcjYjJkZjhhJywgJyNmYjlhOTknLCAnI2ZkYmY2ZicsICcjY2FiMmQ2JywgJyNmZmZmOTknLCAnIzFmNzhiNCcsICcjMzNhMDJjJ107CiAgICAgIHJldHVybiB7CiAgICAgICAgc2Fua2V5OiB7CiAgICAgICAgICBub2RlOiB7CiAgICAgICAgICAgIGNvbG9yczogY29sb3JzLAogICAgICAgICAgICBub2RlUGFkZGluZzogNwogICAgICAgICAgfSwKICAgICAgICAgIGxpbms6IHsKICAgICAgICAgICAgY29sb3JNb2RlOiAnZ3JhZGllbnQnLAogICAgICAgICAgICBjb2xvcnM6IGNvbG9ycwogICAgICAgICAgfSwKICAgICAgICAgIGl0ZXJhdGlvbnM6IDAKICAgICAgICB9CiAgICAgIH07CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div id=\"sankey\"></div>\n</template>\n\n<script>\nimport google from 'google';\nimport util from '../util.js';\n\nexport default {\n    name: 'Chart',\n    props: ['income', 'expenses', 'investments', 'g', 'n', 't'],\n    data () {\n        return {\n            // calculated values\n            gross: { label: 'Gross Income', value: this.g },\n            net: { label: 'Net Income', value: this.n },\n            tax: { label: 'Taxes', value: this.t },\n            remaining: { label: 'Index Funds', value: 0 },\n\n            // expenses and investments\n            spent: { label: 'Expenses', value: 0 },\n            saved: { label: 'Investments', value: 0 },\n\n            // chart rendering\n            chart: false,\n        }\n    },\n    mounted () {\n        google.charts.load('current', {'packages':['sankey']});\n        google.charts.setOnLoadCallback(() => {\n            this.chart = new google.visualization.DataTable();\n            this.chart.addColumn('string', 'From');\n            this.chart.addColumn('string', 'To');\n            this.chart.addColumn('number', 'Amount');\n            this.drawIncomeBreakdown();\n            this.drawExpensesBreakdown();\n            this.drawInvestmentBreakdown();\n\n            var canvas = document.getElementById('sankey');\n            var chart = new google.visualization.Sankey(canvas);\n            chart.draw(this.chart, this.getChartStyling());\n        });\n    },\n    methods: {\n        /**************************************************************\n         * Income\n         **************************************************************/\n        drawIncomeBreakdown: function () {\n            this.drawGrossIncome();\n            this.drawTaxes();\n            this.drawNetIncome();\n        },\n        // draw lines: income streams -> gross\n        // treat employee matches as separate income streams\n        drawGrossIncome: function () {\n            this.income.forEach(stream => {\n                this.addChartRow(stream, this.gross);\n                stream.exemptions.forEach(exemption => {\n                    if (exemption.match > 0) {\n                        var match = {label: exemption.label+' Match', value: exemption.match};\n                        this.addChartRow(match, this.gross);\n                    }\n                });\n            })\n        },\n        // draw line: gross -> taxes\n        // draw line: taxes -> taxes\n        drawTaxes: function () {\n            this.addChartRow(this.gross, this.tax);\n            var tax = { label: 'Tax', value: this.tax.value }\n            this.addChartRow(this.tax, tax);\n            this.tax = tax;\n        },\n        // draw line: gross -> net\n        drawNetIncome: function () {\n            this.remaining.value = this.net.value;\n            this.addChartRow(this.gross, this.net);\n        },\n        /**************************************************************\n         * Expenses\n         **************************************************************/\n        drawExpensesBreakdown: function () {\n            this.spent.value = this.expenses.reduce((acc, e) => acc + e.value, this.tax.value);\n            this.addChartRow(this.tax, this.spent);\n            this.expenses.forEach(expense => {\n                this.addChartRow(this.net, expense);\n                this.remaining.value -= expense.value;\n                this.addChartRow(expense, this.spent);\n            })\n        },\n        /**************************************************************\n         * Investments\n         **************************************************************/\n        drawInvestmentBreakdown: function () {\n            this.saved.value = this.remaining.value;\n            this.drawExemptions();\n            this.investments.forEach(investment => {\n                this.addChartRow(this.net, investment);\n                this.remaining.value -= investment.value;\n                this.addChartRow(investment, this.saved);\n            })\n            this.addChartRow(this.net, this.remaining);\n            this.addChartRow(this.remaining, this.saved);\n        },\n        drawExemptions: function () {\n            this.income.forEach(stream => {\n                stream.exemptions.forEach(exemption => {\n                    this.addChartRow(this.net, exemption);\n                    this.remaining.value -= exemption.value;\n                    this.addChartRow(exemption, this.saved);\n                });\n            })\n        },\n        /**************************************************************\n         * Chart Stuff\n         **************************************************************/\n        addChartRow: function (from, to) {\n            let value = Math.min(from.value, to.value);\n            from = from.label + ' (' + util.formatMoney(from.value) + ')';\n            to   = to.label   + ' (' + util.formatMoney(to.value) + ')';\n            this.chart.addRow([from, to, value]);\n        },\n        getChartStyling: function () {\n            let colors = [\n                '#a6cee3', '#b2df8a', '#fb9a99', '#fdbf6f',\n                '#cab2d6', '#ffff99', '#1f78b4', '#33a02c'\n            ];\n            return {\n                sankey: {\n                    node: {\n                        colors: colors,\n                        nodePadding: 7\n                    },\n                    link: {\n                        colorMode: 'gradient',\n                        colors: colors\n                    },\n                    iterations: 0,\n                },\n            }\n        }\n    }\n}\n</script>\n\n<style>\n#sankey {\n    width: 100%;\n    height:300px;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}