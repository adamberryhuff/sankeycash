{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Expenses/ViewExpenses.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Expenses/ViewExpenses.vue","mtime":1599038823839},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vdXRpbC5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVmlld0V4cGVuc2VzJywKICBwcm9wczogWydleHBlbnNlc0l0ZW1pemVkJywgJ25ldFN1bScsICdleHBlbnNlU3VtJywgJ3VuYWxsb2NhdGVkU3VtJywgJ2ludmVzdG1lbnRTdW0nLCAnbW9kZSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1dGlsOiB1dGlsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZWRpdEV4cGVuc2U6IGZ1bmN0aW9uIGVkaXRFeHBlbnNlKGlkeCkgewogICAgICB0aGlzLiRlbWl0KCdlZGl0RXhwZW5zZScsIGlkeCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgYnVkZ2V0VG9vbHRpcDogZnVuY3Rpb24gYnVkZ2V0VG9vbHRpcCgpIHsKICAgICAgdmFyIHRpcCA9ICJCdWRnZXQgKCIuY29uY2F0KHV0aWwuZm9ybWF0TW9uZXkodGhpcy51bmFsbG9jYXRlZFN1bSwgdGhpcy5tb2RlKSwgIikgPSAiKTsKICAgICAgdGlwICs9ICJOZXQgSW5jb21lICgiLmNvbmNhdCh1dGlsLmZvcm1hdE1vbmV5KHRoaXMubmV0U3VtLCB0aGlzLm1vZGUpLCAiKSAtICIpOwogICAgICB0aXAgKz0gIkV4cGVuc2VzICgiLmNvbmNhdCh1dGlsLmZvcm1hdE1vbmV5KHRoaXMuZXhwZW5zZVN1bSwgdGhpcy5tb2RlKSwgIikgLSAiKTsKICAgICAgdGlwICs9ICJJbnZlc3RtZW50cyAoIi5jb25jYXQodXRpbC5mb3JtYXRNb25leSh0aGlzLmludmVzdG1lbnRTdW0sIHRoaXMubW9kZSksICIpIik7CiAgICAgIHJldHVybiB0aXA7CiAgICB9LAogICAgZXhwZW5zZVRvb2x0aXA6IGZ1bmN0aW9uIGV4cGVuc2VUb29sdGlwKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHRpcCA9ICJFeHBlbnNlcyAoIi5jb25jYXQodXRpbC5mb3JtYXRNb25leSh0aGlzLmV4cGVuc2VTdW0sIHRoaXMubW9kZSksICIpID0gIik7CiAgICAgIHRoaXMuZXhwZW5zZXNJdGVtaXplZC5mb3JFYWNoKGZ1bmN0aW9uIChleHBlbnNlKSB7CiAgICAgICAgdGlwICs9ICIiLmNvbmNhdChleHBlbnNlLmxhYmVsLCAiICgiKS5jb25jYXQodXRpbC5mb3JtYXRNb25leShleHBlbnNlLnZhbHVlLCBfdGhpcy5tb2RlKSwgIikgKyAiKTsKICAgICAgfSk7CiAgICAgIHJldHVybiB0aXAuc3Vic3RyaW5nKDAsIHRpcC5sZW5ndGggLSAyKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ViewExpenses.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAA,IAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA,CACA,kBADA,EACA,QADA,EACA,YADA,EACA,gBADA,EACA,eADA,EACA,MADA,CAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,qBAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,GAAA;AACA;AAHA,GAVA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,UAAA,GAAA,qBAAA,IAAA,CAAA,WAAA,CAAA,KAAA,cAAA,EAAA,KAAA,IAAA,CAAA,SAAA;AACA,MAAA,GAAA,0BAAA,IAAA,CAAA,WAAA,CAAA,KAAA,MAAA,EAAA,KAAA,IAAA,CAAA,SAAA;AACA,MAAA,GAAA,wBAAA,IAAA,CAAA,WAAA,CAAA,KAAA,UAAA,EAAA,KAAA,IAAA,CAAA,SAAA;AACA,MAAA,GAAA,2BAAA,IAAA,CAAA,WAAA,CAAA,KAAA,aAAA,EAAA,KAAA,IAAA,CAAA,MAAA;AACA,aAAA,GAAA;AACA,KAPA;AAQA,IAAA,cARA,4BAQA;AAAA;;AACA,UAAA,GAAA,uBAAA,IAAA,CAAA,WAAA,CAAA,KAAA,UAAA,EAAA,KAAA,IAAA,CAAA,SAAA;AACA,WAAA,gBAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,GAAA,cAAA,OAAA,CAAA,KAAA,eAAA,IAAA,CAAA,WAAA,CAAA,OAAA,CAAA,KAAA,EAAA,KAAA,CAAA,IAAA,CAAA,SAAA;AACA,OAFA;AAGA,aAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA;AAdA;AAfA,CAAA","sourcesContent":["<template>\n    <div>\n\n        <!-- expenses label -->\n        <label>Expenses</label>\n\n        <!-- expenses: net - expenses = savings -->\n        <span class=\"float-right\">\n            <span class=\"badge badge-success net-income-badge clickable\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"budgetTooltip\">\n                Unallocated<span class=\"desktop-only-inline\">: {{ util.formatMoney(unallocatedSum, mode) }}</span>\n                &nbsp;<span class=\"fa fa-question-circle\"></span>\n            </span>\n            <span class=\"badge badge-success net-income-badge clickable pad\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"expenseTooltip\">\n                Expenses<span class=\"desktop-only-inline\">: {{ util.formatMoney(expenseSum, mode) }}</span>\n                &nbsp;<span class=\"fa fa-question-circle\"></span>\n            </span>\n        </span>\n\n        <ul class=\"list-group\">\n\n            <!-- no expenses -->\n            <li class=\"list-group-item d-flex justify-content-between align-items-center disabled\" v-if=\"!expensesItemized.length\">\n                You haven't added any expenses yet.\n            </li>\n\n            <!-- expenses -->\n            <li class=\"list-group-item d-flex justify-content-between align-items-center clickable\" v-for=\"(expense, idx) in expensesItemized\" v-bind:key=\"idx\" v-on:click=\"editExpense(idx)\">\n                <div class=\"row no-gutters income-display\">\n                    <div class=\"col-md-4\">\n                        <span id=\"label\">{{ expense.label }}</span>\n                    </div>\n                    <div class=\"col-md-8\">\n                        <span class=\"badge badge-secondary\">\n                            {{ util.formatMoney(expense.value, mode) }}\n                        </span>\n                    </div>\n                </div>\n            </li>\n        </ul>\n        <small class=\"form-text text-muted\">\n            Click on an expense to edit or remove it.\n        </small>\n    </div>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'ViewExpenses',\n    props: [\n        'expensesItemized', 'netSum', 'expenseSum', 'unallocatedSum', 'investmentSum', 'mode'\n    ],\n    data () {\n        return {\n            util: util,\n        }\n    },\n    methods: {\n        editExpense: function (idx) {\n            this.$emit('editExpense', idx);\n        }\n    },\n    computed: {\n        budgetTooltip () {\n            var tip = `Budget (${util.formatMoney(this.unallocatedSum, this.mode)}) = `;\n            tip += `Net Income (${util.formatMoney(this.netSum, this.mode)}) - `;\n            tip += `Expenses (${util.formatMoney(this.expenseSum, this.mode)}) - `;\n            tip += `Investments (${util.formatMoney(this.investmentSum, this.mode)})`;\n            return tip;\n        },\n        expenseTooltip () {\n            var tip = `Expenses (${util.formatMoney(this.expenseSum, this.mode)}) = `;\n            this.expensesItemized.forEach(expense => {\n                tip += `${expense.label} (${util.formatMoney(expense.value, this.mode)}) + `;\n            })\n            return tip.substring(0, tip.length-2);\n        }\n    }\n}\n\n</script>\n\n\n<style scoped>\n.clickable {\n    cursor:pointer\n}\n.badge {\n    float:right;\n    margin:2px;\n}\n.income-display {\n    width:100%;\n}\n.net-income-badge {\n    float:initial;\n}\n\n@media only screen and (min-width: 540px) {\n    .net-income-badge {\n        margin-right: calc(0.25rem + 15px);\n    }\n}\n\n\n</style>"],"sourceRoot":"src/components/Expenses"}]}