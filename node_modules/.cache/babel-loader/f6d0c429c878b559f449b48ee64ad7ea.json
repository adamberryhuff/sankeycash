{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/thread-loader/dist/cjs.js!/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/eslint-loader/index.js??ref--13-0!/home/adam/Desktop/sankycash/src/util.js","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/util.js","mtime":1599647381562},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgKiBGb3JtYXR0aW5nIEhlbHBlcnMKICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwogIGZvcm1hdE1vbmV5OiBmdW5jdGlvbiBmb3JtYXRNb25leShxdWFudGl0eSkgewogICAgdmFyIHR5cGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICckJzsKICAgIGlmICh0eXBlICE9ICclJykgcXVhbnRpdHkgPSBNYXRoLnJvdW5kKHF1YW50aXR5KTsKCiAgICBpZiAodHlwZSA9PSAnJCcpIHsKICAgICAgcmV0dXJuICckJyArIHF1YW50aXR5LnRvU3RyaW5nKCkucmVwbGFjZSgvXEIoPz0oXGR7M30pKyg/IVxkKSkvZywgIiwiKTsKICAgIH0gZWxzZSBpZiAodHlwZSA9PSAnJScpIHsKICAgICAgcmV0dXJuIHF1YW50aXR5ICsgJyUnOwogICAgfSBlbHNlIGlmICh0eXBlID09ICfCoycpIHsKICAgICAgcmV0dXJuICfCoycgKyBxdWFudGl0eS50b1N0cmluZygpLnJlcGxhY2UoL1xCKD89KFxkezN9KSsoPyFcZCkpL2csICIsIik7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gJ+KCrCAnICsgcXVhbnRpdHkudG9TdHJpbmcoKS5yZXBsYWNlKC9cQig/PShcZHszfSkrKD8hXGQpKS9nLCAiLCIpOwogICAgfQogIH0sCiAgZm9ybWF0VGF4OiBmdW5jdGlvbiBmb3JtYXRUYXgocmF0ZSkgewogICAgcmV0dXJuIHJhdGUgKyAnJSc7CiAgfSwKCiAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAqIEluY29tZSBDYWxjdWxhdGlvbiBIZWxwZXJzCiAgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KICBnZXRUYXhhYmxlSW5jb21lOiBmdW5jdGlvbiBnZXRUYXhhYmxlSW5jb21lKGluY29tZSkgewogICAgcmV0dXJuIGluY29tZS52YWx1ZSAtIHRoaXMuZ2V0RXhlbXB0aW9ucyhpbmNvbWUpIC0gdGhpcy5nZXREZWR1Y3Rpb25zKGluY29tZSk7CiAgfSwKICBnZXRUYXg6IGZ1bmN0aW9uIGdldFRheChpbmNvbWUpIHsKICAgIHJldHVybiB0aGlzLmdldFRheGFibGVJbmNvbWUoaW5jb21lKSAqIChpbmNvbWUudGF4IC8gMTAwKTsKICB9LAogIGdldE1hdGNoOiBmdW5jdGlvbiBnZXRNYXRjaChpbmNvbWUpIHsKICAgIHJldHVybiBpbmNvbWUuZXhlbXB0aW9ucy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGUpIHsKICAgICAgcmV0dXJuIGEgKyBlLm1hdGNoOwogICAgfSwgMCk7CiAgfSwKICBnZXRFeGVtcHRpb25zOiBmdW5jdGlvbiBnZXRFeGVtcHRpb25zKGluY29tZSkgewogICAgcmV0dXJuIGluY29tZS5leGVtcHRpb25zLnJlZHVjZShmdW5jdGlvbiAoYSwgZSkgewogICAgICByZXR1cm4gYSArIGUudmFsdWU7CiAgICB9LCAwKTsKICB9LAogIGdldERlZHVjdGlvbnM6IGZ1bmN0aW9uIGdldERlZHVjdGlvbnMoaW5jb21lKSB7CiAgICByZXR1cm4gaW5jb21lLmRlZHVjdGlvbnMucmVkdWNlKGZ1bmN0aW9uIChhLCBkKSB7CiAgICAgIHJldHVybiBhICsgZC52YWx1ZTsKICAgIH0sIDApOwogIH0sCiAgZ2V0TmV0OiBmdW5jdGlvbiBnZXROZXQoaW5jb21lKSB7CiAgICByZXR1cm4gaW5jb21lLnZhbHVlIC0gdGhpcy5nZXRUYXgoaW5jb21lKSArIHRoaXMuZ2V0TWF0Y2goaW5jb21lKSAtIHRoaXMuZ2V0RGVkdWN0aW9ucyhpbmNvbWUpOwogIH0sCiAgLy8gY29sb3IgaGVscGVyCiAgc2hhZGVDb2xvcjogZnVuY3Rpb24gc2hhZGVDb2xvcihjb2xvciwgcGVyY2VudCkgewogICAgdmFyIFIgPSBwYXJzZUludChjb2xvci5zdWJzdHJpbmcoMSwgMyksIDE2KTsKICAgIHZhciBHID0gcGFyc2VJbnQoY29sb3Iuc3Vic3RyaW5nKDMsIDUpLCAxNik7CiAgICB2YXIgQiA9IHBhcnNlSW50KGNvbG9yLnN1YnN0cmluZyg1LCA3KSwgMTYpOwogICAgUiA9IHBhcnNlSW50KFIgKiAoMTAwICsgcGVyY2VudCkgLyAxMDApOwogICAgRyA9IHBhcnNlSW50KEcgKiAoMTAwICsgcGVyY2VudCkgLyAxMDApOwogICAgQiA9IHBhcnNlSW50KEIgKiAoMTAwICsgcGVyY2VudCkgLyAxMDApOwogICAgUiA9IFIgPCAyNTUgPyBSIDogMjU1OwogICAgRyA9IEcgPCAyNTUgPyBHIDogMjU1OwogICAgQiA9IEIgPCAyNTUgPyBCIDogMjU1OwogICAgdmFyIFJSID0gUi50b1N0cmluZygxNikubGVuZ3RoID09IDEgPyAiMCIgKyBSLnRvU3RyaW5nKDE2KSA6IFIudG9TdHJpbmcoMTYpOwogICAgdmFyIEdHID0gRy50b1N0cmluZygxNikubGVuZ3RoID09IDEgPyAiMCIgKyBHLnRvU3RyaW5nKDE2KSA6IEcudG9TdHJpbmcoMTYpOwogICAgdmFyIEJCID0gQi50b1N0cmluZygxNikubGVuZ3RoID09IDEgPyAiMCIgKyBCLnRvU3RyaW5nKDE2KSA6IEIudG9TdHJpbmcoMTYpOwogICAgcmV0dXJuICIjIiArIFJSICsgR0cgKyBCQjsKICB9Cn07"},{"version":3,"sources":["/home/adam/Desktop/sankycash/src/util.js"],"names":["formatMoney","quantity","type","Math","round","toString","replace","formatTax","rate","getTaxableIncome","income","value","getExemptions","getDeductions","getTax","tax","getMatch","exemptions","reduce","a","e","match","deductions","d","getNet","shadeColor","color","percent","R","parseInt","substring","G","B","RR","length","GG","BB"],"mappings":"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","sourcesContent":["export default {\n    /***************************************************************************\n     * Formatting Helpers\n     ***************************************************************************/\n    formatMoney (quantity, type='$') {\n        if (type != '%') quantity = Math.round(quantity);\n        if (type == '$') {\n            return '$' + quantity.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        } else if (type == '%') {\n            return quantity + '%';\n        } else if (type == '£') {\n            return '£' + quantity.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        } else {\n            return '€ ' + quantity.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        }\n    },\n    formatTax (rate) {\n        return rate + '%';\n    },\n    /***************************************************************************\n     * Income Calculation Helpers\n     ***************************************************************************/\n    getTaxableIncome (income) {\n        return income.value - this.getExemptions(income) - this.getDeductions(income);\n    },\n    getTax: function (income) {\n        return this.getTaxableIncome(income)*(income.tax/100);\n    },\n    getMatch: function (income) {\n        return income.exemptions.reduce((a, e) => a + e.match, 0);\n    },\n    getExemptions: function (income) {\n        return income.exemptions.reduce((a, e) => a + e.value, 0);\n    },\n    getDeductions: function (income) {\n        return income.deductions.reduce((a, d) => a + d.value, 0);\n    },\n    getNet: function (income) {\n        return income.value - this.getTax(income) + this.getMatch(income) - this.getDeductions(income);\n    },\n    // color helper\n    shadeColor: function (color, percent) {\n        var R = parseInt(color.substring(1,3),16);\n        var G = parseInt(color.substring(3,5),16);\n        var B = parseInt(color.substring(5,7),16);\n\n        R = parseInt(R * (100 + percent) / 100);\n        G = parseInt(G * (100 + percent) / 100);\n        B = parseInt(B * (100 + percent) / 100);\n\n        R = (R<255)?R:255;\n        G = (G<255)?G:255;\n        B = (B<255)?B:255;\n\n        var RR = ((R.toString(16).length==1)?\"0\"+R.toString(16):R.toString(16));\n        var GG = ((G.toString(16).length==1)?\"0\"+G.toString(16):G.toString(16));\n        var BB = ((B.toString(16).length==1)?\"0\"+B.toString(16):B.toString(16));\n\n        return \"#\"+RR+GG+BB;\n    }\n}"]}]}