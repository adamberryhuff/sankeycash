{"remainingRequest":"/home/adam/Desktop/sankycash/node_modules/thread-loader/dist/cjs.js!/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js!/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adam/Desktop/sankycash/src/components/Incomes/ViewIncomes.vue","mtime":1598558845224},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adam/Desktop/sankycash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgdXRpbCBmcm9tICcuLi8uLi91dGlsLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdWaWV3SW5jb21lcycsCiAgcHJvcHM6IFsnaW5jb21lc0l0ZW1pemVkJywgJ3VuYWxsb2NhdGVkU3VtJywgJ2dyb3NzU3VtJywgJ3RheFN1bScsICduZXRTdW0nXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXRpbDogdXRpbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJlbW92ZUluY29tZTogZnVuY3Rpb24gcmVtb3ZlSW5jb21lKGlkeCwgaW5jb21lKSB7CiAgICAgIHZhciBuZXQgPSB0aGlzLmdldE5ldChpbmNvbWUpOwogICAgICBuZXQgPSBuZXQgLSBpbmNvbWUuZXhlbXB0aW9ucy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGUpIHsKICAgICAgICByZXR1cm4gYSArIGUudmFsdWUgKyBlLm1hdGNoOwogICAgICB9LCAwKTsKCiAgICAgIGlmIChuZXQgPiB0aGlzLnVuYWxsb2NhdGVkU3VtKSB7CiAgICAgICAgYWxlcnQoIllvdSBjYW5ub3QgcmVtb3ZlIHRoaXMgaW5jb21lIHN0cmVhbSB1bnRpbCB5b3UgZnJlZSB1cCBhdCBsZWFzdCAiLmNvbmNhdCh1dGlsLmZvcm1hdE1vbmV5KG5ldCksICIgaW50byB5b3VyIHVuYWxsb2NhdGVkIGJ1ZGdldC4gWW91IG11c3QgcmVtb3ZlIGF0IGxlYXN0ICIpLmNvbmNhdCh1dGlsLmZvcm1hdE1vbmV5KG5ldCAtIHRoaXMudW5hbGxvY2F0ZWRTdW0pLCAiIGluIGV4cGVuc2VzIG9yIGludmVzdG1lbnRzIGJlZm9yZSB5b3UgY2FuIHJlbW92ZSB0aGlzIGluY29tZSBzdHJlYW0uIikpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKGNvbmZpcm0oIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byByZW1vdmUgdGhpcyBpbmNvbWUgc3RyZWFtPyIpKSB7CiAgICAgICAgdGhpcy4kZW1pdCgncmVtb3ZlSW5jb21lJywgaWR4KTsKICAgICAgfQogICAgfSwKICAgIGdldFRheGFibGVJbmNvbWU6IGZ1bmN0aW9uIGdldFRheGFibGVJbmNvbWUoaW5jb21lKSB7CiAgICAgIHZhciB2YWx1ZSA9IGluY29tZS52YWx1ZTsKICAgICAgaW5jb21lLmV4ZW1wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoZXhlbXB0aW9uKSB7CiAgICAgICAgdmFsdWUgLT0gZXhlbXB0aW9uLnZhbHVlOwogICAgICB9KTsKICAgICAgcmV0dXJuIHZhbHVlOwogICAgfSwKICAgIGdldFRheDogZnVuY3Rpb24gZ2V0VGF4KGluY29tZSkgewogICAgICB2YXIgdmFsdWUgPSBpbmNvbWUudmFsdWU7CiAgICAgIHZhbHVlIC09IGluY29tZS5leGVtcHRpb25zLnJlZHVjZShmdW5jdGlvbiAoYSwgZSkgewogICAgICAgIHJldHVybiBhICsgZS52YWx1ZTsKICAgICAgfSwgMCk7CiAgICAgIHJldHVybiB2YWx1ZSAqIChpbmNvbWUudGF4IC8gMTAwKTsKICAgIH0sCiAgICBnZXRNYXRjaDogZnVuY3Rpb24gZ2V0TWF0Y2goaW5jb21lKSB7CiAgICAgIHJldHVybiBpbmNvbWUuZXhlbXB0aW9ucy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGUpIHsKICAgICAgICByZXR1cm4gYSArIGUubWF0Y2g7CiAgICAgIH0sIDApOwogICAgfSwKICAgIGdldE5ldDogZnVuY3Rpb24gZ2V0TmV0KGluY29tZSkgewogICAgICByZXR1cm4gaW5jb21lLnZhbHVlIC0gdGhpcy5nZXRUYXgoaW5jb21lKSArIHRoaXMuZ2V0TWF0Y2goaW5jb21lKTsKICAgIH0sCiAgICBnZXRFeGVtcHRpb25zOiBmdW5jdGlvbiBnZXRFeGVtcHRpb25zKGluY29tZSkgewogICAgICByZXR1cm4gaW5jb21lLmV4ZW1wdGlvbnMucmVkdWNlKGZ1bmN0aW9uIChhLCBlKSB7CiAgICAgICAgcmV0dXJuIGEgKyBlLnZhbHVlOwogICAgICB9LCAwKTsKICAgIH0sCiAgICBnZXROZXREaXNwbGF5OiBmdW5jdGlvbiBnZXROZXREaXNwbGF5KGluY29tZSkgewogICAgICB2YXIgbmV0ID0gdXRpbC5mb3JtYXRNb25leSh0aGlzLmdldE5ldChpbmNvbWUpKTsKICAgICAgcmV0dXJuICJOZXQ6ICIuY29uY2F0KG5ldCk7CiAgICB9LAogICAgZ2V0TmV0VG9vbHRpcDogZnVuY3Rpb24gZ2V0TmV0VG9vbHRpcChpbmNvbWUpIHsKICAgICAgdmFyIGV4ZW1wdGlvbnMgPSB1dGlsLmZvcm1hdE1vbmV5KHRoaXMuZ2V0RXhlbXB0aW9ucyhpbmNvbWUpKTsKICAgICAgdmFyIG1hdGNoID0gdXRpbC5mb3JtYXRNb25leSh0aGlzLmdldE1hdGNoKGluY29tZSkpOwogICAgICB2YXIgZ3Jvc3MgPSB1dGlsLmZvcm1hdE1vbmV5KGluY29tZS52YWx1ZSk7CiAgICAgIHZhciB0YXggPSB1dGlsLmZvcm1hdFRheChpbmNvbWUudGF4KTsKICAgICAgdmFyIHRheGFibGUgPSB1dGlsLmZvcm1hdE1vbmV5KHRoaXMuZ2V0VGF4YWJsZUluY29tZShpbmNvbWUpKTsKICAgICAgdmFyIHRpcCA9ICcnOwoKICAgICAgaWYgKGluY29tZS5leGVtcHRpb25zLmxlbmd0aCkgewogICAgICAgIHRpcCArPSAiRXhlbXB0aW9ucyAoIi5jb25jYXQoZXhlbXB0aW9ucywgIikgPSAiKTsKICAgICAgICBpbmNvbWUuZXhlbXB0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChleGVtcHRpb24pIHsKICAgICAgICAgIHRpcCArPSAiIi5jb25jYXQoZXhlbXB0aW9uLmxhYmVsLCAiICIpOwogICAgICAgICAgdGlwICs9ICIoIi5jb25jYXQodXRpbC5mb3JtYXRNb25leShleGVtcHRpb24udmFsdWUpLCAiKSArICIpOwogICAgICAgIH0pOwogICAgICAgIHRpcCA9IHRpcC5zdWJzdHJpbmcoMCwgdGlwLmxlbmd0aCAtIDIpOwogICAgICAgIHRpcCArPSAiPGJyPjxicj5FbXBsb3llZSBNYXRjaCAoIi5jb25jYXQobWF0Y2gsICIpID0gIik7CiAgICAgICAgaW5jb21lLmV4ZW1wdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoZXhlbXB0aW9uKSB7CiAgICAgICAgICB0aXAgKz0gIiIuY29uY2F0KGV4ZW1wdGlvbi5sYWJlbCwgIiAiKTsKICAgICAgICAgIHRpcCArPSAiKCIuY29uY2F0KHV0aWwuZm9ybWF0TW9uZXkoZXhlbXB0aW9uLm1hdGNoKSwgIikgKyAiKTsKICAgICAgICB9KTsKICAgICAgICB0aXAgPSB0aXAuc3Vic3RyaW5nKDAsIHRpcC5sZW5ndGggLSAyKTsKICAgICAgICB0aXAgKz0gIjxicj48YnI+IjsKICAgICAgICB0aXAgKz0gIlRheGFibGUgSW5jb21lICgiLmNvbmNhdCh0YXhhYmxlLCAiKSA9IEdyb3NzICIpLmNvbmNhdChncm9zcywgIiAtICIpOwogICAgICAgIHRpcCArPSAiRXhlbXB0aW9ucyAoIi5jb25jYXQoZXhlbXB0aW9ucywgIik8YnI+PGJyPiIpOwogICAgICB9IC8vIG5ldAoKCiAgICAgIHZhciBuZXQgPSAiR3Jvc3MgKCIuY29uY2F0KGdyb3NzLCAiKSAtIEdyb3NzICgiKS5jb25jYXQoZ3Jvc3MsICIpICogVGF4ICgiKS5jb25jYXQodGF4LCAiKSIpOwogICAgICB0aXAgKz0gdGhpcy5nZXROZXREaXNwbGF5KGluY29tZSkgKyAiID0gIjsKCiAgICAgIGlmIChpbmNvbWUuZXhlbXB0aW9ucy5sZW5ndGgpIHsKICAgICAgICB0aXAgKz0gIkV4ZW1wdGlvbnMgKCIuY29uY2F0KGV4ZW1wdGlvbnMsICIpICsgIik7CiAgICAgICAgdGlwICs9ICJFbXBsb3llZSBNYXRjaCAoIi5jb25jYXQobWF0Y2gsICIpICsgIik7CiAgICAgICAgbmV0ID0gIlRheGFibGUgSW5jb21lICgiLmNvbmNhdCh0YXhhYmxlLCAiKSAtIFRheGFibGUgSW5jb21lICgiKS5jb25jYXQodGF4YWJsZSwgIikgKiAiKTsKICAgICAgICBuZXQgKz0gIlRheCAoIi5jb25jYXQodGF4LCAiKSIpOwogICAgICB9CgogICAgICByZXR1cm4gdGlwICsgbmV0OwogICAgfSwKICAgIGdldEdyb3NzRGlzcGxheTogZnVuY3Rpb24gZ2V0R3Jvc3NEaXNwbGF5KGluY29tZSkgewogICAgICB2YXIgZ3Jvc3MgPSB1dGlsLmZvcm1hdE1vbmV5KGluY29tZS52YWx1ZSk7CiAgICAgIHJldHVybiAiR3Jvc3M6ICIuY29uY2F0KGdyb3NzKTsKICAgIH0sCiAgICBnZXRFeGVtcHRpb25EaXNwbGF5OiBmdW5jdGlvbiBnZXRFeGVtcHRpb25EaXNwbGF5KGV4ZW1wdGlvbikgewogICAgICB2YXIgY29udHJpYnV0aW9uID0gdXRpbC5mb3JtYXRNb25leShleGVtcHRpb24udmFsdWUpOwogICAgICB2YXIgbWF0Y2ggPSB1dGlsLmZvcm1hdE1vbmV5KGV4ZW1wdGlvbi5tYXRjaCk7CiAgICAgIHJldHVybiAiIi5jb25jYXQoZXhlbXB0aW9uLmxhYmVsLCAiOiAiKS5jb25jYXQoY29udHJpYnV0aW9uLCAiICsgICIpLmNvbmNhdChtYXRjaCwgIiBNYXRjaCIpOwogICAgfSwKICAgIGdldEluY29tZURpc3BsYXk6IGZ1bmN0aW9uIGdldEluY29tZURpc3BsYXkoaW5jb21lKSB7CiAgICAgIHZhciB0YXhhYmxlID0gdXRpbC5mb3JtYXRNb25leSh0aGlzLmdldFRheGFibGVJbmNvbWUoaW5jb21lKSk7CiAgICAgIHZhciB0YXggPSB1dGlsLmZvcm1hdFRheChpbmNvbWUudGF4KTsKICAgICAgcmV0dXJuICIiLmNvbmNhdChpbmNvbWUubGFiZWwsICI6ICIpLmNvbmNhdCh0YXhhYmxlLCAiIEAgIikuY29uY2F0KHRheCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgbmV0VG9vbHRpcDogZnVuY3Rpb24gbmV0VG9vbHRpcCgpIHsKICAgICAgdmFyIHRpcCA9ICJOZXQgKCIuY29uY2F0KHV0aWwuZm9ybWF0TW9uZXkodGhpcy5uZXRTdW0pLCAiKSA9ICIpOwogICAgICB0aXAgKz0gIkdyb3NzICgiLmNvbmNhdCh1dGlsLmZvcm1hdE1vbmV5KHRoaXMuZ3Jvc3NTdW0pLCAiKSAtICIpOwogICAgICB0aXAgKz0gIlRheCAoIi5jb25jYXQodXRpbC5mb3JtYXRNb25leSh0aGlzLnRheFN1bSksICIpIik7CiAgICAgIHJldHVybiB0aXA7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ViewIncomes.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n\n        <!-- income streams label -->\n        <label>Income Streams</label>\n\n        <!-- income streams gross, tax, net -->\n        <span class=\"float-right net-income\">\n            <span class=\"badge badge-success badge-pill net-income-badge clickable\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"netTooltip\">\n                Net: {{ util.formatMoney(netSum) }}\n                <span class=\"fa fa-question-circle\"></span>\n            </span>\n        </span>\n\n        <ul class=\"list-group\">\n\n            <!-- no income streams -->\n            <li class=\"list-group-item d-flex justify-content-between align-items-center disabled\" v-if=\"!incomesItemized.length\">\n                You haven't added any income streams yet.\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center clickable\" v-for=\"(income, idx) in incomesItemized\" v-bind:key=\"income.label\" v-on:click=\"removeIncome(idx, income)\">\n                <div class=\"row no-gutters income-display\">\n                    <div class=\"col-md-4\">\n                        <span id=\"label\">{{ income.label }}</span>\n                    </div>\n                    <div class=\"col-md-8\">\n                        <span class=\"badge badge-primary badge-pill clickable\" data-toggle=\"tooltip\" data-placement=\"top\" :title=\"getNetTooltip(income)\" data-html=\"true\">\n                            {{ getNetDisplay(income) }}\n                            <span class=\"fa fa-question-circle\"></span>\n                        </span>\n                        <span class=\"badge badge-primary badge-pill\">\n                            {{ getGrossDisplay(income) }}\n                        </span><br>\n                        <span v-for=\"(exemption, idx) in income.exemptions\" v-bind:key=\"idx\">\n                            <span class=\"badge badge-secondary badge-pill\" v-if=\"exemption.value > 0\">\n                                {{ getExemptionDisplay(exemption) }}\n                            </span>&nbsp;\n                        </span>\n                        <span class=\"badge badge-secondary badge-pill float-right\">\n                            {{ getIncomeDisplay(income) }}\n                        </span>\n                    </div>\n                </div>\n            </li>\n        </ul>\n        <small class=\"form-text text-muted\">\n            Click on an income stream to remove it.\n        </small>\n    </div>\n</template>\n\n\n<script>\nimport util from '../../util.js';\n\nexport default {\n    name: 'ViewIncomes',\n    props: ['incomesItemized', 'unallocatedSum', 'grossSum', 'taxSum', 'netSum'],\n    data () {\n        return {\n            util: util,\n        }\n    },\n    methods: {\n        removeIncome: function (idx, income) {\n            let net = this.getNet(income);\n            net = net - income.exemptions.reduce((a, e) => a + e.value + e.match, 0);\n            if (net > this.unallocatedSum) {\n                alert(`You cannot remove this income stream until you free up at least ${util.formatMoney(net)} into your unallocated budget. You must remove at least ${util.formatMoney(net-this.unallocatedSum)} in expenses or investments before you can remove this income stream.`);\n                return;\n            }\n            if (confirm(\"Are you sure you want to remove this income stream?\")) {\n                this.$emit('removeIncome', idx);\n            }\n        },\n        getTaxableIncome: function (income) {\n            var value = income.value;\n            income.exemptions.forEach(exemption => {\n                value -= exemption.value;\n            })\n            return value;\n        },\n        getTax: function (income) {\n            let value = income.value;\n            value -= income.exemptions.reduce((a, e) => a + e.value, 0);\n            return value*(income.tax/100);\n        },\n        getMatch: function (income) {\n            return income.exemptions.reduce((a, e) => a + e.match, 0);\n        },\n        getNet: function (income) {\n            return income.value - this.getTax(income) + this.getMatch(income);\n        },\n        getExemptions: function (income) {\n            return income.exemptions.reduce((a, e) => a + e.value, 0);\n        },\n        getNetDisplay: function (income) {\n            let net = util.formatMoney(this.getNet(income));\n            return `Net: ${net}`;\n        },\n        getNetTooltip: function (income) {\n            var exemptions = util.formatMoney(this.getExemptions(income));\n            var match = util.formatMoney(this.getMatch(income));\n            var gross = util.formatMoney(income.value);\n            var tax = util.formatTax(income.tax);\n            var taxable = util.formatMoney(this.getTaxableIncome(income));\n\n            var tip = '';\n            if (income.exemptions.length) {\n                tip += `Exemptions (${exemptions}) = `;\n                income.exemptions.forEach(exemption => {\n                    tip += `${exemption.label} `;\n                    tip += `(${util.formatMoney(exemption.value)}) + `;\n                });\n                tip = tip.substring(0, tip.length-2);\n                tip += `<br><br>Employee Match (${match}) = `\n                income.exemptions.forEach(exemption => {\n                    tip += `${exemption.label} `;\n                    tip += `(${util.formatMoney(exemption.match)}) + `;\n                });\n                tip = tip.substring(0, tip.length-2);\n                tip += `<br><br>`;\n                tip += `Taxable Income (${taxable}) = Gross ${gross} - `;\n                tip += `Exemptions (${exemptions})<br><br>`;\n            }\n\n            // net\n            var net = `Gross (${gross}) - Gross (${gross}) * Tax (${tax})`;\n            tip += this.getNetDisplay(income) + ` = `;\n            if (income.exemptions.length) {\n                tip += `Exemptions (${exemptions}) + `;\n                tip += `Employee Match (${match}) + `\n                net = `Taxable Income (${taxable}) - Taxable Income (${taxable}) * `;\n                net += `Tax (${tax})`;\n            }\n            return tip + net;\n        },\n        getGrossDisplay: function (income) {\n            let gross = util.formatMoney(income.value);\n            return `Gross: ${gross}`\n        },\n        getExemptionDisplay: function (exemption) {\n            let contribution = util.formatMoney(exemption.value);\n            let match        = util.formatMoney(exemption.match);\n            return `${exemption.label}: ${contribution} +  ${match} Match`;\n        },\n        getIncomeDisplay: function (income) {\n            let taxable = util.formatMoney(this.getTaxableIncome(income));\n            let tax     = util.formatTax(income.tax);\n            return `${income.label}: ${taxable} @ ${tax}`;\n        },\n    },\n    computed: {\n        netTooltip () {\n            var tip = `Net (${util.formatMoney(this.netSum)}) = `;\n            tip += `Gross (${util.formatMoney(this.grossSum)}) - `;\n            tip += `Tax (${util.formatMoney(this.taxSum)})`;\n            return tip;\n        }\n    },\n}\n\n</script>\n\n\n<style scoped>\n.clickable {\n    cursor:pointer\n}\n.badge {\n    float:right;\n    margin:2px;\n}\n.income-display {\n    width:100%;\n}\n.net-income {\n    padding-right: 1.25rem;\n}\n.net-income-badge {\n    float:initial;\n}\n</style>"],"sourceRoot":"src/components/Incomes"}]}